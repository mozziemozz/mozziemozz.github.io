<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Teams Admin Center on HEUSSER.PRO</title>
        <link>https://heusser.pro/categories/teams-admin-center/</link>
        <description>Recent content in Teams Admin Center on HEUSSER.PRO</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Sun, 26 May 2024 10:06:44 +0000</lastBuildDate><atom:link href="https://heusser.pro/categories/teams-admin-center/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Microsoft Teams Auto Attendants: What You Didn&#39;t Know Part 2</title>
        <link>https://heusser.pro/p/microsoft-teams-auto-attendants-what-you-didnt-know-part-2-iz5ftexar5sq/</link>
        <pubDate>Sun, 26 May 2024 10:06:44 +0000</pubDate>
        
        <guid>https://heusser.pro/p/microsoft-teams-auto-attendants-what-you-didnt-know-part-2-iz5ftexar5sq/</guid>
        <description>&lt;h2 id=&#34;intro&#34;&gt;Intro&lt;/h2&gt;
&lt;p&gt;I always love it when members of the community reach out to me via Twitter (Sorry, I&amp;rsquo;m still not calling it X&amp;hellip;), LinkedIn, or any other way. Last week, somebody named Ben reached out to me regarding an issue one of his Teams Phone clients was facing. He turned to me because apparently he couldn&amp;rsquo;t find an answer anywhere online and nor was Microsoft Support able to help him. To me, that&amp;rsquo;s what being an MVP is all about. Being able to help others by sharing knowledge and by providing technical expertise.&lt;/p&gt;
&lt;h2 id=&#34;the-problem&#34;&gt;The Problem&lt;/h2&gt;
&lt;p&gt;The problem was that Teams auto attendants are automatically disconnecting a call after some time, if the caller makes no selection in a voice menu. I tested this myself and discovered that the auto attendant will disconnect the call after the IVR greeting has been played back three times. That means that there is no hardcoded timeout value and the time to disconnect depends on how long the greeting is. Before the call is disconnected, callers will hear the greeting: &lt;code&gt;Sorry, we cannot connect your call at the moment. Please try again later.&lt;/code&gt; Even though I personally don&amp;rsquo;t view this as a real problem but rather a slight inconvenience, it was really important to Ben/his client that the caller is sent to voicemail if no selection is made by the caller in the voice menu.&lt;/p&gt;
&lt;h2 id=&#34;the-solution&#34;&gt;The Solution&lt;/h2&gt;
&lt;p&gt;After understanding the issue, I just thought that adding an operator to the auto attendant and assigning a dial key to the operator in the voice menu will likely fix the issue. Luckily, I was correct and that indeed proved itself to be the solution.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;If you don&amp;rsquo;t want to hang up on callers who just &amp;ldquo;hang out&amp;rdquo; in your auto attendant menus, make sure that you add an operator to your attendant.&lt;/strong&gt; As a reminder, an operater can be one of the following types:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/microsoft-teams-auto-attendants-what-you-didnt-know-part-2-iz5ftexar5sq/44b04089-e32a-40ed-b42f-08001084f0fb.png&#34;
	width=&#34;973&#34;
	height=&#34;532&#34;
	srcset=&#34;https://heusser.pro/p/microsoft-teams-auto-attendants-what-you-didnt-know-part-2-iz5ftexar5sq/44b04089-e32a-40ed-b42f-08001084f0fb_hu860f38c1cfa56048c74e18f98b3e1450_44090_480x0_resize_box_3.png 480w, https://heusser.pro/p/microsoft-teams-auto-attendants-what-you-didnt-know-part-2-iz5ftexar5sq/44b04089-e32a-40ed-b42f-08001084f0fb_hu860f38c1cfa56048c74e18f98b3e1450_44090_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Supported operator types are: Teams user (Person in your organization), voice apps (auto attendants, call queues) or external phone numbers (in this case the auto attendant&amp;rsquo;s resource account needs to be set up for outbound calling as well).&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;182&#34;
		data-flex-basis=&#34;438px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Read more about the requirements for auto attendant transfers to external phone numbers &lt;a class=&#34;link&#34; href=&#34;https://learn.microsoft.com/en-us/microsoftteams/create-a-phone-system-auto-attendant?tabs=general-info#external-phone-number-transfers---technical-details&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you want to send callers who idle around in a voice menu to a voicemail, I still recommend to set up a call queue with overflow threshold 0 instead of an auto attendant. I explained the reason for that &lt;a class=&#34;link&#34; href=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-microsoft-teams-phone-and-shared-voicemail-4df01cb28e24/#one-lastcaveat&#34; &gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;example-diagrams&#34;&gt;Example Diagrams&lt;/h3&gt;
&lt;p&gt;Here you can see that this auto attendant has a default call flow greeting and an a voice menu greeting. Only the voice menu greeting will be repeated if no selection is made. The default call flow greeting will only be played back once.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/microsoft-teams-auto-attendants-what-you-didnt-know-part-2-iz5ftexar5sq/NoOperator.png&#34;
	width=&#34;7840&#34;
	height=&#34;11980&#34;
	srcset=&#34;https://heusser.pro/p/microsoft-teams-auto-attendants-what-you-didnt-know-part-2-iz5ftexar5sq/NoOperator_hue76ef7c82c9c7cb5f9bbb75ed3323777_1586825_480x0_resize_box_3.png 480w, https://heusser.pro/p/microsoft-teams-auto-attendants-what-you-didnt-know-part-2-iz5ftexar5sq/NoOperator_hue76ef7c82c9c7cb5f9bbb75ed3323777_1586825_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Since there is no operator configured on this auto attendant, the call will disconnect if the caller hasn&amp;rsquo;t made a selection before the voice menu greeting has been played back three times.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;65&#34;
		data-flex-basis=&#34;157px&#34;
	
&gt; &lt;img src=&#34;https://heusser.pro/p/microsoft-teams-auto-attendants-what-you-didnt-know-part-2-iz5ftexar5sq/WithOperator.png&#34;
	width=&#34;7840&#34;
	height=&#34;12490&#34;
	srcset=&#34;https://heusser.pro/p/microsoft-teams-auto-attendants-what-you-didnt-know-part-2-iz5ftexar5sq/WithOperator_hu89408d2c6554e9892854c23a9fef4a89_1738103_480x0_resize_box_3.png 480w, https://heusser.pro/p/microsoft-teams-auto-attendants-what-you-didnt-know-part-2-iz5ftexar5sq/WithOperator_hu89408d2c6554e9892854c23a9fef4a89_1738103_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;In this case, I&amp;rsquo;ve added an operator to the auto attendant and also added it as a selection in the voice menu which means the call will be transferred to the operator, if no selection is made by the caller before the message has been played back three times.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;62&#34;
		data-flex-basis=&#34;150px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;If you don&amp;rsquo;t want callers to dial the operator straight away, you can just not include any hint in the greeting, that it could be dialed by pressing &lt;code&gt;0&lt;/code&gt; (or whatever dial key you&amp;rsquo;ve assigned to the operator). You can see that my greeting &lt;code&gt;Please press 1 for English or 2 for German&lt;/code&gt; doesn&amp;rsquo;t mention anything about an operator.&lt;/p&gt;
&lt;p&gt;I didn&amp;rsquo;t expand the nested queues in these diagrams so the operator only shows as &lt;strong&gt;Call Queue VIP Support CQ&lt;/strong&gt; but that actually forwards to a shared voicemail immediately.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/microsoft-teams-auto-attendants-what-you-didnt-know-part-2-iz5ftexar5sq/CallQueueVoicemail.png&#34;
	width=&#34;480&#34;
	height=&#34;732&#34;
	srcset=&#34;https://heusser.pro/p/microsoft-teams-auto-attendants-what-you-didnt-know-part-2-iz5ftexar5sq/CallQueueVoicemail_hubc66e5ef0d8d76a85bbedb9c0fb458aa_59041_480x0_resize_box_3.png 480w, https://heusser.pro/p/microsoft-teams-auto-attendants-what-you-didnt-know-part-2-iz5ftexar5sq/CallQueueVoicemail_hubc66e5ef0d8d76a85bbedb9c0fb458aa_59041_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;This is the call queue that forwards immediately to shared voicemail.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;65&#34;
		data-flex-basis=&#34;157px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;configuration-in-teams-admin-center&#34;&gt;Configuration in Teams Admin Center&lt;/h3&gt;
&lt;p&gt;This is how your auto attendant must be configured.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/microsoft-teams-auto-attendants-what-you-didnt-know-part-2-iz5ftexar5sq/image.png&#34;
	width=&#34;1313&#34;
	height=&#34;813&#34;
	srcset=&#34;https://heusser.pro/p/microsoft-teams-auto-attendants-what-you-didnt-know-part-2-iz5ftexar5sq/image_hu040390ba1bb2a810f5549ed860b2ea6d_77121_480x0_resize_box_3.png 480w, https://heusser.pro/p/microsoft-teams-auto-attendants-what-you-didnt-know-part-2-iz5ftexar5sq/image_hu040390ba1bb2a810f5549ed860b2ea6d_77121_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;First, add an operator to the auto attendant. In this case, I&amp;rsquo;m using a voice app (call queue).&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;161&#34;
		data-flex-basis=&#34;387px&#34;
	
&gt; &lt;img src=&#34;https://heusser.pro/p/microsoft-teams-auto-attendants-what-you-didnt-know-part-2-iz5ftexar5sq/image-1.png&#34;
	width=&#34;1522&#34;
	height=&#34;942&#34;
	srcset=&#34;https://heusser.pro/p/microsoft-teams-auto-attendants-what-you-didnt-know-part-2-iz5ftexar5sq/image-1_huff13491d3a6371a27741818abc25cbae_80507_480x0_resize_box_3.png 480w, https://heusser.pro/p/microsoft-teams-auto-attendants-what-you-didnt-know-part-2-iz5ftexar5sq/image-1_huff13491d3a6371a27741818abc25cbae_80507_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;In the default call flow, make sure to assign a dial key to the operator and not to the voice app itself.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;161&#34;
		data-flex-basis=&#34;387px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;
&lt;p&gt;I think this is another great example that Teams Phone is slowly maturing and that in fact, most features and scenarios one would expect can be realized. It&amp;rsquo;s just that sometimes it can be a little hard to discover or figure our how something can be achieved. That&amp;rsquo;s what we have the Teams community for. I hope that this short tutorial helps others as well.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Teams Call Queues now Support Greetings in Exception Handlings</title>
        <link>https://heusser.pro/p/teams-call-queues-now-support-greetings-in-exception-handlings-1ye1avs43jps/</link>
        <pubDate>Wed, 01 May 2024 15:31:57 +0000</pubDate>
        
        <guid>https://heusser.pro/p/teams-call-queues-now-support-greetings-in-exception-handlings-1ye1avs43jps/</guid>
        <description>&lt;img src="https://heusser.pro/p/teams-call-queues-now-support-greetings-in-exception-handlings-1ye1avs43jps/cover.png" alt="Featured image of post Teams Call Queues now Support Greetings in Exception Handlings" /&gt;&lt;h2 id=&#34;how-it-was-before&#34;&gt;How It Was Before&lt;/h2&gt;
&lt;p&gt;I noticed a whole lot of new properties returned by &lt;code&gt;Get-CsCallQueue&lt;/code&gt; quite a while ago but somehow I completely missed that Microsoft has now added this feature in Teams Admin Center. Before this was rolled out, the only way to play a message before disconnecting when a call timed out, when there were too many concurrent calls or when no agents were available in a call queue, you had to forward the call to an additional auto attendant which only played the message and then disconnected the call.&lt;/p&gt;
&lt;p&gt;A call flow which had no message looked like this. The call disconnected without any message.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-call-queues-now-support-greetings-in-exception-handlings-1ye1avs43jps/PS_Test_EV_Enabled_CQ_CallFlow.png&#34;
	width=&#34;2110&#34;
	height=&#34;3840&#34;
	srcset=&#34;https://heusser.pro/p/teams-call-queues-now-support-greetings-in-exception-handlings-1ye1avs43jps/PS_Test_EV_Enabled_CQ_CallFlow_hu9a41712bea05c105cce00e8ee4d47d78_457578_480x0_resize_box_3.png 480w, https://heusser.pro/p/teams-call-queues-now-support-greetings-in-exception-handlings-1ye1avs43jps/PS_Test_EV_Enabled_CQ_CallFlow_hu9a41712bea05c105cce00e8ee4d47d78_457578_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;No Disconnect Message&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;54&#34;
		data-flex-basis=&#34;131px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;A call flow using the workaround with an additional auto attendant looked like this. The call had to be forwarded to an auto attendant so that a message could be played back before disconnecting the call.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-call-queues-now-support-greetings-in-exception-handlings-1ye1avs43jps/PS_Test_EV_Enabled_CQ_CallFlow_Disconnect_AA.png&#34;
	width=&#34;1947&#34;
	height=&#34;3840&#34;
	srcset=&#34;https://heusser.pro/p/teams-call-queues-now-support-greetings-in-exception-handlings-1ye1avs43jps/PS_Test_EV_Enabled_CQ_CallFlow_Disconnect_AA_hud8799100385cd5077c67ca0694550ab6_430101_480x0_resize_box_3.png 480w, https://heusser.pro/p/teams-call-queues-now-support-greetings-in-exception-handlings-1ye1avs43jps/PS_Test_EV_Enabled_CQ_CallFlow_Disconnect_AA_hud8799100385cd5077c67ca0694550ab6_430101_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Disconnect Message on Auto Attendant&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;50&#34;
		data-flex-basis=&#34;121px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;While it wasn&amp;rsquo;t very hard to build something like that, it certainly required more time and added unnecessary complexity to otherwise relatively simple call flows.&lt;/p&gt;
&lt;h2 id=&#34;whats-changed&#34;&gt;What&amp;rsquo;s Changed?&lt;/h2&gt;
&lt;p&gt;With the recently added functionality, it&amp;rsquo;s now possible to configure greetings on call queues in exception handling actions. At the time of writing this blog post it&amp;rsquo;s possible to configure a greeting for &lt;strong&gt;Disconnect&lt;/strong&gt; and &lt;strong&gt;Redirect to External Phone Number&lt;/strong&gt; or &lt;strong&gt;Redirect to Voice App&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-call-queues-now-support-greetings-in-exception-handlings-1ye1avs43jps/image.png&#34;
	width=&#34;1992&#34;
	height=&#34;826&#34;
	srcset=&#34;https://heusser.pro/p/teams-call-queues-now-support-greetings-in-exception-handlings-1ye1avs43jps/image_hu7bd3392f7dd1ded220a4677d786033d2_57355_480x0_resize_box_3.png 480w, https://heusser.pro/p/teams-call-queues-now-support-greetings-in-exception-handlings-1ye1avs43jps/image_hu7bd3392f7dd1ded220a4677d786033d2_57355_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Greeting on Disconnect&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;241&#34;
		data-flex-basis=&#34;578px&#34;
	
&gt; &lt;img src=&#34;https://heusser.pro/p/teams-call-queues-now-support-greetings-in-exception-handlings-1ye1avs43jps/image-1.png&#34;
	width=&#34;1398&#34;
	height=&#34;655&#34;
	srcset=&#34;https://heusser.pro/p/teams-call-queues-now-support-greetings-in-exception-handlings-1ye1avs43jps/image-1_hua1d7e441c45ba0c67456bb739528297b_43345_480x0_resize_box_3.png 480w, https://heusser.pro/p/teams-call-queues-now-support-greetings-in-exception-handlings-1ye1avs43jps/image-1_hua1d7e441c45ba0c67456bb739528297b_43345_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Greeting for Redirect to Phone Number&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;213&#34;
		data-flex-basis=&#34;512px&#34;
	
&gt; &lt;img src=&#34;https://heusser.pro/p/teams-call-queues-now-support-greetings-in-exception-handlings-1ye1avs43jps/image-2.png&#34;
	width=&#34;1412&#34;
	height=&#34;960&#34;
	srcset=&#34;https://heusser.pro/p/teams-call-queues-now-support-greetings-in-exception-handlings-1ye1avs43jps/image-2_hu4525acce454994458fa05bf3227e074c_75762_480x0_resize_box_3.png 480w, https://heusser.pro/p/teams-call-queues-now-support-greetings-in-exception-handlings-1ye1avs43jps/image-2_hu4525acce454994458fa05bf3227e074c_75762_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Greeting for Redirect to Voice App&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;147&#34;
		data-flex-basis=&#34;353px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve already added support for these new configuration options to the &lt;a class=&#34;link&#34; href=&#34;https://github.com/mozziemozz/M365CallFlowVisualizer&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;M365 Call Flow Visualizer&lt;/a&gt;. In this demo call flow I&amp;rsquo;m just using text to speech greetings but of course it also works for audio files including exporting them to disk. This is how it looks now.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-call-queues-now-support-greetings-in-exception-handlings-1ye1avs43jps/PS_Test_EV_Enabled_CQ_CallFlow_New_Greetings.png&#34;
	width=&#34;1978&#34;
	height=&#34;3840&#34;
	srcset=&#34;https://heusser.pro/p/teams-call-queues-now-support-greetings-in-exception-handlings-1ye1avs43jps/PS_Test_EV_Enabled_CQ_CallFlow_New_Greetings_hu931dbaf6700091893deebd0799b3ad4d_472003_480x0_resize_box_3.png 480w, https://heusser.pro/p/teams-call-queues-now-support-greetings-in-exception-handlings-1ye1avs43jps/PS_Test_EV_Enabled_CQ_CallFlow_New_Greetings_hu931dbaf6700091893deebd0799b3ad4d_472003_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Greetings are configured on call queue directly&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;51&#34;
		data-flex-basis=&#34;123px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;As you can see, the greetings are now configured directly on the call queue and there&amp;rsquo;s no need to deploy and manage additional auto attendants anymore. The greeting options for redirect to shared voicemail are unchanged. This can be seen on the &lt;strong&gt;PS Test EV Enabled On Call CQ&lt;/strong&gt;.&lt;/p&gt;
&lt;h2 id=&#34;powershell-vs-teams-admin-center&#34;&gt;PowerShell vs Teams Admin Center&lt;/h2&gt;
&lt;p&gt;Teams Admin Center doesn&amp;rsquo;t support configuring a greeting if the call is being forwarded to another Teams user (person in organization) or a personal voicemail. However, the available properties which are returned in &lt;code&gt;Get-CsCallQueue&lt;/code&gt; hint that support for greetings before a call is forwarded to a person might be coming soon too.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$cq&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Get-CsCallQueue&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-Identity&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$cq&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;py&#34;&gt;Identity&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;PS &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;V:&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GitHub&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;M365CallFlowVisualizer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$cq&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;fl &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;person&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;OverflowRedirectPersonAudioFilePrompt&lt;/span&gt;         &lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;OverflowRedirectPersonAudioFilePromptFileName&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;OverflowRedirectPersonTextToSpeechPrompt&lt;/span&gt;      &lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;TimeoutRedirectPersonAudioFilePrompt&lt;/span&gt;          &lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;TimeoutRedirectPersonAudioFilePromptFileName&lt;/span&gt;  &lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;TimeoutRedirectPersonTextToSpeechPrompt&lt;/span&gt;       &lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;NoAgentRedirectPersonAudioFilePrompt&lt;/span&gt;          &lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;NoAgentRedirectPersonAudioFilePromptFileName&lt;/span&gt;  &lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;NoAgentRedirectPersonTextToSpeechPrompt&lt;/span&gt;       &lt;span class=&#34;err&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;I wouldn&amp;rsquo;t be me unless I tested this. Using &lt;code&gt;Set-CsCallQueue -Identity $cq.Identity -OverflowRedirectPersonTextToSpeechPrompt &amp;quot;Test overflow redirect to person greeting&amp;quot;&lt;/code&gt; I was able to configure a greeting before the call was forwarded to the specified Teams user. A quick test call to the queue successfully played back the message before the call was forwarded to the Teams user. &lt;strong&gt;But&lt;/strong&gt; when I updated the call queue in TAC again, the greeting was deleted (as expected) from the queue. I strongly recommend not to configure a greeting before redirecting to a person until the feature is officially available in Teams Admin Center. Otherwise, you can only update the queue through PS until Microsoft has added the feature to TAC as well. Because of that, I also didn&amp;rsquo;t include this in the Visualizer yet.&lt;/p&gt;
&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;
&lt;p&gt;I haven&amp;rsquo;t seen anybody talk about this new feature online before so I thought that it would be worth sharing. And of course I also wanted to share that the M365 Call Flow Visualizer has been updated to display all configured greetings accurately. I hope you like the new feature and that the Visualizer will help you to get your documentation up to speed quickly.&lt;/p&gt;
&lt;p&gt;If you want to learn how to download existing audio files from call queues through TAC or PowerShell without the M365 Call Flow Visualizer, you can check out &lt;a class=&#34;link&#34; href=&#34;https://heusser.pro/p/download-existing-audio-files-from-teams-admin-center-1839230eadb0&#34; &gt;this&lt;/a&gt; post.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Advanced Teams Auto Attendant Troubleshooting</title>
        <link>https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/</link>
        <pubDate>Tue, 07 Nov 2023 13:41:33 +0000</pubDate>
        
        <guid>https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/</guid>
        <description>&lt;p&gt;It’s that time of the year again. The holidays are right around the corner. Which begs the question: &lt;strong&gt;&lt;em&gt;Did you update the holiday schedules for your Teams Auto Attendants already? And if so, are you sure they’re configured correctly?&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/0y1IZwOr6MkdJ2v48.jpg&#34;
	width=&#34;1024&#34;
	height=&#34;1024&#34;
	srcset=&#34;https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/0y1IZwOr6MkdJ2v48_hu2a4aae59a5b93bfdfc80aa25393f077d_159112_480x0_resize_q75_box.jpg 480w, https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/0y1IZwOr6MkdJ2v48_hu2a4aae59a5b93bfdfc80aa25393f077d_159112_1024x0_resize_q75_box.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;100&#34;
		data-flex-basis=&#34;240px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;No? Me neither. But I do remember that I wrote a comprehensive guide about &lt;a class=&#34;link&#34; href=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-holidays-2b5374667743&#34; &gt;&lt;strong&gt;Everything You Ever Wanted to Know About Teams Holidays&lt;/strong&gt;&lt;/a&gt; about a year ago. This is a great resource to read up on some of my personal best practices and some lesser-known things about Teams Holidays and how they work.&lt;/p&gt;
&lt;p&gt;If you’d rather outsource this to end users for next year, &lt;a class=&#34;link&#34; href=&#34;https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471&#34; &gt;this&lt;/a&gt; article might be interesting to you as well.&lt;/p&gt;
&lt;h4 id=&#34;what-is-todays-blog-post-allabout&#34;&gt;What is today’s blog post all about?&lt;/h4&gt;
&lt;p&gt;I recently built a very large &lt;strong&gt;&lt;em&gt;follow the sun&lt;/em&gt;&lt;/strong&gt; type of call flow which consists of about ten different Auto Attendants and Call Queues. Each Auto Attendant has different business hours, and many Auto Attendants have a different time zone configured as well. This can get quite complicated to build, verify and troubleshoot. How can something like this be tested and verified that it works as intended?&lt;/p&gt;
&lt;p&gt;Since this was not live yet, I started out by adding a greeting to each Call Queue which said the name of the Queue whenever a call was routed to a Call Queue. Then I just made a couple of test calls during the day to see if calls were routed to the correct Queue.&lt;/p&gt;
&lt;p&gt;But then I thought of something much better. I’ve already got the &lt;a class=&#34;link&#34; href=&#34;https://github.com/mozziemozz/M365CallFlowVisualizer&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;M365 Call Flow Visualizer&lt;/a&gt; script in place which is capable of reading all nested voice apps recursively from any starting point. I only had to code some additional stuff to check whether an Auto Attendant is currently in business hours, after hours or in a holiday schedule. The best part about this is that it works for any date. Past, present and future. And of course, any date and time is converted to the time zone which is configured on each Auto Attendant in your call flow. Just as if you would call the Auto Attendant.&lt;/p&gt;
&lt;h4 id=&#34;demo-callflow&#34;&gt;Demo Call Flow&lt;/h4&gt;
&lt;p&gt;This is the demo call flow I’ll be using to demonstrate and explain the new feature. Nothing crazy, just an Auto Attendant with two holiday call handlings and schedules and some business hours.&lt;/p&gt;
&lt;p&gt;Note that the Auto Attendant is configured in &lt;strong&gt;Pacific Standard Time&lt;/strong&gt; while I live in &lt;strong&gt;W. Europe Standard Time&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/1fiPIdMocTgqdYRHlZE1kw.png&#34;
	width=&#34;7840&#34;
	height=&#34;20020&#34;
	srcset=&#34;https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/1fiPIdMocTgqdYRHlZE1kw_hu364d04df2fb9b740a985c2f64f7034c5_2813947_480x0_resize_box_3.png 480w, https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/1fiPIdMocTgqdYRHlZE1kw_hu364d04df2fb9b740a985c2f64f7034c5_2813947_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;39&#34;
		data-flex-basis=&#34;93px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;how-to-check-business-hours-andholidays&#34;&gt;How to Check Business Hours and Holidays&lt;/h3&gt;
&lt;p&gt;To check if any Auto Attendant is currently in business hours or after hours or in a holiday schedule, simply run the M365 CFV script with the switch parameter &lt;code&gt;-CheckCallFlowRouting&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;Note that the&lt;code&gt;-CheckCallFlowRouting&lt;/code&gt; parameter is not mutually exclusive from the Visualizer. You can generate a diagram and check business hours/holiday in the same script run.&lt;/p&gt;
&lt;p&gt;. .\M365CallFlowVisualizerV2.ps1 -CheckCallFlowRouting -Identity edde8e13-1a73-434b-a724-xxxxxxxxxxxx&lt;/p&gt;
&lt;p&gt;This will use your local system time and convert it to whatever time zone is set on the Auto Attendant. The script will output the local and the Auto Attendant time and time zones.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/18EknlCjKIUMexJCdJGpDHQ.png&#34;
	width=&#34;1645&#34;
	height=&#34;209&#34;
	srcset=&#34;https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/18EknlCjKIUMexJCdJGpDHQ_hu4ae0cca88246422bfbffa14e6ba85119_229232_480x0_resize_box_3.png 480w, https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/18EknlCjKIUMexJCdJGpDHQ_hu4ae0cca88246422bfbffa14e6ba85119_229232_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;787&#34;
		data-flex-basis=&#34;1888px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;As you can see, it’s already &lt;strong&gt;Tuesday&lt;/strong&gt; in Switzerland but it’s still &lt;strong&gt;Monday&lt;/strong&gt; in Pacific Standard Time. Since the business hours for Monday are only configured to &lt;strong&gt;17:45 PST&lt;/strong&gt; the Auto Attendant is closed.&lt;/p&gt;
&lt;p&gt;Further down in the output, we’ll see the information about holidays as well. In this case, the Auto Attendant has actually multiple holidays which match my local date and time. While an Auto Attendant can’t have two holidays with the same start date, it’s possible to have holidays which enclose others and/or have the same end date. In that case, the holiday which is most precise (smallest time range) will be active. (This is also explained in the &lt;em&gt;Everything You Ever Wanted to Know About Teams Holidays&lt;/em&gt; article linked at the beginning of this post.)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/1TH5IO8IG0dZ33HdI6t4vRA.png&#34;
	width=&#34;2264&#34;
	height=&#34;645&#34;
	srcset=&#34;https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/1TH5IO8IG0dZ33HdI6t4vRA_hu6c41503451db235cbfcdf453e96666b1_766765_480x0_resize_box_3.png 480w, https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/1TH5IO8IG0dZ33HdI6t4vRA_hu6c41503451db235cbfcdf453e96666b1_766765_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;351&#34;
		data-flex-basis=&#34;842px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;In PST, it’s still Monday, November 6th and there are three holidays starting on this date. One starts at &lt;code&gt;00:00:00&lt;/code&gt; one at &lt;code&gt;17:15:00&lt;/code&gt; and one at &lt;code&gt;17:30:00&lt;/code&gt; . The time in PST is currently &lt;code&gt;23:50:00&lt;/code&gt; so it’s already past all start times of the aforementioned holidays which means, the one starting at &lt;code&gt;17:30:00&lt;/code&gt; is the currently active one, because its start time is closest to the current time. You can see the name of the active holiday call handling and holiday schedule in the output. But that’s not all. You can also see that it lists the actual time range of the schedule on the line which starts with &lt;code&gt;Holiday Schedule:&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;If nobody can answer a call, during business hours, after hours, this demo Auto Attendant (&lt;strong&gt;USA Toll Free Test&lt;/strong&gt;) just forwards to another Auto Attendant called &lt;strong&gt;Main Number Busy AA&lt;/strong&gt; which will just play a greeting and disconnect. This Auto Attendant does not have any business hours or holidays configured, which is also visible in the console output when the &lt;code&gt;-CheckCallFlowRouting&lt;/code&gt; switch is used.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/1ivagCv8KIVIHLMSGyABkXA.png&#34;
	width=&#34;2276&#34;
	height=&#34;206&#34;
	srcset=&#34;https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/1ivagCv8KIVIHLMSGyABkXA_huc258f6b614ba1ead50a1ae2127e8530d_391289_480x0_resize_box_3.png 480w, https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/1ivagCv8KIVIHLMSGyABkXA_huc258f6b614ba1ead50a1ae2127e8530d_391289_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;1104&#34;
		data-flex-basis=&#34;2651px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;It even tells you that it’s a nested Auto Attendant and which was the initially queried Auto Attendant.&lt;/p&gt;
&lt;h4 id=&#34;advanced-check&#34;&gt;Advanced Check&lt;/h4&gt;
&lt;p&gt;Obviously, we won’t always have the time or the patience to stay up all night just to verify that business hours or holidays are configured correctly on an Auto Attendant which serves customers on the other end of the world.&lt;/p&gt;
&lt;p&gt;To check the call flow routing for any specific date we can just pass an additional parameter to the script. &lt;strong&gt;It doesn’t matter if the date lies in the past or in the future.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;-CheckCallFlowRouting -CheckCallFlowRoutingSpecificDate &amp;quot;07.11.2024 17:00:01&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The only thing you need to consider is that you need to enter it in a format which is expected by your system. This depends on your regional settings in Windows.&lt;/p&gt;
&lt;p&gt;For me that would be &lt;code&gt;dd.MM.yyyy HH:mm:ss&lt;/code&gt; . You can test this using the following code.&lt;/p&gt;
&lt;p&gt;Get-Date -Date &amp;ldquo;08.11.2023 17:00:01&amp;rdquo;&lt;/p&gt;
&lt;p&gt;If you for example, typically use &lt;code&gt;MM/dd/yyyy HH:mm:ss&lt;/code&gt; you have to specify it like this.&lt;/p&gt;
&lt;p&gt;Get-Date -Date &amp;ldquo;11/08/2023 17:00:01&amp;rdquo;&lt;/p&gt;
&lt;p&gt;As long as this doesn’t throw an error and the returned date is correct, you should be fine.&lt;/p&gt;
&lt;p&gt;When I queried the Auto Attendant in the first example it was &lt;code&gt;08:50:00&lt;/code&gt; in my local time. Now, I’m going to query the same Auto Attendant again but this time, I’m specifying a date and time which was &lt;strong&gt;7 hours&lt;/strong&gt; before at &lt;code&gt;07.11.2023 01:50:00&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;. .\M365CallFlowVisualizerV2.ps1 -CheckCallFlowRouting -Identity edde8e13-1a73-434b-a724-xxxxxxxxxxxx -CheckCallFlowRoutingSpecificDateTime &amp;ldquo;07.11.2023 01:50:00&amp;rdquo;&lt;/p&gt;
&lt;p&gt;At this time, which is &lt;code&gt;16:50:00&lt;/code&gt; in PST, the Auto Attendant was still open. Even though there are multiple schedules configured for Monday (which are also listed in the output) the script is still able to determine which time range from the Monday schedule is the currently active one.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/1LvC58oq2DdhSty9qGzEeg.png&#34;
	width=&#34;1663&#34;
	height=&#34;236&#34;
	srcset=&#34;https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/1LvC58oq2DdhSty9qGzEeg_hu4baff0ea48164f93fcab51b5ba26b26e_232519_480x0_resize_box_3.png 480w, https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/1LvC58oq2DdhSty9qGzEeg_hu4baff0ea48164f93fcab51b5ba26b26e_232519_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;704&#34;
		data-flex-basis=&#34;1691px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;And because it’s not &lt;code&gt;17:15:00&lt;/code&gt; or &lt;code&gt;17:30:00&lt;/code&gt; in PST yet, there are only two matching holiday schedules returned now.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/10kkp2EAk917jOWxqftxcfA.png&#34;
	width=&#34;2270&#34;
	height=&#34;583&#34;
	srcset=&#34;https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/10kkp2EAk917jOWxqftxcfA_huf8dfb89860557ffa24d033034ff3de6f_743531_480x0_resize_box_3.png 480w, https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/10kkp2EAk917jOWxqftxcfA_huf8dfb89860557ffa24d033034ff3de6f_743531_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;389&#34;
		data-flex-basis=&#34;934px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Let’s check what happens if we query it again after the holiday on &lt;strong&gt;18.11.2023&lt;/strong&gt; has ended. Pacific Standard Time is currently -9 hours from W. Europe Standard Time. So, I need to check for &lt;code&gt;18.11.2023&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;If I check for &lt;code&gt;18.11.2023 00:00:00&lt;/code&gt; it’s still in the holiday schedule.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/17hQxglSj5V9eOGQ4rtzw.png&#34;
	width=&#34;1634&#34;
	height=&#34;299&#34;
	srcset=&#34;https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/17hQxglSj5V9eOGQ4rtzw_hu57189fc9f2100ede6aee69b57b6515d1_320179_480x0_resize_box_3.png 480w, https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/17hQxglSj5V9eOGQ4rtzw_hu57189fc9f2100ede6aee69b57b6515d1_320179_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;546&#34;
		data-flex-basis=&#34;1311px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;But if I check for &lt;code&gt;18.11.2023 00:00:01&lt;/code&gt; the holiday is over, but since this is a Saturday, the Auto Attendant is closed because of business hours anyway.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/1oXnJNbrAq0Fp6yzadsQiA.png&#34;
	width=&#34;1654&#34;
	height=&#34;326&#34;
	srcset=&#34;https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/1oXnJNbrAq0Fp6yzadsQiA_hue878b3b67a41717d05b0ae4ce0c3d342_328629_480x0_resize_box_3.png 480w, https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/1oXnJNbrAq0Fp6yzadsQiA_hue878b3b67a41717d05b0ae4ce0c3d342_328629_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;507&#34;
		data-flex-basis=&#34;1217px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Let’s try Monday &lt;code&gt;20.11.2023 17:15:00.&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/1ZyD35XzHgy0QYEquOBL6WQ.png&#34;
	width=&#34;1668&#34;
	height=&#34;526&#34;
	srcset=&#34;https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/1ZyD35XzHgy0QYEquOBL6WQ_huc6ee406f8d53aaf0df6dc194a3255222_523641_480x0_resize_box_3.png 480w, https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/1ZyD35XzHgy0QYEquOBL6WQ_huc6ee406f8d53aaf0df6dc194a3255222_523641_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;317&#34;
		data-flex-basis=&#34;761px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Looks good, the Auto Attendant is open again. However, there is one caveat. There is another holiday scheduled on &lt;strong&gt;20.11.2023&lt;/strong&gt; (which can be seen in the diagram above as well). &lt;strong&gt;Holidays always take precedence over business hours.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The M365 CFV was built in a way, where it first checks the business hours and then the holidays. So, there’s no easy way to properly reflect that in the output, because the script is unaware of possible holidays at the time it outputs the information about business hours. I’m sure it’s possible somehow but I don’t know how much work that would require.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;For now, we must accept that and just pay attention to all the output. If there’s an active holiday, business hours will be disregarded until that holiday is over.&lt;/strong&gt; On the other hand, I think it’s great to get all the information, so one could check how the call would have been routed at that date and time, if it weren’t a holiday.&lt;/p&gt;
&lt;p&gt;Let’s do one more check to see if everything will be back to normal on &lt;code&gt;21.11.2023&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/1nbQvsvu4WRLHKWmVhZsBww.png&#34;
	width=&#34;2280&#34;
	height=&#34;845&#34;
	srcset=&#34;https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/1nbQvsvu4WRLHKWmVhZsBww_huca85eba2563d7f759f2837ff32b9b942_1241222_480x0_resize_box_3.png 480w, https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/1nbQvsvu4WRLHKWmVhZsBww_huca85eba2563d7f759f2837ff32b9b942_1241222_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;269&#34;
		data-flex-basis=&#34;647px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;I set the time to &lt;code&gt;21.11.2023 23:30:00&lt;/code&gt; so that it would be &lt;code&gt;21.11.2023 14:30:00&lt;/code&gt; in PST which is covered by the second date time range on Tuesday’s schedule. Looks good to me.&lt;/p&gt;
&lt;h3 id=&#34;deep-dive-on-auto-attendant-schedules&#34;&gt;Deep Dive on Auto Attendant Schedules&lt;/h3&gt;
&lt;p&gt;There’s one more thing I want to mention. You might have noticed the &lt;code&gt;Complement: Enabled&lt;/code&gt; output in the screenshots above. This is a parameter which belongs to &lt;code&gt;New-CsOnlineSchedule&lt;/code&gt; or &lt;code&gt;Set-CsOnlineSchedule&lt;/code&gt; which is used to create/update business hours schedules for Auto Attendants. You can find the official parameter description &lt;a class=&#34;link&#34; href=&#34;https://learn.microsoft.com/en-us/powershell/module/skype/new-csonlineschedule?view=skype-ps#-complement&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/14vYbtKJq4sQwPuvSXuvYPw.png&#34;
	width=&#34;1054&#34;
	height=&#34;297&#34;
	srcset=&#34;https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/14vYbtKJq4sQwPuvSXuvYPw_hueebb2270aac0e7b0521f79efe55824f6_174773_480x0_resize_box_3.png 480w, https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/14vYbtKJq4sQwPuvSXuvYPw_hueebb2270aac0e7b0521f79efe55824f6_174773_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;354&#34;
		data-flex-basis=&#34;851px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;As of writing this article, it says the following:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The Complement parameter indicates how the schedule is used. When Complement is enabled, the schedule is used as the inverse of the provided configuration. For example, if Complement is enabled and the schedule only contains time ranges of Monday to Friday from 9AM to 5PM, then the schedule is active at all times other than the specified time ranges.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If you think about this from looking at Teams Admin Center and how business hours are configured under &lt;strong&gt;Call flow for after hours&lt;/strong&gt; in TAC it makes sense. There is no way to configure business hours under &lt;strong&gt;Call flow&lt;/strong&gt; (which is the default call flow). So, when you configure &lt;strong&gt;Business and after hours&lt;/strong&gt;, the time ranges you define will be the times during which the default call flow is active. Outside of the configured times, the after hours call flow will be active. This is 100% in line with what the docs say for the &lt;code&gt;-Complement&lt;/code&gt; switch parameter.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/1XR0AamDozStlUDLTSQugZQ.png&#34;
	width=&#34;1670&#34;
	height=&#34;1515&#34;
	srcset=&#34;https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/1XR0AamDozStlUDLTSQugZQ_hu0ea8f8ad7a99ec93b962fe4f9e9cc5ee_173918_480x0_resize_box_3.png 480w, https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/1XR0AamDozStlUDLTSQugZQ_hu0ea8f8ad7a99ec93b962fe4f9e9cc5ee_173918_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;110&#34;
		data-flex-basis=&#34;264px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;It’s not possible to set &lt;code&gt;ComplementEnabled&lt;/code&gt; to &lt;code&gt;$false&lt;/code&gt; using Teams Admin Center. It’s only possible through PowerShell. This will set &lt;code&gt;ComplementEnabled&lt;/code&gt; to &lt;code&gt;$false&lt;/code&gt; on an Auto Attendant’s after hours schedule.&lt;/p&gt;
&lt;p&gt;# Define Auto Attendant&lt;br&gt;
$aaId = &amp;ldquo;b74da106-ea89-4786-b8aa-xxxxxxxxxxxx&amp;rdquo;&lt;br&gt;
$aa = Get-CsAutoAttendant -Identity $aaId&lt;/p&gt;
&lt;p&gt;# Get schedule&lt;br&gt;
$schedule = Get-CsOnlineSchedule -Id $aa.Schedules.Id&lt;/p&gt;
&lt;p&gt;# Disable ComplementEnabled&lt;br&gt;
$schedule.WeeklyRecurrentSchedule.ComplementEnabled = $false&lt;/p&gt;
&lt;p&gt;# Check value in schedule variable&lt;br&gt;
$schedule.WeeklyRecurrentSchedule&lt;/p&gt;
&lt;p&gt;# Set new (disabled) value for the schedule&lt;br&gt;
Set-CsOnlineSchedule -Instance $schedule&lt;/p&gt;
&lt;p&gt;# Check result&lt;br&gt;
$aa = Get-CsAutoAttendant -Identity $aaId&lt;br&gt;
$aa.Schedules.WeeklyRecurrentSchedule&lt;/p&gt;
&lt;p&gt;In this case, the after hours call flow will be active during the specified time ranges.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/14lvuctyk7szFS7knkmIO8g.png&#34;
	width=&#34;1177&#34;
	height=&#34;300&#34;
	srcset=&#34;https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/14lvuctyk7szFS7knkmIO8g_hu75aa77b6643ef1b056d1429e6566c458_293462_480x0_resize_box_3.png 480w, https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/14lvuctyk7szFS7knkmIO8g_hu75aa77b6643ef1b056d1429e6566c458_293462_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;392&#34;
		data-flex-basis=&#34;941px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;This is where it gets complicated. &lt;strong&gt;Any time you change business hours in Teams Admin Center, complement will be ENABLED again without any warning.&lt;/strong&gt; I haven’t figured out changing which properties exactly trigger TAC to reset the Complement setting but it’s definitely not just editing business hours. A change to the default and after hours call flow greeting resulted in TAC overwritting &lt;code&gt;ComplementEnabled&lt;/code&gt;to &lt;code&gt;$true&lt;/code&gt; too.&lt;/p&gt;
&lt;p&gt;Also, Teams Admin Center won’t display open/closed hours correctly when complement is off. When I view the after hours call flow in TAC, it says, it’s closed during that time when in fact it should say open.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/1I6KmVUwo2s8ICzHMfN0Jg.png&#34;
	width=&#34;1189&#34;
	height=&#34;145&#34;
	srcset=&#34;https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/1I6KmVUwo2s8ICzHMfN0Jg_huc09ab670f36f34d9124806ca704b114b_18624_480x0_resize_box_3.png 480w, https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/1I6KmVUwo2s8ICzHMfN0Jg_huc09ab670f36f34d9124806ca704b114b_18624_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;820&#34;
		data-flex-basis=&#34;1968px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;I verified that the schedule is in fact not inverted by calling the Auto Attendant at &lt;code&gt;11:26&lt;/code&gt; which is within the defined time range of &lt;code&gt;09:30-12:00&lt;/code&gt; . I was indeed able to hear the greeting which was configured for the after hours call flow. To summarize: setting &lt;code&gt;ComplementEnabled&lt;/code&gt; to &lt;code&gt;$false&lt;/code&gt; through PowerShell is working, but TAC won’t display it correctly.&lt;/p&gt;
&lt;p&gt;I’ve enabled complement again to verify if there’s any change in how TAC displays things. There isn’t. TAC simply doesn’t care if &lt;code&gt;ComlementEnabled&lt;/code&gt; is enabled or disabled.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/1qzcjJD557Se3KN4Kn7yG0w.png&#34;
	width=&#34;1205&#34;
	height=&#34;159&#34;
	srcset=&#34;https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/1qzcjJD557Se3KN4Kn7yG0w_hu6657c481ab5a30539bad6659c4e509bb_18850_480x0_resize_box_3.png 480w, https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/1qzcjJD557Se3KN4Kn7yG0w_hu6657c481ab5a30539bad6659c4e509bb_18850_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;757&#34;
		data-flex-basis=&#34;1818px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;After I enabled &lt;code&gt;ComplementEnabled&lt;/code&gt; I called the Auto Attendant again, still between &lt;code&gt;09:30-12:00&lt;/code&gt; and was able to hear the greeting which is configured for the default call flow.&lt;/p&gt;
&lt;p&gt;Sadly, I didn’t consider this in the CFV so here, the output &lt;strong&gt;&lt;em&gt;was&lt;/em&gt;&lt;/strong&gt; wrong, when Complement is disabled.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/1zYKhgZhp4yPg9XhI8oHEyQ.png&#34;
	width=&#34;7040&#34;
	height=&#34;11030&#34;
	srcset=&#34;https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/1zYKhgZhp4yPg9XhI8oHEyQ_hu2900296a33fcd6694a04f885df5a58ca_1419117_480x0_resize_box_3.png 480w, https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/1zYKhgZhp4yPg9XhI8oHEyQ_hu2900296a33fcd6694a04f885df5a58ca_1419117_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;63&#34;
		data-flex-basis=&#34;153px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;When Complement is disabled, the &lt;code&gt;Yes&lt;/code&gt; and &lt;code&gt;No&lt;/code&gt; nodes should be switched.&lt;/p&gt;
&lt;p&gt;The output of the &lt;strong&gt;CheckCallFlowRouting&lt;/strong&gt; is correct though. Even though the checked time of &lt;code&gt;11:41&lt;/code&gt; is within the schedule &lt;code&gt;09:30:00-12:00:00&lt;/code&gt; it says it’s closed because Complement is disabled. In this case, the colors (red/green) are also inverted, and it says &lt;strong&gt;Active After Hours Time Range&lt;/strong&gt; instead of &lt;strong&gt;Active Business Hours Time Range.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/1K99P060upRCKbWvXKWteLQ.png&#34;
	width=&#34;2159&#34;
	height=&#34;378&#34;
	srcset=&#34;https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/1K99P060upRCKbWvXKWteLQ_hud40808cac77be16509e53f6638e1edd0_564995_480x0_resize_box_3.png 480w, https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/1K99P060upRCKbWvXKWteLQ_hud40808cac77be16509e53f6638e1edd0_564995_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;571&#34;
		data-flex-basis=&#34;1370px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;When I check it for &lt;code&gt;13:49&lt;/code&gt; which is not part of the specified schedule, the Auto Attendant is open, and the default call flow is active.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/1h4UB7jz6S2MK5IPbazlF4A.png&#34;
	width=&#34;2161&#34;
	height=&#34;354&#34;
	srcset=&#34;https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/1h4UB7jz6S2MK5IPbazlF4A_hu1d839c1ac3f6bc47f1002e7089f43b47_534798_480x0_resize_box_3.png 480w, https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/1h4UB7jz6S2MK5IPbazlF4A_hu1d839c1ac3f6bc47f1002e7089f43b47_534798_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;610&#34;
		data-flex-basis=&#34;1465px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Luckily, it was easy enough to fix the CFV and add support for Complement disabled schedules in Version 3.1.1. Even when you don’t use the &lt;strong&gt;CheckCallFlowRouting&lt;/strong&gt; paraemeter, you’ll still see a warning when &lt;code&gt;ComplementEnabled&lt;/code&gt; is &lt;code&gt;$false&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/1ZCUHgh103T16ksqNPm5OTw.png&#34;
	width=&#34;2243&#34;
	height=&#34;470&#34;
	srcset=&#34;https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/1ZCUHgh103T16ksqNPm5OTw_hu3c457a67b0e9cf665f39e4170e4df02c_1164507_480x0_resize_box_3.png 480w, https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/1ZCUHgh103T16ksqNPm5OTw_hu3c457a67b0e9cf665f39e4170e4df02c_1164507_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;477&#34;
		data-flex-basis=&#34;1145px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Here we can see an Auto Attendant, which has two nested AAs. One has Complement disabled and the other one enabled and everything is displayed correctly now. You can see that on the left side, for &lt;strong&gt;Complement Disabled AA&lt;/strong&gt; the &lt;strong&gt;Yes&lt;/strong&gt; option for the business hours goes to the after hours call flow greeting. On the right side for &lt;strong&gt;Complement Enabled AA&lt;/strong&gt; it’s the opposite. (This is the standard.)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/1qwwbJaahEpCKTyEBKlRCQ.png&#34;
	width=&#34;7840&#34;
	height=&#34;8470&#34;
	srcset=&#34;https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/1qwwbJaahEpCKTyEBKlRCQ_hu59e0b5e9d2b27e4ed4c1f4586bb39978_1403031_480x0_resize_box_3.png 480w, https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/1qwwbJaahEpCKTyEBKlRCQ_hu59e0b5e9d2b27e4ed4c1f4586bb39978_1403031_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;92&#34;
		data-flex-basis=&#34;222px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;And here you can see, that the after hours call flow greeting in TAC for &lt;strong&gt;Complement Disabled AA&lt;/strong&gt; says: &lt;em&gt;This is the after hours greeting&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/1dQgyhp4ak1B3jq6lFs4FDA.png&#34;
	width=&#34;1351&#34;
	height=&#34;498&#34;
	srcset=&#34;https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/1dQgyhp4ak1B3jq6lFs4FDA_huf63417c1de09802989ada13ad7517599_39684_480x0_resize_box_3.png 480w, https://heusser.pro/p/advanced-teams-auto-attendant-troubleshooting-2b6ec32fc9cb/1dQgyhp4ak1B3jq6lFs4FDA_huf63417c1de09802989ada13ad7517599_39684_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;271&#34;
		data-flex-basis=&#34;651px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;You can get Version 3.1.1 of the M365 CFV from my &lt;a class=&#34;link&#34; href=&#34;https://github.com/mozziemozz/M365CallFlowVisualizer&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Anyway, this doesn’t change the fact that &lt;strong&gt;I strongly recommend not to use&lt;/strong&gt; &lt;code&gt;**ComplementEnabled: $false**&lt;/code&gt; &lt;strong&gt;in any case&lt;/strong&gt;. There’s no point in using it since TAC won’t display it correctly and even more important, will always set it to &lt;code&gt;$true&lt;/code&gt; again if you update the Auto Attendant through TAC.&lt;/p&gt;
&lt;p&gt;Using schedules with Complement enabled (inverted) schedules makes total sense because the business hours are configured under &lt;strong&gt;Call flow for after hours&lt;/strong&gt; and the title says &lt;strong&gt;Set business hours&lt;/strong&gt; in TAC, so, it’s only logical that the schedules are inverted and that the after hours call flow is active outside of the configured business hours and business hours (default call flow) are active during the specified time ranges.&lt;/p&gt;
&lt;p&gt;I hope that this new feature, to check any Auto Attendant’s schedules for any given date and time, also helps you to verify and troubleshoot complex call flows more efficiently. By the way, thanks to a Pull Request from a community member, the CFV now also supports export to PDF!&lt;/p&gt;
&lt;p&gt;If you like my work, feel free to consider sponsoring my work through my &lt;a class=&#34;link&#34; href=&#34;https://github.com/sponsors/mozziemozz&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub Sponsors Profile&lt;/a&gt;.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Pick Up Held and Join Active Calls for Boss/Delegate Scenarios in Microsoft Teams</title>
        <link>https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/</link>
        <pubDate>Mon, 18 Sep 2023 08:28:01 +0000</pubDate>
        
        <guid>https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/</guid>
        <description>&lt;p&gt;Microsoft recently introduced a big update to call delegation in Microsoft Teams. The last substantial change was when Microsoft rolled out &lt;code&gt;Set-CsUserCallingSettings&lt;/code&gt; and the possibility to change a Teams user’s call forwarding settings through Teams Admin Center.&lt;/p&gt;
&lt;p&gt;The new features include the ability for delegates or delegators to pick up held calls or join active calls. There’s a small catch though. When a new delegate is added through TAC or PowerShell, permission to join active calls can’t be granted. It needs to be granted by the delegator itself or through the workaround I will teach you in this blog.&lt;/p&gt;
&lt;p&gt;In TAC, it’s only possible to flip a toggle switch for &lt;strong&gt;Allow changing call settings.&lt;/strong&gt; There’s no specific option for join or pickup calls yet.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/1jDMcHylHOX8704yzYzNuBA.png&#34;
	width=&#34;1534&#34;
	height=&#34;1086&#34;
	srcset=&#34;https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/1jDMcHylHOX8704yzYzNuBA_hudc954b2bb790d0cd92efb4fc7e55e983_130585_480x0_resize_box_3.png 480w, https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/1jDMcHylHOX8704yzYzNuBA_hudc954b2bb790d0cd92efb4fc7e55e983_130585_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;141&#34;
		data-flex-basis=&#34;339px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;It’s the same in PowerShell unfortunately.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/1G9MQGdfTpyLsScrMP1iDw.png&#34;
	width=&#34;1734&#34;
	height=&#34;957&#34;
	srcset=&#34;https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/1G9MQGdfTpyLsScrMP1iDw_huabf3634478cc73584b7669516f4545b1_885560_480x0_resize_box_3.png 480w, https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/1G9MQGdfTpyLsScrMP1iDw_huabf3634478cc73584b7669516f4545b1_885560_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;181&#34;
		data-flex-basis=&#34;434px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;test-scenario&#34;&gt;Test Scenario&lt;/h3&gt;
&lt;p&gt;I’ve added the user &lt;strong&gt;Bill Stearn&lt;/strong&gt; as a delegate of &lt;strong&gt;Mike Wagner&lt;/strong&gt; in this case. As Bill, I can view the granted permissions in his Teams client.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/1PiILqDdHXeVHnsQG47xVyA.png&#34;
	width=&#34;1156&#34;
	height=&#34;474&#34;
	srcset=&#34;https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/1PiILqDdHXeVHnsQG47xVyA_hu8a0ed29fd27354519a0e5287cb21cddd_48939_480x0_resize_box_3.png 480w, https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/1PiILqDdHXeVHnsQG47xVyA_hu8a0ed29fd27354519a0e5287cb21cddd_48939_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;243&#34;
		data-flex-basis=&#34;585px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Here we can see that &lt;strong&gt;Join active calls&lt;/strong&gt; is disabled and greyed out because the delegate permissions were granted by an admin through TAC and not by the delegator himself.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/1TZ7zQhnEfpTyWlZj3p9zg.png&#34;
	width=&#34;650&#34;
	height=&#34;815&#34;
	srcset=&#34;https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/1TZ7zQhnEfpTyWlZj3p9zg_hu86f336e392f041741c23e9a99414356b_60430_480x0_resize_box_3.png 480w, https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/1TZ7zQhnEfpTyWlZj3p9zg_hu86f336e392f041741c23e9a99414356b_60430_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;79&#34;
		data-flex-basis=&#34;191px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Mike has set up &lt;strong&gt;Wendy Rhoades&lt;/strong&gt; as an additional delegate. This delegate was added through TAC as well, so her permissions look exactly the same and she can’t enable &lt;strong&gt;Join active calls&lt;/strong&gt; either.&lt;/p&gt;
&lt;p&gt;Let’s take a look at Mike’s call settings in Teams. From there, he would be able to enable the &lt;strong&gt;Join active calls&lt;/strong&gt; permission for his delegates.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/19PL9m1NtORRcFXPHtg6w.png&#34;
	width=&#34;655&#34;
	height=&#34;969&#34;
	srcset=&#34;https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/19PL9m1NtORRcFXPHtg6w_hua9732eb04a147ca1c2b46cb7467c0e99_79346_480x0_resize_box_3.png 480w, https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/19PL9m1NtORRcFXPHtg6w_hua9732eb04a147ca1c2b46cb7467c0e99_79346_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;67&#34;
		data-flex-basis=&#34;162px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Here’s the thing though. Because both delegates were granted the &lt;strong&gt;Allow changing call settings&lt;/strong&gt; permission through TAC, they’re both allowed to change Mike’s call settings, which does in fact allow them to set the delegate permissions as well.&lt;/p&gt;
&lt;p&gt;If you want to do &lt;em&gt;Ninja IT&lt;/em&gt; and set up full delegate permissions without bothering Mike at all, you’ll need to set up two delegates and they’ll need to enable the missing permission of each other.&lt;/p&gt;
&lt;p&gt;Let’s see how Wendy would enable Bill to join Mike’s active calls. From &lt;strong&gt;Manage delegates&lt;/strong&gt; she’ll need to click on the three dots on Mike’s entry and select &lt;strong&gt;Change delegates.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/1vWd26yJKv2WY6Djkr1lvSQ.png&#34;
	width=&#34;1154&#34;
	height=&#34;563&#34;
	srcset=&#34;https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/1vWd26yJKv2WY6Djkr1lvSQ_hua00f1e5ec781c21d25c16288ff866f65_60851_480x0_resize_box_3.png 480w, https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/1vWd26yJKv2WY6Djkr1lvSQ_hua00f1e5ec781c21d25c16288ff866f65_60851_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;204&#34;
		data-flex-basis=&#34;491px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;In Mike’s delegate settings, she then has to click the three dots on Bill’s entry and select &lt;strong&gt;Edit permissions&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/1KwYgPYD4gnIDjkBYrKBK9A.png&#34;
	width=&#34;1160&#34;
	height=&#34;416&#34;
	srcset=&#34;https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/1KwYgPYD4gnIDjkBYrKBK9A_hu2dfe5288dd39ae16610eb29d5fe8f59c_50854_480x0_resize_box_3.png 480w, https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/1KwYgPYD4gnIDjkBYrKBK9A_hu2dfe5288dd39ae16610eb29d5fe8f59c_50854_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;278&#34;
		data-flex-basis=&#34;669px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;This will allow Wendy to enable &lt;strong&gt;Join active calls&lt;/strong&gt; on Mike’s delegate permissions for Bill.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/1TjdJa5vFr7d7UTtbtC6qWA.png&#34;
	width=&#34;639&#34;
	height=&#34;872&#34;
	srcset=&#34;https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/1TjdJa5vFr7d7UTtbtC6qWA_hu2c952509ed8c9a04dad1098a6b0b1e98_73074_480x0_resize_box_3.png 480w, https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/1TjdJa5vFr7d7UTtbtC6qWA_hu2c952509ed8c9a04dad1098a6b0b1e98_73074_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;73&#34;
		data-flex-basis=&#34;175px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;If Bill now goes back to view his delegate permissions for Mike, he can see that &lt;strong&gt;Join active calls&lt;/strong&gt; was enabled.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/1EcDgPRLMjYe6z3XJEwgldw.png&#34;
	width=&#34;650&#34;
	height=&#34;816&#34;
	srcset=&#34;https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/1EcDgPRLMjYe6z3XJEwgldw_hu3241235b211f5298407742801bc3e4a3_60554_480x0_resize_box_3.png 480w, https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/1EcDgPRLMjYe6z3XJEwgldw_hu3241235b211f5298407742801bc3e4a3_60554_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;79&#34;
		data-flex-basis=&#34;191px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;As you can see, multiple delegates can help each other set up full delegate permissions for their shared boss without bothering them as long as at least one delegate is added by an admin through TAC.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;If there’s only going to be one delegate, you can temporarily add your own Teams account as a delegate through TAC. Then you can use your own Teams client to add the real delegate with full permissions and remove your own account through TAC again.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I hope that Microsoft will soon update TAC so that the new permission can be granted without the need of my workaround.&lt;/p&gt;
&lt;h3 id=&#34;new-delegate-user-interface&#34;&gt;New Delegate User Interface&lt;/h3&gt;
&lt;p&gt;Finally, here are some screenshots of how the new UI for call delegation works. Mike’s call settings are configured to also ring his delegates for these example calling scenarios.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/1UZcfAKqnO1FJhbS9Mirxsw.png&#34;
	width=&#34;799&#34;
	height=&#34;606&#34;
	srcset=&#34;https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/1UZcfAKqnO1FJhbS9Mirxsw_hu15540f62f7b3f528550130a9931a2815_43182_480x0_resize_box_3.png 480w, https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/1UZcfAKqnO1FJhbS9Mirxsw_hu15540f62f7b3f528550130a9931a2815_43182_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;131&#34;
		data-flex-basis=&#34;316px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;The new delegate tabs in the Calls app are available in both the new and the old Teams client.&lt;/p&gt;
&lt;p&gt;Delegates can also see other people supporting the same person. In this case, Wendy can see that Bill is supporting Mike as well.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/1NiQ6zHfGQ4rxW1PmjXAg.png&#34;
	width=&#34;2004&#34;
	height=&#34;1176&#34;
	srcset=&#34;https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/1NiQ6zHfGQ4rxW1PmjXAg_hu615f00667a9b2b318ba31c7f93892503_179361_480x0_resize_box_3.png 480w, https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/1NiQ6zHfGQ4rxW1PmjXAg_hu615f00667a9b2b318ba31c7f93892503_179361_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;170&#34;
		data-flex-basis=&#34;408px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;An inbound call which is intended for a delegator but forwarded to delegates will look like this.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/1m2B6ebHrfMX34ckn1Yn6hQ.png&#34;
	width=&#34;541&#34;
	height=&#34;417&#34;
	srcset=&#34;https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/1m2B6ebHrfMX34ckn1Yn6hQ_hu3cb5e99f4eb1e0f49f1f5f26301982d4_34572_480x0_resize_box_3.png 480w, https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/1m2B6ebHrfMX34ckn1Yn6hQ_hu3cb5e99f4eb1e0f49f1f5f26301982d4_34572_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;129&#34;
		data-flex-basis=&#34;311px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;For the record, this is how it looked in the old Teams client.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/1lMmaHnyIl0angFvf7VXw.png&#34;
	width=&#34;452&#34;
	height=&#34;438&#34;
	srcset=&#34;https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/1lMmaHnyIl0angFvf7VXw_hud830d10a3cdf9978f3df4fe0dafa6e42_70827_480x0_resize_box_3.png 480w, https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/1lMmaHnyIl0angFvf7VXw_hud830d10a3cdf9978f3df4fe0dafa6e42_70827_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;103&#34;
		data-flex-basis=&#34;247px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;The new Teams client will also show an indicator for missed calls on a delegator’s line.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/1vvSkRWSA2Clu1XIZoLw4w.png&#34;
	width=&#34;718&#34;
	height=&#34;91&#34;
	srcset=&#34;https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/1vvSkRWSA2Clu1XIZoLw4w_hubf09715d2417f834869fb09bae00b279_15605_480x0_resize_box_3.png 480w, https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/1vvSkRWSA2Clu1XIZoLw4w_hubf09715d2417f834869fb09bae00b279_15605_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;789&#34;
		data-flex-basis=&#34;1893px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;join-and-pick-upcalls&#34;&gt;Join and Pick Up Calls&lt;/h3&gt;
&lt;p&gt;In this example, Mike (the delegator) accepted the call himself. Wendy can see that there’s an active call in Mike’s call tab. She can also see that the call is managed by Mike himself. If need be, she could join the call too.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/1ahR0QvgKAIaJF2pt493tg.png&#34;
	width=&#34;2004&#34;
	height=&#34;1176&#34;
	srcset=&#34;https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/1ahR0QvgKAIaJF2pt493tg_huf2f6be3062cfc13f4c619b2e3fe705a8_196147_480x0_resize_box_3.png 480w, https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/1ahR0QvgKAIaJF2pt493tg_huf2f6be3062cfc13f4c619b2e3fe705a8_196147_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;170&#34;
		data-flex-basis=&#34;408px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;If Mike puts the call on hold, Wendy can see that, and the &lt;strong&gt;Join&lt;/strong&gt; button changes to a &lt;strong&gt;Resume&lt;/strong&gt; button.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/1b1TGVydKd4Uvdde1BvJpQ.png&#34;
	width=&#34;2004&#34;
	height=&#34;1176&#34;
	srcset=&#34;https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/1b1TGVydKd4Uvdde1BvJpQ_hub86bd222dc611ee49744188c03550896_205692_480x0_resize_box_3.png 480w, https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/1b1TGVydKd4Uvdde1BvJpQ_hub86bd222dc611ee49744188c03550896_205692_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;170&#34;
		data-flex-basis=&#34;408px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Of course, the call cannot just be picked up by Wendy but by all of Mike’s delegates who have that permission. Or he could just resume the call himself.&lt;/p&gt;
&lt;p&gt;In this example, Bill who is another delegate picked up the call and Wendy can see that Mike’s call is connected to Bill now.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/1iBbYB6G1CEbUYGn1YjYWA.png&#34;
	width=&#34;2004&#34;
	height=&#34;1176&#34;
	srcset=&#34;https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/1iBbYB6G1CEbUYGn1YjYWA_hu16791d4cfca2219cb8f3758a0633a89c_206643_480x0_resize_box_3.png 480w, https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/1iBbYB6G1CEbUYGn1YjYWA_hu16791d4cfca2219cb8f3758a0633a89c_206643_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;170&#34;
		data-flex-basis=&#34;408px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;If Mike decides to Join the call with the external caller and Bill, Wendy will be able to see that too, and she still has the option to join the three people who are already on the call.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/1oux26xT5AHEV3mLaIarpzA.png&#34;
	width=&#34;2004&#34;
	height=&#34;1176&#34;
	srcset=&#34;https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/1oux26xT5AHEV3mLaIarpzA_hua9b9ea74565cb9abdcf3c13036b41773_220513_480x0_resize_box_3.png 480w, https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/1oux26xT5AHEV3mLaIarpzA_hua9b9ea74565cb9abdcf3c13036b41773_220513_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;170&#34;
		data-flex-basis=&#34;408px&#34;
	
&gt;
&lt;img src=&#34;https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/1lNACYe4LWgltcvxRxthbig.png&#34;
	width=&#34;2004&#34;
	height=&#34;1176&#34;
	srcset=&#34;https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/1lNACYe4LWgltcvxRxthbig_hu81d6cba101831bee588725990c9a46d5_217915_480x0_resize_box_3.png 480w, https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/1lNACYe4LWgltcvxRxthbig_hu81d6cba101831bee588725990c9a46d5_217915_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;170&#34;
		data-flex-basis=&#34;408px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;This works in the opposite direction too. If Wendy answers a call which was forwarded to her by Mike and puts that call on hold, Mike will be able to pick up the call.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/17fiLpMRJ8LxJy0XNpvLoQ.png&#34;
	width=&#34;2004&#34;
	height=&#34;1169&#34;
	srcset=&#34;https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/17fiLpMRJ8LxJy0XNpvLoQ_hu04e6908531e2f204a3dec4bb2020ee82_238723_480x0_resize_box_3.png 480w, https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/17fiLpMRJ8LxJy0XNpvLoQ_hu04e6908531e2f204a3dec4bb2020ee82_238723_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;171&#34;
		data-flex-basis=&#34;411px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;And last but not least, delegates can also see the call history of their delegators and for example see when another delegate answered a call of their shared delegator.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/16eqh8GUuZO2ZL0ffXqiaHg.png&#34;
	width=&#34;2004&#34;
	height=&#34;1169&#34;
	srcset=&#34;https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/16eqh8GUuZO2ZL0ffXqiaHg_hucb478619d169aa594df74e55ef6f3929_220260_480x0_resize_box_3.png 480w, https://heusser.pro/p/pick-up-held-and-join-active-calls-for-boss-delegate-scenarios-in-microsoft-teams-4cb1d4965424/16eqh8GUuZO2ZL0ffXqiaHg_hucb478619d169aa594df74e55ef6f3929_220260_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;171&#34;
		data-flex-basis=&#34;411px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;wrapping-up&#34;&gt;Wrapping Up&lt;/h4&gt;
&lt;p&gt;The new delegate features are a huge improvement and finally fill a big void in Microsoft Teams Phone. Everything is super easy and intuitive. The new Teams client is looking great as well, and I really like the style of the new calling notifications. The fact that missed calls on a delegator line are only visible in the new Teams client makes me believe that we’re going to see lots of calling related improvements in the new Teams over the next coming months. Exciting times lie ahead. The only thing that remains a little cumbersome is that you can’t grant the &lt;strong&gt;Join active calls&lt;/strong&gt; permission through TAC or PowerShell yet. However, the workaround outlined in this article should do the trick until Microsoft adds official support in TAC and PowerShell.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>How to Validate Phone Number Assignments in Teams (in Bulk)</title>
        <link>https://heusser.pro/p/how-to-validate-phone-number-assignments-in-teams-in-bulk-8a0909c7b5f5/</link>
        <pubDate>Fri, 25 Aug 2023 12:22:29 +0000</pubDate>
        
        <guid>https://heusser.pro/p/how-to-validate-phone-number-assignments-in-teams-in-bulk-8a0909c7b5f5/</guid>
        <description>&lt;p&gt;I’ve been assigning phone numbers in Teams for pretty much five years now. I remember when it all started for me with Direct Routing in 2018.&lt;/p&gt;
&lt;p&gt;Numbers were assigned by using something like this:&lt;br&gt;
&lt;code&gt;Set-CsUser -Identity &amp;quot;user@domain.com&amp;quot; -OnPremLineUri &amp;quot;tel:+12345678900&amp;quot; -EnterpriseVoiceEnabled $true&lt;/code&gt; . Later on, &lt;code&gt;OnPremLineUri&lt;/code&gt; was replaced by the &lt;code&gt;LineUri&lt;/code&gt; attribute before Microsoft finally introduced the new &lt;code&gt;Set-CsPhoneNumberAssignment&lt;/code&gt; cmdlet.&lt;/p&gt;
&lt;p&gt;I don’t know how many phone numbers I’ve assigned in Teams over the years but one thing I know for sure is that I’ve had my fair share of assignment failures. Granted, it’s gotten way better and more reliable in recent years, but sadly, I still run into number assignment issues occasionally.&lt;/p&gt;
&lt;p&gt;By assignment issues I mean that after a number has been assigned to users, they either don’t receive inbound calls, can’t make outbound calls or both. The nasty thing about this is that in Teams Admin Center or PowerShell everything looks ok. I can see that the users in question indeed have a phone number assigned.&lt;/p&gt;
&lt;p&gt;In other words, you can’t always trust that a number is successfully assigned when you can see it in TAC or in PowerShell.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/how-to-validate-phone-number-assignments-in-teams-in-bulk-8a0909c7b5f5/10GLcAACWKdy8YmRwiDTKA.png&#34;
	width=&#34;680&#34;
	height=&#34;227&#34;
	srcset=&#34;https://heusser.pro/p/how-to-validate-phone-number-assignments-in-teams-in-bulk-8a0909c7b5f5/10GLcAACWKdy8YmRwiDTKA_hude0c2885f476e9de0941923028e196b6_35745_480x0_resize_box_3.png 480w, https://heusser.pro/p/how-to-validate-phone-number-assignments-in-teams-in-bulk-8a0909c7b5f5/10GLcAACWKdy8YmRwiDTKA_hude0c2885f476e9de0941923028e196b6_35745_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;299&#34;
		data-flex-basis=&#34;718px&#34;
	
&gt;
&lt;img src=&#34;https://heusser.pro/p/how-to-validate-phone-number-assignments-in-teams-in-bulk-8a0909c7b5f5/16CTFxF1hiseqWnVFjd1eKQ.png&#34;
	width=&#34;744&#34;
	height=&#34;153&#34;
	srcset=&#34;https://heusser.pro/p/how-to-validate-phone-number-assignments-in-teams-in-bulk-8a0909c7b5f5/16CTFxF1hiseqWnVFjd1eKQ_hufdb09d7c4ef8ee8cd8d6124c31a92088_59342_480x0_resize_box_3.png 480w, https://heusser.pro/p/how-to-validate-phone-number-assignments-in-teams-in-bulk-8a0909c7b5f5/16CTFxF1hiseqWnVFjd1eKQ_hufdb09d7c4ef8ee8cd8d6124c31a92088_59342_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;486&#34;
		data-flex-basis=&#34;1167px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;But when you check a user’s calls app in Teams or ask them to send you a screenshot of it, you notice that they don’t have a work phone number listed beneath the dial pad.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/how-to-validate-phone-number-assignments-in-teams-in-bulk-8a0909c7b5f5/1WvODGT0lZqv9ByCh1xnEvg.png&#34;
	width=&#34;348&#34;
	height=&#34;525&#34;
	srcset=&#34;https://heusser.pro/p/how-to-validate-phone-number-assignments-in-teams-in-bulk-8a0909c7b5f5/1WvODGT0lZqv9ByCh1xnEvg_hufceba0c1082ecd9cffaeddee9a9c222c_16706_480x0_resize_box_3.png 480w, https://heusser.pro/p/how-to-validate-phone-number-assignments-in-teams-in-bulk-8a0909c7b5f5/1WvODGT0lZqv9ByCh1xnEvg_hufceba0c1082ecd9cffaeddee9a9c222c_16706_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;66&#34;
		data-flex-basis=&#34;159px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Now obviously there are legit scenarios where users don’t have their own &lt;strong&gt;LineUri&lt;/strong&gt; but in most cases, each user gets assigned a phone number.&lt;/p&gt;
&lt;p&gt;This is how it’s supposed to look after a number has been assigned.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/how-to-validate-phone-number-assignments-in-teams-in-bulk-8a0909c7b5f5/1caNWs4I4L0XByceG6zw.png&#34;
	width=&#34;352&#34;
	height=&#34;556&#34;
	srcset=&#34;https://heusser.pro/p/how-to-validate-phone-number-assignments-in-teams-in-bulk-8a0909c7b5f5/1caNWs4I4L0XByceG6zw_hu98f7a2fd72a56a30a93270a77d334c91_19287_480x0_resize_box_3.png 480w, https://heusser.pro/p/how-to-validate-phone-number-assignments-in-teams-in-bulk-8a0909c7b5f5/1caNWs4I4L0XByceG6zw_hu98f7a2fd72a56a30a93270a77d334c91_19287_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;63&#34;
		data-flex-basis=&#34;151px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;This is very much undocumented, but I believe that the Teams client and TAC/PowerShell are reading/pulling the number from different systems. It has to be this way since they both display different information.&lt;/p&gt;
&lt;p&gt;If you’re setting up Teams phone for a bunch of users at once, it’s not like we can just go and ask each user if they can see the number in their Teams client. &lt;strong&gt;That would make IT look bad&lt;/strong&gt;. On the other hand, trying to assign the number a few more times until it hopefully sticks doesn’t seem like an ideal solution either.&lt;/p&gt;
&lt;h4 id=&#34;reverse-number-lookup-rnl-to-validate-the-assignment&#34;&gt;Reverse Number Lookup (RNL) to validate the assignment&lt;/h4&gt;
&lt;p&gt;As you might know, I run a &lt;a class=&#34;link&#34; href=&#34;https://heusser.pro/discord.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Discord Server&lt;/a&gt; for Teams Phone Admins. When the issue reoccurred for me earlier this year, I decided to ask the Discord community if they have a clever way of remotely checking if a phone number assignment has been successful?&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/how-to-validate-phone-number-assignments-in-teams-in-bulk-8a0909c7b5f5/0GpvfcYavklU7iIg.jpg&#34;
	width=&#34;2615&#34;
	height=&#34;300&#34;
	srcset=&#34;https://heusser.pro/p/how-to-validate-phone-number-assignments-in-teams-in-bulk-8a0909c7b5f5/0GpvfcYavklU7iIg_hu51561f2da7b07c5e8a7a4c0d3d51d683_110328_480x0_resize_q75_box.jpg 480w, https://heusser.pro/p/how-to-validate-phone-number-assignments-in-teams-in-bulk-8a0909c7b5f5/0GpvfcYavklU7iIg_hu51561f2da7b07c5e8a7a4c0d3d51d683_110328_1024x0_resize_q75_box.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;871&#34;
		data-flex-basis=&#34;2092px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Our member &lt;strong&gt;Ashish Mishra&lt;/strong&gt; suggested to type in the number in my own Teams client to see if anything comes up on the RNL (reverse number lookup). As it turns out, this is a genius idea.&lt;/p&gt;
&lt;p&gt;Last week, I stumbled over this issue again when a few users who have recently gotten a new Teams phone number reported to me that outbound calls were not working. Luckily, there were only a handful, and I was able to ask them directly if they could see the phone number in Teams. They couldn’t.&lt;/p&gt;
&lt;p&gt;I then went on to my Teams client and entered some of the numbers to see if they return anything or not.&lt;/p&gt;
&lt;p&gt;If the number is not successfully (or not at all) assigned, only the number but no name will be returned.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/how-to-validate-phone-number-assignments-in-teams-in-bulk-8a0909c7b5f5/13G7UzNqHtfp4Tx0z5UN8Lg.png&#34;
	width=&#34;353&#34;
	height=&#34;164&#34;
	srcset=&#34;https://heusser.pro/p/how-to-validate-phone-number-assignments-in-teams-in-bulk-8a0909c7b5f5/13G7UzNqHtfp4Tx0z5UN8Lg_hu18362e2a6a668f2348c68f10db7fdc84_8930_480x0_resize_box_3.png 480w, https://heusser.pro/p/how-to-validate-phone-number-assignments-in-teams-in-bulk-8a0909c7b5f5/13G7UzNqHtfp4Tx0z5UN8Lg_hu18362e2a6a668f2348c68f10db7fdc84_8930_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;215&#34;
		data-flex-basis=&#34;516px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;As soon as the number is successfully assigned, the name of the user will be returned.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/how-to-validate-phone-number-assignments-in-teams-in-bulk-8a0909c7b5f5/1tJCCTL3n5C8U8nD9IthSGw.png&#34;
	width=&#34;353&#34;
	height=&#34;166&#34;
	srcset=&#34;https://heusser.pro/p/how-to-validate-phone-number-assignments-in-teams-in-bulk-8a0909c7b5f5/1tJCCTL3n5C8U8nD9IthSGw_hud47cf269b60c4f6e1db35fe0ff397c19_10682_480x0_resize_box_3.png 480w, https://heusser.pro/p/how-to-validate-phone-number-assignments-in-teams-in-bulk-8a0909c7b5f5/1tJCCTL3n5C8U8nD9IthSGw_hud47cf269b60c4f6e1db35fe0ff397c19_10682_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;212&#34;
		data-flex-basis=&#34;510px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Because I’ve encountered the issue before, I didn’t even bother to check the M365 service health dashboard. But apparently, there was indeed an issue related to numbers assigned during a time frame which matched my errors.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/how-to-validate-phone-number-assignments-in-teams-in-bulk-8a0909c7b5f5/1xgYbaKQOPjo221dBXR6cJA.png&#34;
	width=&#34;818&#34;
	height=&#34;649&#34;
	srcset=&#34;https://heusser.pro/p/how-to-validate-phone-number-assignments-in-teams-in-bulk-8a0909c7b5f5/1xgYbaKQOPjo221dBXR6cJA_huac2666c501ef566e78231e83ce5ede2e_80061_480x0_resize_box_3.png 480w, https://heusser.pro/p/how-to-validate-phone-number-assignments-in-teams-in-bulk-8a0909c7b5f5/1xgYbaKQOPjo221dBXR6cJA_huac2666c501ef566e78231e83ce5ede2e_80061_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;126&#34;
		data-flex-basis=&#34;302px&#34;
	
&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Title: Users can’t make or receive Public Switched Telephone Network (PSTN) calls in Microsoft Teams&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;User impact: Users couldn’t make or receive any PSTN calls from any connection method of Microsoft Teams.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;More info: This only impacted users who had their phone numbers assigned between Monday, August 14, 2023 at 10:30 PM GMT+2 , and Wednesday, August 16, 2023 at 4:00 AM GMT+2.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In that particular case, I was able to fix the issue by reassigning the numbers. But that didn’t stop me from looking for a more practical, permanent solution.&lt;/p&gt;
&lt;h4 id=&#34;reverse-engineering&#34;&gt;Reverse engineering&lt;/h4&gt;
&lt;p&gt;Once again, we go back to Microsoft Edge’s dev tools to see what’s going on when RNL is done. All it does is to send a request to the following endpoint:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;https://teams.microsoft.com/api/mt/emea/beta/phone/numbers/+41438833079/teamsidentity&lt;/code&gt;
&lt;img src=&#34;https://heusser.pro/p/how-to-validate-phone-number-assignments-in-teams-in-bulk-8a0909c7b5f5/1xJ60RmW1XFqmugU9KQKwIg.png&#34;
	width=&#34;794&#34;
	height=&#34;644&#34;
	srcset=&#34;https://heusser.pro/p/how-to-validate-phone-number-assignments-in-teams-in-bulk-8a0909c7b5f5/1xJ60RmW1XFqmugU9KQKwIg_hu0c6dcf4328d2fc5015be71fcd3b5d3d5_57278_480x0_resize_box_3.png 480w, https://heusser.pro/p/how-to-validate-phone-number-assignments-in-teams-in-bulk-8a0909c7b5f5/1xJ60RmW1XFqmugU9KQKwIg_hu0c6dcf4328d2fc5015be71fcd3b5d3d5_57278_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;123&#34;
		data-flex-basis=&#34;295px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;If there is a user found for the phone number, a user object Id will be returned.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/how-to-validate-phone-number-assignments-in-teams-in-bulk-8a0909c7b5f5/1kPrP0SJW3a55aANVK75tVg.png&#34;
	width=&#34;682&#34;
	height=&#34;154&#34;
	srcset=&#34;https://heusser.pro/p/how-to-validate-phone-number-assignments-in-teams-in-bulk-8a0909c7b5f5/1kPrP0SJW3a55aANVK75tVg_hu9fe18f5405e127390d95ea6ce499898f_10697_480x0_resize_box_3.png 480w, https://heusser.pro/p/how-to-validate-phone-number-assignments-in-teams-in-bulk-8a0909c7b5f5/1kPrP0SJW3a55aANVK75tVg_hu9fe18f5405e127390d95ea6ce499898f_10697_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;442&#34;
		data-flex-basis=&#34;1062px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;If no users are found, the API returns an error.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/how-to-validate-phone-number-assignments-in-teams-in-bulk-8a0909c7b5f5/1c2LsbM1AUmW4PgU9MQozhA.png&#34;
	width=&#34;691&#34;
	height=&#34;146&#34;
	srcset=&#34;https://heusser.pro/p/how-to-validate-phone-number-assignments-in-teams-in-bulk-8a0909c7b5f5/1c2LsbM1AUmW4PgU9MQozhA_hub8f115a142de48d23f2828bdbc271a50_8018_480x0_resize_box_3.png 480w, https://heusser.pro/p/how-to-validate-phone-number-assignments-in-teams-in-bulk-8a0909c7b5f5/1c2LsbM1AUmW4PgU9MQozhA_hub8f115a142de48d23f2828bdbc271a50_8018_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;473&#34;
		data-flex-basis=&#34;1135px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;It’s noteworthy that only numbers assigned in a user’s own tenant can be checked. You can’t use this API to scrape numbers of other tenants.&lt;/p&gt;
&lt;p&gt;If we want to send these kinds of requests using PowerShell, we obviously need to get a valid bearer token first. For this, we can reuse much of the code I’ve already written for &lt;a class=&#34;link&#34; href=&#34;https://heusser.pro/p/automate-setting-work-location-in-teams-outlook-poc-deb7b05de08d&#34; &gt;this&lt;/a&gt; blog post. We’re using the same function to either create or read our encrypted credentials which we then use to get a token using the AADInternals PowerShell module/functions.&lt;/p&gt;
&lt;p&gt;Please note that you don’t need the credentials of a Teams admin user. Since any Teams enterprise voice enabled user can dial a number and trigger RNL, non-admin credentials of any Teams phone enabled user work just fine.&lt;/p&gt;
&lt;p&gt;What’s interesting is that doing RNL through the API also worked using the bearer token of a user which isn’t even enterprise voice enabled.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Please bear in mind that this means that a user’s password and possibly an OTP secret (albeit both encrypted) are saved to your local disk. Treat the files with care and remove them once you don’t need them anymore!&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;the-scriptfunctions&#34;&gt;The Script/Functions&lt;/h4&gt;
&lt;p&gt;Finally, here’s the PowerShell code to make it all happen.&lt;/p&gt;
&lt;p&gt;Please make sure that you clone the &lt;a class=&#34;link&#34; href=&#34;https://github.com/mozziemozz/TeamsPhoneAutomation&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;repository&lt;/a&gt; from my GitHub because of the dependencies. Simply copying the script from the gist won’t work.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;# Run this in PowerShell to clone the repository  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;git&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;clone&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;https&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;//&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;github&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;com&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mozziemozz&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;TeamsPhoneAutomation&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;py&#34;&gt;git&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;I made this in a way that you can use it in your own scripts. I purposely made this a lightweight function without any requests to Teams or Graph.&lt;/p&gt;
&lt;p&gt;I did, however, create an example script to show you how you can use the function to validate phone number assignments in bulk.&lt;/p&gt;
&lt;p&gt;If you want to read users/numbers from a CSV or directly from Teams/Graph, you’ll need to write your own code to build the &lt;code&gt;$lineURIs&lt;/code&gt; array.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;-AdminUser&lt;/code&gt; to specify the user you want to get a Teams token for via the AADInternals module. Use either &lt;code&gt;-MFA $true&lt;/code&gt; or &lt;code&gt;-MFA $false&lt;/code&gt; to tell the function if the account specified is MFA enabled or not.&lt;/p&gt;
&lt;script src=&#34;https://gist.github.com/mozziemozz/7d986581c385c9aeb04ce8a403dff19d.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;The example script will create an object in &lt;code&gt;$results&lt;/code&gt; which includes all the checked phone numbers and if they’re assigned successfully. If a number is assigned correctly, the object id of the user will be included as well if you keep &lt;code&gt;$hideObjectId $false&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/how-to-validate-phone-number-assignments-in-teams-in-bulk-8a0909c7b5f5/1Sid8Gir1zmeKHCmgPg5qgA.png&#34;
	width=&#34;1734&#34;
	height=&#34;957&#34;
	srcset=&#34;https://heusser.pro/p/how-to-validate-phone-number-assignments-in-teams-in-bulk-8a0909c7b5f5/1Sid8Gir1zmeKHCmgPg5qgA_huc3da1b988c26e3cbaf35241ef5aef343_1198040_480x0_resize_box_3.png 480w, https://heusser.pro/p/how-to-validate-phone-number-assignments-in-teams-in-bulk-8a0909c7b5f5/1Sid8Gir1zmeKHCmgPg5qgA_huc3da1b988c26e3cbaf35241ef5aef343_1198040_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;181&#34;
		data-flex-basis=&#34;434px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;The actual function doing the RNL can be found &lt;a class=&#34;link&#34; href=&#34;https://github.com/mozziemozz/TeamsPhoneAutomation/blob/main/Scripts/ValidateTeamsReverseNumberLookup/ValidateTeamsReverseNumberLookup.ps1&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I hope that this bit of code helps you the next time you need to check if a Teams phone number is assigned 100% correctly.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>PowerShell Script: Set Emergency Location for Unassigned Numbers in Teams</title>
        <link>https://heusser.pro/p/powershell-script-set-emergency-location-for-unassigned-numbers-in-teams-5e00c61b4246/</link>
        <pubDate>Fri, 11 Aug 2023 16:23:20 +0000</pubDate>
        
        <guid>https://heusser.pro/p/powershell-script-set-emergency-location-for-unassigned-numbers-in-teams-5e00c61b4246/</guid>
        <description>&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/powershell-script-set-emergency-location-for-unassigned-numbers-in-teams-5e00c61b4246/0rgv90To2E1EOPe.jpg&#34;
	width=&#34;1024&#34;
	height=&#34;1024&#34;
	srcset=&#34;https://heusser.pro/p/powershell-script-set-emergency-location-for-unassigned-numbers-in-teams-5e00c61b4246/0rgv90To2E1EOPe_hu39db2329fd12307d9d2a9a3dd1079567_90198_480x0_resize_q75_box.jpg 480w, https://heusser.pro/p/powershell-script-set-emergency-location-for-unassigned-numbers-in-teams-5e00c61b4246/0rgv90To2E1EOPe_hu39db2329fd12307d9d2a9a3dd1079567_90198_1024x0_resize_q75_box.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;100&#34;
		data-flex-basis=&#34;240px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;With the MicrosoftTeams PowerShell module version &lt;strong&gt;5.4.0.&lt;/strong&gt; Microsoft has added the possibility to set the emergency location on unassigned numbers.&lt;/p&gt;
&lt;p&gt;Typically, whenever new numbers are bought or ported to Microsoft, an admin needs to specify the emergency address which should be assigned to the new numbers. In some cases, this process can fail which means that you could end up with user/subscriber numbers which don’t have an emergency address linked to it.&lt;/p&gt;
&lt;p&gt;When you try to assign a number wich does not have an emergency location assigned, you’ll get an error, and you need to assign it again, including the &lt;code&gt;-LocationId&lt;/code&gt; .&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;Set-CsPhoneNumberAssignment&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-PhoneNumber&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$number&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;py&#34;&gt;TelephoneNumber&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-LocationId&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$matchingEmergencyLocationId&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;This is an operational risk since scripts that may have been working fine for months suddenly stop working properly for certain numbers and new users could end up without a phone number. To mitigate this risk, it’s best to make sure that all your numbers have an emergency address linked to them from the get-go.&lt;/p&gt;
&lt;p&gt;Up until now, the only way to solve this issue was to create a case for Microsoft’s PSTN service desk team and ask them to assign a location Id to your unassigned number.&lt;/p&gt;
&lt;p&gt;Previously, I’ve tackled this issue by making sure that my scripts checked if the number was assigned successfully. If it wasn’t I made sure that the number got assigned again including the location Id.&lt;/p&gt;
&lt;p&gt;I also thought about creating a dummy user and a script which I could (mis)use. The script would get all unassigned numbers which don’t have a location Id assigned and processes all numbers after each other. Each time, the user’s usage location would be set to the country of the current number, the number would be assigned to the dummy user including the location Id and then unassigned again. However, that sounded like a waste of time to me, so I never pursued that idea.&lt;/p&gt;
&lt;p&gt;The possibilities now are much better, and the recent update allowed me to create a simple script which makes sure that all unassigned numbers also have a location Id assigned.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Please note that the script assumes that there’s only ever 1 emergency address per city and that there’s at least 1 other number which already uses the correct emergency address.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;If your environment does not meet the above criteria, you can’t use this script without tailoring it specifically to your needs. Use it at your own risk!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Also note that you need to clone or download the &lt;a class=&#34;link&#34; href=&#34;https://github.com/mozziemozz/TeamsPhoneAutomation&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub repo&lt;/a&gt; since it depends on other functions present in the repo.&lt;/p&gt;
&lt;script src=&#34;https://gist.github.com/mozziemozz/3d750fef739c17a73832f542459fac72.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;I hope this helps you in streamlining and optimizing your phone number inventory.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Prettify and Sync Teams Phone Numbers to Azure AD</title>
        <link>https://heusser.pro/p/prettify-and-sync-teams-phone-numbers-to-azure-ad-e973755f83d5/</link>
        <pubDate>Thu, 06 Jul 2023 22:30:04 +0000</pubDate>
        
        <guid>https://heusser.pro/p/prettify-and-sync-teams-phone-numbers-to-azure-ad-e973755f83d5/</guid>
        <description>&lt;p&gt;I am a very data and fact driven guy. I strongly believe that clean, consistent and structured data is a tremendously important aspect of information technology.&lt;/p&gt;
&lt;p&gt;An example of inconsistency to which probably most Teams Phone admins can relate is that there is no relation between a Teams user’s &lt;strong&gt;LineURI&lt;/strong&gt; and the &lt;strong&gt;BusinessPhones&lt;/strong&gt; property of the same user in Azure AD.&lt;/p&gt;
&lt;p&gt;The problem is that throughout Microsoft 365 only the values in Azure AD are published on profile cards. This includes Teams and Outlook. A different phone number in Azure AD than in Teams can create all kinds of problems. Inbound calls might not get routed to a Teams user or calls may be transferred to a wrong user if a call is placed via the number available on a profile card.&lt;/p&gt;
&lt;p&gt;Here’s an example of a profile card which shows the user’s phone number from Azure AD.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/prettify-and-sync-teams-phone-numbers-to-azure-ad-e973755f83d5/1qJTQBFoMOT8Ch8SBVGw9w.png&#34;
	width=&#34;476&#34;
	height=&#34;554&#34;
	srcset=&#34;https://heusser.pro/p/prettify-and-sync-teams-phone-numbers-to-azure-ad-e973755f83d5/1qJTQBFoMOT8Ch8SBVGw9w_hu394d42633891d118097386811d22e218_45292_480x0_resize_box_3.png 480w, https://heusser.pro/p/prettify-and-sync-teams-phone-numbers-to-azure-ad-e973755f83d5/1qJTQBFoMOT8Ch8SBVGw9w_hu394d42633891d118097386811d22e218_45292_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;85&#34;
		data-flex-basis=&#34;206px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;If we check the same user in Teams Admin Center, we can see that he has a different LineURI.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/prettify-and-sync-teams-phone-numbers-to-azure-ad-e973755f83d5/1XgygFkOc2ljYRbuaPiZ3hA.png&#34;
	width=&#34;1162&#34;
	height=&#34;393&#34;
	srcset=&#34;https://heusser.pro/p/prettify-and-sync-teams-phone-numbers-to-azure-ad-e973755f83d5/1XgygFkOc2ljYRbuaPiZ3hA_hu6ad97763ff3793c32cd2b44fab1cd552_73124_480x0_resize_box_3.png 480w, https://heusser.pro/p/prettify-and-sync-teams-phone-numbers-to-azure-ad-e973755f83d5/1XgygFkOc2ljYRbuaPiZ3hA_hu6ad97763ff3793c32cd2b44fab1cd552_73124_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;295&#34;
		data-flex-basis=&#34;709px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;When it comes to phone numbers in Teams, I view the LineURI as the single source of truth. Writing a simple script which mirrors the LineURI to Azure AD seemed like an easy task.&lt;/p&gt;
&lt;p&gt;But then I realized that I can only get the raw value of the LineURI which doesn’t include any spaces which makes it hard to read or spell on profile cards.&lt;/p&gt;
&lt;p&gt;While the phone number is displayed nicely formatted according to the local and regional format in TAC or in the Teams Client, it looks like this in PowerShell.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/prettify-and-sync-teams-phone-numbers-to-azure-ad-e973755f83d5/1QTijGX2jlRXoWNmqhMU8jg.png&#34;
	width=&#34;1265&#34;
	height=&#34;139&#34;
	srcset=&#34;https://heusser.pro/p/prettify-and-sync-teams-phone-numbers-to-azure-ad-e973755f83d5/1QTijGX2jlRXoWNmqhMU8jg_hudf1b79b8c173a2b759b680fa3352de39_20580_480x0_resize_box_3.png 480w, https://heusser.pro/p/prettify-and-sync-teams-phone-numbers-to-azure-ad-e973755f83d5/1QTijGX2jlRXoWNmqhMU8jg_hudf1b79b8c173a2b759b680fa3352de39_20580_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;910&#34;
		data-flex-basis=&#34;2184px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;The Teams Client also displays the number in the correct format.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/prettify-and-sync-teams-phone-numbers-to-azure-ad-e973755f83d5/1G4CllxCII1RWb7GAPyBPQ.png&#34;
	width=&#34;541&#34;
	height=&#34;731&#34;
	srcset=&#34;https://heusser.pro/p/prettify-and-sync-teams-phone-numbers-to-azure-ad-e973755f83d5/1G4CllxCII1RWb7GAPyBPQ_hu4b6a9d97194e76b4b275eb893e8c1d2a_32999_480x0_resize_box_3.png 480w, https://heusser.pro/p/prettify-and-sync-teams-phone-numbers-to-azure-ad-e973755f83d5/1G4CllxCII1RWb7GAPyBPQ_hu4b6a9d97194e76b4b275eb893e8c1d2a_32999_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;74&#34;
		data-flex-basis=&#34;177px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;I started to dig around in the browser dev tools to try and see if I could find these formatted numbers anywhere. Not luck. I could only ever find the raw values. I did some more research and learned that there are a couple of already existing and well-established libraries for various programming languages such as Python or Node.JS.&lt;/p&gt;
&lt;p&gt;A few years ago, I made some attempts to learn the basics of Python but since I never really used it in real life, I kind of forgot everything. Thanks to ChatGPT I then learned that it’s actually possible to run python code inline in any PowerShell script. Good for me.&lt;/p&gt;
&lt;p&gt;Now I have a neat little script which not only copies the LineURI of all Teams Phone users to Azure AD, but it also prettifies them in the same way as TAC and the Teams client do!&lt;/p&gt;
&lt;h3 id=&#34;the-script&#34;&gt;The Script&lt;/h3&gt;
&lt;p&gt;Note: The script has only been tested on Windows 11 using Python 3.11.1.&lt;/p&gt;
&lt;h4 id=&#34;prerequisties&#34;&gt;Prerequisties&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;Install &lt;a class=&#34;link&#34; href=&#34;https://www.python.org/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Python&lt;/a&gt; on your machine&lt;/li&gt;
&lt;li&gt;Run the following command to install the &lt;strong&gt;phonenumbers&lt;/strong&gt; library &lt;code&gt;python -m pip install phonenumbers&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Clone the &lt;a class=&#34;link&#34; href=&#34;https://github.com/mozziemozz/TeamsPhoneAutomation/tree/main&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;repository&lt;/a&gt; from my GitHub account &lt;br&gt;
&lt;code&gt;git clone [https://github.com](https://github.com)/mozziemozz/TeamsPhoneAutomation.git&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Make sure that the &lt;strong&gt;MicrosoftTeams&lt;/strong&gt; and &lt;strong&gt;Microsoft.Graph&lt;/strong&gt; PowerShell modules are installed&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;code&#34;&gt;Code&lt;/h4&gt;
&lt;p&gt;This is the script. It connects to Teams and Graph, gets all Teams users with a LineURI and then prettifies each LineURI before it’s set on the user’s BuinessPhones property in Azure AD.&lt;/p&gt;
&lt;script src=&#34;https://gist.github.com/mozziemozz/c05ddbd07a9b102fbf94ef1c30bba490.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;If you prefer connecting via Azure AD Service Principal, there’s also a &lt;a class=&#34;link&#34; href=&#34;https://github.com/mozziemozz/TeamsPhoneAutomation/blob/main/Scripts/PhoneNumberFormatting/PrettifyPhoneNumbersServicePrincipal.ps1&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;version&lt;/a&gt; in the repo which supports that.&lt;/p&gt;
&lt;p&gt;Keep in mind that you need to make sure that your App has all required graph scopes added and consented and that the Service Principal is also assigned the &lt;strong&gt;Skype for Business Online Administrator&lt;/strong&gt; role in Azure AD. For more information on how to set up and automated runbook, please refer to &lt;a class=&#34;link&#34; href=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf&#34; &gt;this&lt;/a&gt; article.&lt;/p&gt;
&lt;h4 id=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;p&gt;The output of the script will look like this.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/prettify-and-sync-teams-phone-numbers-to-azure-ad-e973755f83d5/1WoHkH5WLrR9gcBGDygeDPw.png&#34;
	width=&#34;1498&#34;
	height=&#34;271&#34;
	srcset=&#34;https://heusser.pro/p/prettify-and-sync-teams-phone-numbers-to-azure-ad-e973755f83d5/1WoHkH5WLrR9gcBGDygeDPw_hufb5a08a1a671283664f3702f557a1131_95794_480x0_resize_box_3.png 480w, https://heusser.pro/p/prettify-and-sync-teams-phone-numbers-to-azure-ad-e973755f83d5/1WoHkH5WLrR9gcBGDygeDPw_hufb5a08a1a671283664f3702f557a1131_95794_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;552&#34;
		data-flex-basis=&#34;1326px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;As we can see, the phone number of the Azure AD user object has now been changed to the same number as it is in Teams. For better readability and aesthetics, spaces have been added where users would expect them for a phone number from the respective region.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/prettify-and-sync-teams-phone-numbers-to-azure-ad-e973755f83d5/1YrjWmqbCzpnUtpqwRLjtLg.png&#34;
	width=&#34;587&#34;
	height=&#34;300&#34;
	srcset=&#34;https://heusser.pro/p/prettify-and-sync-teams-phone-numbers-to-azure-ad-e973755f83d5/1YrjWmqbCzpnUtpqwRLjtLg_hu2cdb800e76a3f42856f0adbbe728590b_26317_480x0_resize_box_3.png 480w, https://heusser.pro/p/prettify-and-sync-teams-phone-numbers-to-azure-ad-e973755f83d5/1YrjWmqbCzpnUtpqwRLjtLg_hu2cdb800e76a3f42856f0adbbe728590b_26317_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;195&#34;
		data-flex-basis=&#34;469px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Unfortunately, it can take multiple days until updated phone numbers are visible in Teams or Outlook due to heavy client-side caching.&lt;/p&gt;
&lt;p&gt;I hope that this script helps you to keep LineURIs and BusinessPhones in Azure AD in sync or that you can even use it to automate that process.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Manage Microsoft Teams Call Queues with PowerShell (Force-Sync)</title>
        <link>https://heusser.pro/p/manage-microsoft-teams-call-queues-with-powershell-force-sync-9919e2939552/</link>
        <pubDate>Tue, 04 Apr 2023 19:42:18 +0000</pubDate>
        
        <guid>https://heusser.pro/p/manage-microsoft-teams-call-queues-with-powershell-force-sync-9919e2939552/</guid>
        <description>&lt;p&gt;After my last article turned into a twenty-minute read, I want to write a short blog post today. At least I’ll try to. We are talking about managing Microsoft Teams Call Queues with PowerShell again.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/manage-microsoft-teams-call-queues-with-powershell-force-sync-9919e2939552/0cTgVlbyGhDlU8uu.jpg&#34;
	width=&#34;1024&#34;
	height=&#34;1024&#34;
	srcset=&#34;https://heusser.pro/p/manage-microsoft-teams-call-queues-with-powershell-force-sync-9919e2939552/0cTgVlbyGhDlU8uu_hu51cfae8946aa380f91ae6d29e590a061_134458_480x0_resize_q75_box.jpg 480w, https://heusser.pro/p/manage-microsoft-teams-call-queues-with-powershell-force-sync-9919e2939552/0cTgVlbyGhDlU8uu_hu51cfae8946aa380f91ae6d29e590a061_134458_1024x0_resize_q75_box.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;100&#34;
		data-flex-basis=&#34;240px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Pretty much about one year ago, I wrote an article explaining how to force sync a Call Queue which uses a group or a Microsoft Team as its source of agent list.&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://heusser.pro/p/microsoft-teams-call-queue-agent-lists-and-how-to-force-sync-them-ef8092090df0&#34; &gt;Microsoft Teams Call Queue Agent Lists (And how to Force-Sync them) | by martin heusser | Medium&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Since then, I have refined the code a little bit to make it even easier. I wrote two functions which are available in a new &lt;a class=&#34;link&#34; href=&#34;https://github.com/mozziemozz/TeamsPhoneAutomation/blob/main/Modules/TeamsPS.psm1&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;PowerShell Module&lt;/strong&gt;&lt;/a&gt; which is available in my &lt;a class=&#34;link&#34; href=&#34;https://github.com/mozziemozz/TeamsPhoneAutomation&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;TeamsPhoneAutomation&lt;/strong&gt;&lt;/a&gt; repository on GitHub.&lt;/p&gt;
&lt;p&gt;To import the module, simply run the following code after you have &lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/en/repositories/creating-and-managing-repositories/cloning-a-repository&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;cloned&lt;/a&gt; the repository.&lt;/p&gt;
&lt;p&gt;$localRepoPath = git rev-parse &amp;ndash;show-toplevel&lt;br&gt;
Import-Module &amp;ldquo;$localRepoPath/Modules/TeamsPS.psm1&amp;rdquo; -Force&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git rev-parse --show-toplevel&lt;/code&gt; will resolve the cloned repository’s root path to the absolute file path on your system. This is really helpful if different users clone the repo to different folders on their own machine.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/manage-microsoft-teams-call-queues-with-powershell-force-sync-9919e2939552/1gNxBkz6hW4pvFJjOSPniow.png&#34;
	width=&#34;1734&#34;
	height=&#34;957&#34;
	srcset=&#34;https://heusser.pro/p/manage-microsoft-teams-call-queues-with-powershell-force-sync-9919e2939552/1gNxBkz6hW4pvFJjOSPniow_hu31e17814aa3dda5d87bfc911e30d0762_669941_480x0_resize_box_3.png 480w, https://heusser.pro/p/manage-microsoft-teams-call-queues-with-powershell-force-sync-9919e2939552/1gNxBkz6hW4pvFJjOSPniow_hu31e17814aa3dda5d87bfc911e30d0762_669941_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;181&#34;
		data-flex-basis=&#34;434px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;There are two Call Queue related functions in the module:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Get-MZZCQAgents&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Sync-MZZCQAgents&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let’s start with the &lt;strong&gt;Get&lt;/strong&gt; function.&lt;/p&gt;
&lt;h4 id=&#34;get-mzzcqagents&#34;&gt;Get-MZZCQAgents&lt;/h4&gt;
&lt;p&gt;This is essentially what &lt;a class=&#34;link&#34; href=&#34;https://github.com/mozziemozz/M365CallFlowVisualizer/blob/main/Functions/Get-CallQueueAgentsStatus.ps1&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;this script&lt;/a&gt; mentioned in &lt;a class=&#34;link&#34; href=&#34;https://heusser.pro/p/report-on-teams-call-queue-opt-in-status-and-assignment-paths-93f177976485&#34; &gt;this article&lt;/a&gt; does. However, this function doesn’t have exporting capabilities and the code has been adapted so it plays nice with the &lt;strong&gt;Sync&lt;/strong&gt; function.&lt;/p&gt;
&lt;p&gt;As we already know, when we check a Call Queues &lt;code&gt;.Agent&lt;/code&gt; property, we will only see GUIDs instead of User Principal Names. Thus, my function. It will search for the users by Id and output UPNs instead of Object Ids.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/manage-microsoft-teams-call-queues-with-powershell-force-sync-9919e2939552/1pLYCkYoqD9HkTxl7bVetPw.png&#34;
	width=&#34;1734&#34;
	height=&#34;957&#34;
	srcset=&#34;https://heusser.pro/p/manage-microsoft-teams-call-queues-with-powershell-force-sync-9919e2939552/1pLYCkYoqD9HkTxl7bVetPw_hu31e17814aa3dda5d87bfc911e30d0762_694355_480x0_resize_box_3.png 480w, https://heusser.pro/p/manage-microsoft-teams-call-queues-with-powershell-force-sync-9919e2939552/1pLYCkYoqD9HkTxl7bVetPw_hu31e17814aa3dda5d87bfc911e30d0762_694355_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;181&#34;
		data-flex-basis=&#34;434px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;If you run the function without parameters, you will be able to choose a Call Queue from a list.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/manage-microsoft-teams-call-queues-with-powershell-force-sync-9919e2939552/10Zw03oQyVVr3Gp1LcOsQ.png&#34;
	width=&#34;1381&#34;
	height=&#34;659&#34;
	srcset=&#34;https://heusser.pro/p/manage-microsoft-teams-call-queues-with-powershell-force-sync-9919e2939552/10Zw03oQyVVr3Gp1LcOsQ_huecd6a3d5b878df5add2f865d951e487d_108016_480x0_resize_box_3.png 480w, https://heusser.pro/p/manage-microsoft-teams-call-queues-with-powershell-force-sync-9919e2939552/10Zw03oQyVVr3Gp1LcOsQ_huecd6a3d5b878df5add2f865d951e487d_108016_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;209&#34;
		data-flex-basis=&#34;502px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;If you already know the Id of your Call Queue, you can pass it via the &lt;code&gt;-CQIdentity&lt;/code&gt; parameter.&lt;/p&gt;
&lt;p&gt;Get-MZZCQAgents -CQIdentity fe77ecb3-f5a5-47ee-9519-cbb3a52d5771&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/manage-microsoft-teams-call-queues-with-powershell-force-sync-9919e2939552/1C9HchRKUMR6oQBRLXMBfqg.png&#34;
	width=&#34;1734&#34;
	height=&#34;957&#34;
	srcset=&#34;https://heusser.pro/p/manage-microsoft-teams-call-queues-with-powershell-force-sync-9919e2939552/1C9HchRKUMR6oQBRLXMBfqg_hu31e17814aa3dda5d87bfc911e30d0762_768562_480x0_resize_box_3.png 480w, https://heusser.pro/p/manage-microsoft-teams-call-queues-with-powershell-force-sync-9919e2939552/1C9HchRKUMR6oQBRLXMBfqg_hu31e17814aa3dda5d87bfc911e30d0762_768562_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;181&#34;
		data-flex-basis=&#34;434px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;sync-mzzcqagents&#34;&gt;Sync-MZZCQAgents&lt;/h4&gt;
&lt;p&gt;This Call Queue uses a Microsoft Teams Team as Agent List, but this also applies to Agents which are assigned to a queue via Security or M365 Groups.&lt;/p&gt;
&lt;p&gt;Think about a scenario where a Team owner adds a new employee to a Team which should also start to receive calls to the queue. Without interaction of a Teams Administrator, it’s going to take some time until that’s the case. It will most likely take multiple hours for the change to become effective.&lt;/p&gt;
&lt;p&gt;If we want to speed up that process, we simply need to run &lt;code&gt;Sync-MZZCQAgents&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;It’s the same for this function, if you do not specify &lt;code&gt;-CQIdentity&lt;/code&gt; you will be asked to choose &lt;strong&gt;one&lt;/strong&gt; or &lt;strong&gt;multiple&lt;/strong&gt; queues from the list. To select multiple queues, just hold &lt;strong&gt;CTRL&lt;/strong&gt; while selecting list entries.&lt;/p&gt;
&lt;p&gt;Please note that &lt;code&gt;Get-MZZCQAgents&lt;/code&gt; only accepts one selection at a time but &lt;code&gt;Sync-MZZCQAgents&lt;/code&gt; can actually loop through multiple queues after each other if you want to force-sync all or some of your queues.&lt;/p&gt;
&lt;p&gt;The cool thing about this is that the &lt;strong&gt;Sync&lt;/strong&gt; function runs&lt;code&gt;Get-MZZCQAgents&lt;/code&gt; before and after the queue’s agent list has been synced. This way you can know if the new agent(s) have already been added.&lt;/p&gt;
&lt;p&gt;If you run the function too soon after the membership of a Team or an M365 Group has been updated, chances are that you will get the following output.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/manage-microsoft-teams-call-queues-with-powershell-force-sync-9919e2939552/1lMTG7LBodcvUifKt7pZVCQ.png&#34;
	width=&#34;1734&#34;
	height=&#34;957&#34;
	srcset=&#34;https://heusser.pro/p/manage-microsoft-teams-call-queues-with-powershell-force-sync-9919e2939552/1lMTG7LBodcvUifKt7pZVCQ_hu31e17814aa3dda5d87bfc911e30d0762_684893_480x0_resize_box_3.png 480w, https://heusser.pro/p/manage-microsoft-teams-call-queues-with-powershell-force-sync-9919e2939552/1lMTG7LBodcvUifKt7pZVCQ_hu31e17814aa3dda5d87bfc911e30d0762_684893_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;181&#34;
		data-flex-basis=&#34;434px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;First, let’s remove &lt;strong&gt;Mike&lt;/strong&gt;, who is also an agent of the queue as a member of the Team. We can now see that &lt;strong&gt;Mike&lt;/strong&gt; has been removed from the queue.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/manage-microsoft-teams-call-queues-with-powershell-force-sync-9919e2939552/1XVULfBs8n282RhyFCWBNUw.png&#34;
	width=&#34;1734&#34;
	height=&#34;957&#34;
	srcset=&#34;https://heusser.pro/p/manage-microsoft-teams-call-queues-with-powershell-force-sync-9919e2939552/1XVULfBs8n282RhyFCWBNUw_hu31e17814aa3dda5d87bfc911e30d0762_772135_480x0_resize_box_3.png 480w, https://heusser.pro/p/manage-microsoft-teams-call-queues-with-powershell-force-sync-9919e2939552/1XVULfBs8n282RhyFCWBNUw_hu31e17814aa3dda5d87bfc911e30d0762_772135_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;181&#34;
		data-flex-basis=&#34;434px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Now let’s add &lt;strong&gt;Mike&lt;/strong&gt; back but remove &lt;strong&gt;Bobby.&lt;/strong&gt; You’ll get a nice overview of all the agents that were removed or added.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/manage-microsoft-teams-call-queues-with-powershell-force-sync-9919e2939552/1Q6eapw6UeSnMblJv52ra5Q.png&#34;
	width=&#34;1734&#34;
	height=&#34;957&#34;
	srcset=&#34;https://heusser.pro/p/manage-microsoft-teams-call-queues-with-powershell-force-sync-9919e2939552/1Q6eapw6UeSnMblJv52ra5Q_hu31e17814aa3dda5d87bfc911e30d0762_716380_480x0_resize_box_3.png 480w, https://heusser.pro/p/manage-microsoft-teams-call-queues-with-powershell-force-sync-9919e2939552/1Q6eapw6UeSnMblJv52ra5Q_hu31e17814aa3dda5d87bfc911e30d0762_716380_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;181&#34;
		data-flex-basis=&#34;434px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;There is no need to run &lt;code&gt;Connect-MicrosoftTeams&lt;/code&gt; before you run either of these two functions because a login mechanism, similar to the one the &lt;a class=&#34;link&#34; href=&#34;https://github.com/mozziemozz/M365CallFlowVisualizer&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;M365 Call Flow Visualizer&lt;/strong&gt;&lt;/a&gt; uses is already built into the function &lt;code&gt;Connect-MZZTeams&lt;/code&gt; which is also part of the module. If you’re not already logged in, you’ll be prompted to enter your Teams Admin Credentials.&lt;/p&gt;
&lt;p&gt;For now, it’s only these two or rather three functions (if you count the login function) which are part of this module. I’m sure that I’ll add more useful code over time, so stay tuned and follow me on &lt;a class=&#34;link&#34; href=&#34;https://heusser.pro/p&#34; &gt;Medium&lt;/a&gt;, &lt;a class=&#34;link&#34; href=&#34;https://twitter.com/mozzeph&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Twitter&lt;/a&gt; or &lt;a class=&#34;link&#34; href=&#34;https://www.linkedin.com/in/martin-heusser117/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;LinkedIn&lt;/a&gt;. And yes, the &lt;strong&gt;117&lt;/strong&gt; in my LinkedIn URL is a reference to Master Chief.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Everything You Ever Wanted to Know About Teams Holidays</title>
        <link>https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-holidays-2b5374667743/</link>
        <pubDate>Mon, 31 Oct 2022 20:12:56 +0000</pubDate>
        
        <guid>https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-holidays-2b5374667743/</guid>
        <description>&lt;p&gt;Can you believe that it’s already the last day of October and that so far, I’ve only published &lt;a class=&#34;link&#34; href=&#34;https://heusser.pro/p/how-to-handle-microsoft-graph-paging-in-powershell-354663d4b32a&#34; &gt;one article&lt;/a&gt; this month? And it wasn’t even about Teams…&lt;/p&gt;
&lt;p&gt;Let me change that. We’re almost at the end of the year already. You know what that means, right? Holidays! But before we can go on Holiday we need to add or update them on our Teams Auto Attendants. That’s exactly what I’m going to write about today.&lt;/p&gt;
&lt;h3 id=&#34;best-practices&#34;&gt;Best Practices&lt;/h3&gt;
&lt;p&gt;Beware, these are not best practices which are documented anywhere officially. The recommendations outlined in this blog post are based on my learnings from working with Teams Auto Attendants in the past years.&lt;/p&gt;
&lt;p&gt;When you start planning or configuring Holidays in Teams, the first question you should ask yourself is the following:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Do you want to treat every Holiday the same, or do you want to treat some holidays differently?&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This applies to both actions and greetings. The greeting, of course, is the message which will be played back when somebody calls you on a Holiday. The action is what the Auto Attendant will do in terms of call routing on that Holiday. Examples are, disconnect, forward to voicemail, a person in your organization or to an external number.&lt;/p&gt;
&lt;h4 id=&#34;greetings&#34;&gt;Greetings&lt;/h4&gt;
&lt;p&gt;Depending on the answer to our core question, you either need one generic greeting which applies to all Holidays, or you need a different greeting for each or at least for some Holidays.&lt;/p&gt;
&lt;p&gt;A reason for an individual greeting per Holiday could be that you want to be very specific and include information when your company will resume business as usual.&lt;/p&gt;
&lt;p&gt;If you opt for a generic greeting, I always tell my customers that their greeting should mention something like this.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Thank you for your call. Due to a Holiday, our office remains closed for today. Please try us again on the next &lt;strong&gt;working day&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The key take-away here is to use &lt;strong&gt;working day&lt;/strong&gt; rather than tomorrow or the next day, since this could also be a Saturday or a Sunday.&lt;/p&gt;
&lt;h4 id=&#34;actions&#34;&gt;Actions&lt;/h4&gt;
&lt;p&gt;An action is where you configure what should happen to inbound calls which are received on Holidays. These are configured inside a so-called holiday call handling.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-holidays-2b5374667743/1tp1XcM6lXY00lfbcb5vrw.png&#34;
	width=&#34;1384&#34;
	height=&#34;1024&#34;
	srcset=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-holidays-2b5374667743/1tp1XcM6lXY00lfbcb5vrw_hu6f6fdbc60fa2a33ab4730562fba244ac_122118_480x0_resize_box_3.png 480w, https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-holidays-2b5374667743/1tp1XcM6lXY00lfbcb5vrw_hu6f6fdbc60fa2a33ab4730562fba244ac_122118_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;135&#34;
		data-flex-basis=&#34;324px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;In TAC, actions are called &lt;strong&gt;Call routing options.&lt;/strong&gt; In PowerShell they’re referred to as &lt;strong&gt;Action.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-holidays-2b5374667743/1XPAcx1D2AiEG7QC9MyeGzg.png&#34;
	width=&#34;751&#34;
	height=&#34;298&#34;
	srcset=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-holidays-2b5374667743/1XPAcx1D2AiEG7QC9MyeGzg_hu564f883fd142080fe6e7e148f993e1b1_31192_480x0_resize_box_3.png 480w, https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-holidays-2b5374667743/1XPAcx1D2AiEG7QC9MyeGzg_hu564f883fd142080fe6e7e148f993e1b1_31192_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;252&#34;
		data-flex-basis=&#34;604px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;scope&#34;&gt;Scope&lt;/h4&gt;
&lt;p&gt;Please note that the settings described in this article only apply to Auto Attendants. It’s currently not possible with Teams native features to configure a global schedule for all of your company’s numbers or to configure Holidays for Teams Users. To achieve something like this, you need to use Direct Routing and an SBC which offers time-based routing, like &lt;a class=&#34;link&#34; href=&#34;https://www.anynode.de/technical-data/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Anynode&lt;/a&gt; does for example.&lt;/p&gt;
&lt;p&gt;Again, if you treat all your Holidays the same, for example play back a message and then forward to voicemail, your configuration will be much easier to build and maintain. You will only need to update the schedules once a year. There’s no need to touch the call handlings again with this approach.&lt;/p&gt;
&lt;h4 id=&#34;holiday-lists&#34;&gt;Holiday Lists&lt;/h4&gt;
&lt;p&gt;The third thing we need is a Holiday list. The terminology might be a little confusing here. In TAC they’re simply called &lt;strong&gt;Holidays.&lt;/strong&gt; In &lt;a class=&#34;link&#34; href=&#34;https://learn.microsoft.com/en-us/powershell/module/skype/new-csonlineschedule?view=skype-ps&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PowerShell&lt;/a&gt; they’re called &lt;strong&gt;Schedules.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If we add a new Holiday in TAC, it uses the singular form Holiday, even though this can have multiple entries. This essentially makes it a Holiday list from my point of view.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-holidays-2b5374667743/1aEtINYXUX2i7UtbWDzbzbA.png&#34;
	width=&#34;1277&#34;
	height=&#34;269&#34;
	srcset=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-holidays-2b5374667743/1aEtINYXUX2i7UtbWDzbzbA_hua8a59959b08e62b3189badb4b961ecff_13888_480x0_resize_box_3.png 480w, https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-holidays-2b5374667743/1aEtINYXUX2i7UtbWDzbzbA_hua8a59959b08e62b3189badb4b961ecff_13888_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;474&#34;
		data-flex-basis=&#34;1139px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;While Holidays can be created from inside the configuration menu of an Auto Attendant, these lists are actually stored outside of an Auto Attendant. You can find them in Teams Admin Center under &lt;a class=&#34;link&#34; href=&#34;https://admin.teams.microsoft.com/company-wide-settings/holidays&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Voice\Holidays&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-holidays-2b5374667743/1hVJdRxmQDMLykXkxp0GEsg.png&#34;
	width=&#34;2174&#34;
	height=&#34;760&#34;
	srcset=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-holidays-2b5374667743/1hVJdRxmQDMLykXkxp0GEsg_hud3e7e690accf794823cf914c7bc5f5e6_102557_480x0_resize_box_3.png 480w, https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-holidays-2b5374667743/1hVJdRxmQDMLykXkxp0GEsg_hud3e7e690accf794823cf914c7bc5f5e6_102557_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;286&#34;
		data-flex-basis=&#34;686px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;A Holiday list can be linked to multiple Auto Attendants. Because of that, I recommend to always edit Holiday schedules under &lt;a class=&#34;link&#34; href=&#34;https://admin.teams.microsoft.com/company-wide-settings/holidays&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Voice\Holidays&lt;/strong&gt;&lt;/a&gt; and not directly on the Attendant itself. This should minimize mistakes and confusion.&lt;/p&gt;
&lt;p&gt;I don’t recommend including the year into the schedule’s name. The year is already included in each entry. Besides that, it’s also highly likely that you will have a Holiday for New Year&amp;rsquo;s Eve which overlaps into the next year which kind of messes with the naming scheme.&lt;/p&gt;
&lt;h4 id=&#34;limits&#34;&gt;Limits&lt;/h4&gt;
&lt;p&gt;A Holiday list can have up to ten entries. And an Auto Attendant can have up to 20 Holiday call handlings. While I haven’t verified this, it means that in theory, you should be able to have a maximum of 200 Holidays per Auto Attendant, assuming that each entry only spans one day. Only having 165 working days, what a life that would be.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-holidays-2b5374667743/19kci3K5qI70JBfn20eY1tQ.png&#34;
	width=&#34;1073&#34;
	height=&#34;721&#34;
	srcset=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-holidays-2b5374667743/19kci3K5qI70JBfn20eY1tQ_hu86748411ce73f6ea11acbd7eeb5fdaee_63059_480x0_resize_box_3.png 480w, https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-holidays-2b5374667743/19kci3K5qI70JBfn20eY1tQ_hu86748411ce73f6ea11acbd7eeb5fdaee_63059_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;148&#34;
		data-flex-basis=&#34;357px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;understanding-thedates&#34;&gt;Understanding The Dates&lt;/h4&gt;
&lt;p&gt;A Holiday consists of a start and end date and a start and end time. This means that we can also configure partial Holidays which for example start at noon or later. Our Auto Attendant might have business hours which allow calls to get through until 5 p.m. If we configure a Holiday to start at 4 p.m. we can close the lines 1 hour earlier without touching our business hours.&lt;/p&gt;
&lt;p&gt;The end date and time is usually 12:00 a.m. of the following day. So, if we want to close the Auto Attendant for the entire day on October 31st, we configure the Holiday like this:&lt;/p&gt;
&lt;p&gt;Start: 31.10.2022 12:00 AM&lt;br&gt;
End: 01.11.2022 12:00 AM&lt;/p&gt;
&lt;p&gt;This is &lt;a class=&#34;link&#34; href=&#34;https://learn.microsoft.com/en-us/microsoftteams/set-up-holidays-in-teams&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;documented&lt;/a&gt; and recommended by Microsoft.&lt;/p&gt;
&lt;p&gt;When the new day begins, the Auto Attendant will go back to evaluating business hours as usual.&lt;/p&gt;
&lt;p&gt;It’s important to point out that Holiday lists do not store any information about time zones. Time zones are configured on Auto Attendants. Remember that the same list can be associated with multiple Auto Attendants. This allows you to have consolidated Holiday lists which automatically adjust to the relevant time zones based on the Auto Attendant configuration.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-holidays-2b5374667743/1GvD76p2agULlleuMkd3A.png&#34;
	width=&#34;959&#34;
	height=&#34;229&#34;
	srcset=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-holidays-2b5374667743/1GvD76p2agULlleuMkd3A_hu950e0c40868aed8b3919c86dce26a8f4_20472_480x0_resize_box_3.png 480w, https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-holidays-2b5374667743/1GvD76p2agULlleuMkd3A_hu950e0c40868aed8b3919c86dce26a8f4_20472_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;418&#34;
		data-flex-basis=&#34;1005px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;configuring-holidays-on-an-auto-attendant&#34;&gt;Configuring Holidays on an Auto Attendant&lt;/h4&gt;
&lt;p&gt;If you create a new call handling for an Auto Attendant, you need to select a Holiday (list/schedule) from your Holidays. This again means that if you want to have an individual greeting or action per Holiday, you can only have one Holiday per list. Thus, you need to take the limit of twenty call handlings per Attendant into consideration.&lt;/p&gt;
&lt;p&gt;If you need to configure more than twenty call handlings, you will need to update the configuration sometime during the year. Without removing call handlings of past Holidays, you won’t be able to add new ones for the rest of the year.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-holidays-2b5374667743/1J4pgmSGCkJ9VPULBb1fpJw.png&#34;
	width=&#34;975&#34;
	height=&#34;1006&#34;
	srcset=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-holidays-2b5374667743/1J4pgmSGCkJ9VPULBb1fpJw_huc4817324ad847fb286979e2d50a198c4_79894_480x0_resize_box_3.png 480w, https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-holidays-2b5374667743/1J4pgmSGCkJ9VPULBb1fpJw_huc4817324ad847fb286979e2d50a198c4_79894_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;96&#34;
		data-flex-basis=&#34;232px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;When I built my first Auto Attendants many years ago, I used to include the year in the name of the call handling. This was an awfully bad idea, and I learned my lesson. I had to update all the schedules and all call handling names.&lt;/p&gt;
&lt;p&gt;Because of the administrative overhead, I usually recommend my customers to have one list for dynamic Holidays and one for fixed Holidays. Since I came up with these terms on my own, I’m not sure if they’re popular. But they should be self-explanatory. Dynamic days are the ones which occur e.g., every third Monday of April. Fixed days are the ones which fall on the same day each year. E.g., Fourth of July. Because there are usually more than ten Holidays in a year, we need two lists anyway. Splitting between dynamic and fixed days seemed like the most obvious way to me.&lt;/p&gt;
&lt;p&gt;If you have more than ten fixed or dynamic Holidays, you can just create a second list and add a call handling with the same settings for those days as well. There’s no way around that.&lt;/p&gt;
&lt;p&gt;Editing a Holiday will open its own sub menu which has a &lt;strong&gt;Save&lt;/strong&gt; button. Never forget to also click &lt;strong&gt;Submit&lt;/strong&gt; on the Auto Attendant after you have saved a Holiday call handling. If you don’t save the Auto Attendant as well, changes to your Holidays won’t be saved.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-holidays-2b5374667743/1RyzPgNVfqMPskxGV6CrDaw.png&#34;
	width=&#34;1229&#34;
	height=&#34;643&#34;
	srcset=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-holidays-2b5374667743/1RyzPgNVfqMPskxGV6CrDaw_hu1a26a03cb3c61bcc1a5c3008a50d5c6b_79518_480x0_resize_box_3.png 480w, https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-holidays-2b5374667743/1RyzPgNVfqMPskxGV6CrDaw_hu1a26a03cb3c61bcc1a5c3008a50d5c6b_79518_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;191&#34;
		data-flex-basis=&#34;458px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;some-exceptions&#34;&gt;Some Exceptions&lt;/h4&gt;
&lt;p&gt;If your company also has annual Holidays, which typically last one or two weeks, I suggest creating a separate list and call handling for these weeks.&lt;/p&gt;
&lt;p&gt;You can create one entry for the entire timespan and configure a custom greeting because it isn’t obvious when the next working day will be.&lt;/p&gt;
&lt;p&gt;Also, you can’t create multiple call handlings with the same start time on the same Auto Attendant. However, it is possible to create Holidays, where one Holiday occurs during another, multi-day Holiday. To test this, I’ve created the following Holidays.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-holidays-2b5374667743/1DofZ4VAaXsLi6YarxKEvg.png&#34;
	width=&#34;1066&#34;
	height=&#34;296&#34;
	srcset=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-holidays-2b5374667743/1DofZ4VAaXsLi6YarxKEvg_hue5b0e11b41d7fb0611a0495152d7ee37_16306_480x0_resize_box_3.png 480w, https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-holidays-2b5374667743/1DofZ4VAaXsLi6YarxKEvg_hue5b0e11b41d7fb0611a0495152d7ee37_16306_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;360&#34;
		data-flex-basis=&#34;864px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;The date 31.10.2022 is also in the range of the following Holiday which starts one day before, on 30.10.2022.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-holidays-2b5374667743/1iBXZ4wDNepWvZvBEgTQj7A.png&#34;
	width=&#34;1069&#34;
	height=&#34;290&#34;
	srcset=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-holidays-2b5374667743/1iBXZ4wDNepWvZvBEgTQj7A_huc4792cfda4196bf568b87c9d92e38ab9_16800_480x0_resize_box_3.png 480w, https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-holidays-2b5374667743/1iBXZ4wDNepWvZvBEgTQj7A_huc4792cfda4196bf568b87c9d92e38ab9_16800_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;368&#34;
		data-flex-basis=&#34;884px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Next, I created another Holiday which wraps around both previous Holidays.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-holidays-2b5374667743/1vFgMTWt3euwkq5lI0j7U5A.png&#34;
	width=&#34;1279&#34;
	height=&#34;359&#34;
	srcset=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-holidays-2b5374667743/1vFgMTWt3euwkq5lI0j7U5A_hu8d6474fd803f819225d444a63ad425ed_24403_480x0_resize_box_3.png 480w, https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-holidays-2b5374667743/1vFgMTWt3euwkq5lI0j7U5A_hu8d6474fd803f819225d444a63ad425ed_24403_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;356&#34;
		data-flex-basis=&#34;855px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;I then created a call handling for each of them.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-holidays-2b5374667743/1iVxHOpIvLdlMXHRwAqnIxw.png&#34;
	width=&#34;1226&#34;
	height=&#34;599&#34;
	srcset=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-holidays-2b5374667743/1iVxHOpIvLdlMXHRwAqnIxw_hua9f4ab2932991d37fd933cafcaf67c2d_78603_480x0_resize_box_3.png 480w, https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-holidays-2b5374667743/1iVxHOpIvLdlMXHRwAqnIxw_hua9f4ab2932991d37fd933cafcaf67c2d_78603_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;204&#34;
		data-flex-basis=&#34;491px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;To find out, which call handling is effective, I called my Auto Attendant. Because I’ve configured a different greeting for each of them, I was able to easily determine which one was active.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-holidays-2b5374667743/1Wec7TKqb5GlOaz8mQFFDuA.png&#34;
	width=&#34;863&#34;
	height=&#34;456&#34;
	srcset=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-holidays-2b5374667743/1Wec7TKqb5GlOaz8mQFFDuA_hub77237744a951058deb9f58d5bccc12a_20759_480x0_resize_box_3.png 480w, https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-holidays-2b5374667743/1Wec7TKqb5GlOaz8mQFFDuA_hub77237744a951058deb9f58d5bccc12a_20759_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;189&#34;
		data-flex-basis=&#34;454px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;It turns out, that Teams is smart enough to always prioritize the one which is the most precise. In this case, it’s the one which only includes a single day.&lt;/p&gt;
&lt;p&gt;To be absolutely sure, I even removed the other two call handlings and saved the Auto Attendant. I then added them again to see if the order in which they are configured makes a difference, but it doesn’t.&lt;/p&gt;
&lt;p&gt;Im not sure if this will be a feature that anyone will ever need but it’s still good to know. In theory we could set up a Holiday for an entire week but still have a different greeting and/or action on e.g. Wednesday if we configure a separate Holiday for it.&lt;/p&gt;
&lt;h4 id=&#34;further-reading&#34;&gt;Further Reading&lt;/h4&gt;
&lt;p&gt;If you’ve found these insights about Auto Attendants and Holidays useful, please also see &lt;a class=&#34;link&#34; href=&#34;https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471&#34; &gt;this article&lt;/a&gt;, where I explain how the entire process of updating (not creating) schedules can be outsourced to users without granting them Teams Administrator rights.&lt;/p&gt;
&lt;p&gt;And of course, Holiday Tables which are configured on an Auto Attendant can also be visually displayed using the &lt;a class=&#34;link&#34; href=&#34;https://github.com/mozziemozz/M365CallFlowVisualizer&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;M365 Call Flow Visualizer&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Based on feedback from the community, I’ve added the name of the call handling and the linked Holiday list to the diagram for more clarity.&lt;/p&gt;
&lt;p&gt;You can see that there’s a name for both the &lt;strong&gt;Call Handling&lt;/strong&gt; and the linked &lt;strong&gt;Holiday Schedule&lt;/strong&gt; in the flow chart**.**&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-holidays-2b5374667743/1FpF50ssn2tmTJPC7zAbeSQ.png&#34;
	width=&#34;1357&#34;
	height=&#34;1584&#34;
	srcset=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-holidays-2b5374667743/1FpF50ssn2tmTJPC7zAbeSQ_hueef52a94d57bf1893f72ca1f988cb1f6_142100_480x0_resize_box_3.png 480w, https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-holidays-2b5374667743/1FpF50ssn2tmTJPC7zAbeSQ_hueef52a94d57bf1893f72ca1f988cb1f6_142100_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;85&#34;
		data-flex-basis=&#34;205px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;final-note&#34;&gt;Final Note&lt;/h4&gt;
&lt;p&gt;In Teams Admin Center, Holidays are chronologically configured and displayed after the business hours have been configured. But in practice, any Holiday gets prioritized over business hours. The M365 Call Flow Visualizer correctly represents this in its diagram outputs.&lt;/p&gt;
&lt;p&gt;I hope that this article helps you prepare for the Holidays so that you can leave for the Holidays with the peace of mind you need.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Updated Calling UI on Teams Desk Phones</title>
        <link>https://heusser.pro/p/updated-calling-ui-on-teams-desk-phones-9e8f18790f5a/</link>
        <pubDate>Thu, 29 Sep 2022 20:31:53 +0000</pubDate>
        
        <guid>https://heusser.pro/p/updated-calling-ui-on-teams-desk-phones-9e8f18790f5a/</guid>
        <description>&lt;p&gt;It’s been a while since I’ve used my Yealink MP56 Teams certified Desk Phone. I only bought it for testing purposes anyway… But today I noticed that the call control UI has been completely revamped.&lt;/p&gt;
&lt;p&gt;I’m running Firmware Version 1449/1.0.94.2022090705/0907. (And yes, I used the awesome PowerToys Text Extractor (Win + Shift + T) to copy the text from the screenshot below.)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/updated-calling-ui-on-teams-desk-phones-9e8f18790f5a/1GC3ucFmSDUefZHlDJh2Ig.jpeg&#34;
	width=&#34;800&#34;
	height=&#34;480&#34;
	srcset=&#34;https://heusser.pro/p/updated-calling-ui-on-teams-desk-phones-9e8f18790f5a/1GC3ucFmSDUefZHlDJh2Ig_hub1c6977932a8b95daa922e9b8266b0f7_19592_480x0_resize_q75_box.jpeg 480w, https://heusser.pro/p/updated-calling-ui-on-teams-desk-phones-9e8f18790f5a/1GC3ucFmSDUefZHlDJh2Ig_hub1c6977932a8b95daa922e9b8266b0f7_19592_1024x0_resize_q75_box.jpeg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;166&#34;
		data-flex-basis=&#34;400px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;An incoming call now looks like this. If I remember correctly, the buttons used to be much smaller and located next to each other at the bottom of the screen.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/updated-calling-ui-on-teams-desk-phones-9e8f18790f5a/1AegRntILpLiXhzwKM16Q.jpeg&#34;
	width=&#34;800&#34;
	height=&#34;480&#34;
	srcset=&#34;https://heusser.pro/p/updated-calling-ui-on-teams-desk-phones-9e8f18790f5a/1AegRntILpLiXhzwKM16Q_hudbbf0a83c75b03d5ec7871acd25b2d95_12538_480x0_resize_q75_box.jpeg 480w, https://heusser.pro/p/updated-calling-ui-on-teams-desk-phones-9e8f18790f5a/1AegRntILpLiXhzwKM16Q_hudbbf0a83c75b03d5ec7871acd25b2d95_12538_1024x0_resize_q75_box.jpeg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;166&#34;
		data-flex-basis=&#34;400px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;The in-call controls also feature larger, centered buttons now.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/updated-calling-ui-on-teams-desk-phones-9e8f18790f5a/1ukiZX9MRAIrIca4TTYAQ2Q.jpeg&#34;
	width=&#34;800&#34;
	height=&#34;480&#34;
	srcset=&#34;https://heusser.pro/p/updated-calling-ui-on-teams-desk-phones-9e8f18790f5a/1ukiZX9MRAIrIca4TTYAQ2Q_hu4dbda62c3e976473a63e8c9d17f0dfc8_14552_480x0_resize_q75_box.jpeg 480w, https://heusser.pro/p/updated-calling-ui-on-teams-desk-phones-9e8f18790f5a/1ukiZX9MRAIrIca4TTYAQ2Q_hu4dbda62c3e976473a63e8c9d17f0dfc8_14552_1024x0_resize_q75_box.jpeg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;166&#34;
		data-flex-basis=&#34;400px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;The transfer button has been moved to the main screen, which means that you’ll need one tap less to initiate a transfer now.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/updated-calling-ui-on-teams-desk-phones-9e8f18790f5a/1Q3TrkssZ05qBSiENlfxM1w.jpeg&#34;
	width=&#34;800&#34;
	height=&#34;480&#34;
	srcset=&#34;https://heusser.pro/p/updated-calling-ui-on-teams-desk-phones-9e8f18790f5a/1Q3TrkssZ05qBSiENlfxM1w_hu09872964ff934fea69f08af3f11cc2cb_10517_480x0_resize_q75_box.jpeg 480w, https://heusser.pro/p/updated-calling-ui-on-teams-desk-phones-9e8f18790f5a/1Q3TrkssZ05qBSiENlfxM1w_hu09872964ff934fea69f08af3f11cc2cb_10517_1024x0_resize_q75_box.jpeg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;166&#34;
		data-flex-basis=&#34;400px&#34;
	
&gt;
&lt;img src=&#34;https://heusser.pro/p/updated-calling-ui-on-teams-desk-phones-9e8f18790f5a/1fu0FAoGzkPiKzst5U9wfQ.jpeg&#34;
	width=&#34;800&#34;
	height=&#34;480&#34;
	srcset=&#34;https://heusser.pro/p/updated-calling-ui-on-teams-desk-phones-9e8f18790f5a/1fu0FAoGzkPiKzst5U9wfQ_hu617404fcf985abcacac65782d6a16c4e_28514_480x0_resize_q75_box.jpeg 480w, https://heusser.pro/p/updated-calling-ui-on-teams-desk-phones-9e8f18790f5a/1fu0FAoGzkPiKzst5U9wfQ_hu617404fcf985abcacac65782d6a16c4e_28514_1024x0_resize_q75_box.jpeg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;166&#34;
		data-flex-basis=&#34;400px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;The menu for the actual transfer / search looks the same in both the new and the old UI.&lt;/p&gt;
&lt;p&gt;You can still bring back the old view by tapping &lt;strong&gt;…More&lt;/strong&gt;. and then &lt;strong&gt;Change view.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/updated-calling-ui-on-teams-desk-phones-9e8f18790f5a/1zKuewvudu7c7RwrJgZKw.jpeg&#34;
	width=&#34;800&#34;
	height=&#34;480&#34;
	srcset=&#34;https://heusser.pro/p/updated-calling-ui-on-teams-desk-phones-9e8f18790f5a/1zKuewvudu7c7RwrJgZKw_hu1aa2ca1d7ce4f63bf0b9dd9c94affb9e_12665_480x0_resize_q75_box.jpeg 480w, https://heusser.pro/p/updated-calling-ui-on-teams-desk-phones-9e8f18790f5a/1zKuewvudu7c7RwrJgZKw_hu1aa2ca1d7ce4f63bf0b9dd9c94affb9e_12665_1024x0_resize_q75_box.jpeg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;166&#34;
		data-flex-basis=&#34;400px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;This will transition into the old UI where everything is located at the bottom of the screen.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/updated-calling-ui-on-teams-desk-phones-9e8f18790f5a/1qE72elvoIwvZ26ObznmP1g.png&#34;
	width=&#34;800&#34;
	height=&#34;480&#34;
	srcset=&#34;https://heusser.pro/p/updated-calling-ui-on-teams-desk-phones-9e8f18790f5a/1qE72elvoIwvZ26ObznmP1g_hu0863ac67ae6b58790cdeeaa7f47e452c_41690_480x0_resize_box_3.png 480w, https://heusser.pro/p/updated-calling-ui-on-teams-desk-phones-9e8f18790f5a/1qE72elvoIwvZ26ObznmP1g_hu0863ac67ae6b58790cdeeaa7f47e452c_41690_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;166&#34;
		data-flex-basis=&#34;400px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Funny enough, there’s no option to switch back to the new look once you’ve changed the view.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/updated-calling-ui-on-teams-desk-phones-9e8f18790f5a/17YI7KnZsSDfyPws1bdWHA.jpeg&#34;
	width=&#34;800&#34;
	height=&#34;480&#34;
	srcset=&#34;https://heusser.pro/p/updated-calling-ui-on-teams-desk-phones-9e8f18790f5a/17YI7KnZsSDfyPws1bdWHA_hubebc17b38653dbb85925eae442166da5_10535_480x0_resize_q75_box.jpeg 480w, https://heusser.pro/p/updated-calling-ui-on-teams-desk-phones-9e8f18790f5a/17YI7KnZsSDfyPws1bdWHA_hubebc17b38653dbb85925eae442166da5_10535_1024x0_resize_q75_box.jpeg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;166&#34;
		data-flex-basis=&#34;400px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;The only way to get back to the new view is if you tap the &lt;strong&gt;←&lt;/strong&gt; arrow and then &lt;strong&gt;Tap to return to call.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/updated-calling-ui-on-teams-desk-phones-9e8f18790f5a/1GekqCj551lsyzSTrdKAQg.png&#34;
	width=&#34;800&#34;
	height=&#34;97&#34;
	srcset=&#34;https://heusser.pro/p/updated-calling-ui-on-teams-desk-phones-9e8f18790f5a/1GekqCj551lsyzSTrdKAQg_hu7201c93d5266cbd3ee912ecb547208a4_20965_480x0_resize_box_3.png 480w, https://heusser.pro/p/updated-calling-ui-on-teams-desk-phones-9e8f18790f5a/1GekqCj551lsyzSTrdKAQg_hu7201c93d5266cbd3ee912ecb547208a4_20965_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;824&#34;
		data-flex-basis=&#34;1979px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;This will bring back the revamped UI for the active call. I suspect that the old UI will be removed entirely sooner or later. I don’t see any reason why one would need or want two different calling UIs. I also don’t think that Microsoft wants to maintain two different UIs. Especially if the new one features a lot of improvements and welcome changes.&lt;/p&gt;
&lt;p&gt;Oh, and thanks to MVP James Cussen for the awesome &lt;a class=&#34;link&#34; href=&#34;https://www.myteamslab.com/2020/10/teams-phone-screen-capture-tool.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Teams Phone Screen Capture Tool&lt;/a&gt;.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Automatically Notify Users to Update Teams Holidays for Next Year</title>
        <link>https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/</link>
        <pubDate>Wed, 07 Sep 2022 10:19:11 +0000</pubDate>
        
        <guid>https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/</guid>
        <description>&lt;p&gt;In my last few articles, I’ve talked about building Teams Phone self-service solutions for end users. The reason one might want to do this is quite obvious: We don’t want to give users access to Teams Admin Center but as engineers, we don’t want to take on tedious tasks like updating an Auto Attendant’s Holiday list either.&lt;/p&gt;
&lt;p&gt;Even though pretty much everything that can be configured in TAC, including managing Holidays can be scripted with PowerShell, Holidays still require a fixed date and time range and can’t be renewed automatically or fetched from an external source. This results in a considerable administrative overhead for both Teams admins and end users.&lt;/p&gt;
&lt;p&gt;When I need to configure Teams Holidays, I always ask users to provide a list where each holiday is noted &lt;strong&gt;with an explicit date&lt;/strong&gt;. I’m not going to do the work for them and go look up when exactly a Holiday takes place next year. (For Holidays which don’t have a fixed date at least.) I’ve seen some lazy users try to take a shortcut and tell me to just add “all lawful Bank Holidays” of Country/State/Canton XY. Unfortunately, that’s not how it works my dear users. I’d spend hours looking up this stuff and probably still end up with some wrong dates anyway. That’s why I set out and created a better solution. /rant&lt;/p&gt;
&lt;p&gt;In this article, I’m going to show you a solution where the whole process of &lt;strong&gt;maintaining&lt;/strong&gt; a Holiday List can be outsourced to end users. Admins only need to set up Holidays &lt;strong&gt;once&lt;/strong&gt; initially.&lt;/p&gt;
&lt;h4 id=&#34;recap&#34;&gt;Recap&lt;/h4&gt;
&lt;p&gt;Before we dive in, let’s recap what I’ve published in my last articles to give you some context on Teams self-service solutions using Azure Automation and Adaptive Cards.&lt;/p&gt;
&lt;p&gt;It all began with &lt;a class=&#34;link&#34; href=&#34;https://heusser.pro/p/microsoft-teams-self-service-auto-attendants-without-premium-connectors-27e6f1281851?source=user_profile---------11----------------------------&#34; &gt;this article&lt;/a&gt; where I wrote about my take on a self-service solution which lets users manually open or close an Auto Attendant. This solution builds on the work of Microsoft MVPs which are linked in the original article.&lt;/p&gt;
&lt;p&gt;I then went on and published &lt;a class=&#34;link&#34; href=&#34;https://heusser.pro/p/microsoft-teams-self-service-call-queue-solution-part-2-ab8201157831&#34; &gt;this piece&lt;/a&gt; which uses the same principle but lets users enable or disable immediate forwarding to an external number or update the external forwarding target number on a Call Queue.&lt;/p&gt;
&lt;p&gt;We can use these examples and build on them to create something similar for Auto Attendant Holidays.&lt;/p&gt;
&lt;h4 id=&#34;how-does-itwork&#34;&gt;How Does it Work?&lt;/h4&gt;
&lt;p&gt;It’s important to understand that there needs to be an existing, initial configuration in your Tenant. This means that you as a Teams Phone admin need to sit down with the person in charge of the reception phone or whoever oversees Holidays at your company. You then need to configure either a single or multiple Holiday lists in TAC and link them to each Auto Attendant, where they’re required.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/1fQcNBnDUDxER2RrRYDd3w.png&#34;
	width=&#34;2190&#34;
	height=&#34;315&#34;
	srcset=&#34;https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/1fQcNBnDUDxER2RrRYDd3w_hu566f6967f18e739f97133f47e8795545_41073_480x0_resize_box_3.png 480w, https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/1fQcNBnDUDxER2RrRYDd3w_hu566f6967f18e739f97133f47e8795545_41073_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Holiday Schedules in Teams Admin Center&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;695&#34;
		data-flex-basis=&#34;1668px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;My solution currently doesn’t have an option to allow users to add new Holidays to a list. When a new Holiday needs to be added, users must still request the change at IT. After it has been added to the list, there’s no additional work required for the new Holiday to also support user self-serviced updating.&lt;/p&gt;
&lt;p&gt;I created an Azure Runbook which runs on a schedule. I suppose running it weekly will suffice. If you wish, you can even run it daily. The script checks if the difference between the &lt;strong&gt;run time of the Job&lt;/strong&gt; and the &lt;strong&gt;end date&lt;/strong&gt; of a Holiday is bigger than 24 hours. This is because Holiday dates/lists itself don’t have a time zone property. But Auto Attendants do have a time zone setting, thus, we need to make sure that a Holiday is not updated/deleted before the Holiday would end in an Attendant specific time zone. A buffer of 24 hours should work well considering that the largest UTC offset is +14 hours.&lt;/p&gt;
&lt;p&gt;When the script runs, it will send a Teams Message Card to a Channel for each Holiday which now lies in the past. (Even though they are technically &lt;a class=&#34;link&#34; href=&#34;https://docs.microsoft.com/en-us/outlook/actionable-messages/message-card-reference&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Legacy Actionable Message Cards&lt;/a&gt; I will just refer to them as &lt;a class=&#34;link&#34; href=&#34;https://adaptivecards.io/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Adaptive Cards&lt;/a&gt; from now on.)&lt;/p&gt;
&lt;p&gt;Members of the channel will be able to see the dates, the name of the Holiday schedule as well as all linked Auto Attendants on the Adaptive Card. Furthermore, the script will add one year to the current dates and pre-fill the dates of next year as a suggested value in the date picker.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/1QKq3e17FCDqQEvn5hbJzfg.png&#34;
	width=&#34;1489&#34;
	height=&#34;745&#34;
	srcset=&#34;https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/1QKq3e17FCDqQEvn5hbJzfg_huc70f0e625d6de404417cec12bf5bbdad_88199_480x0_resize_box_3.png 480w, https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/1QKq3e17FCDqQEvn5hbJzfg_huc70f0e625d6de404417cec12bf5bbdad_88199_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;en-US date format&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;199&#34;
		data-flex-basis=&#34;479px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Because we’re using Adaptive Cards, the date format will automatically adjust to the Teams Clients display language. In this example, the Teams Client was set to German (Switzerland).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/15exIWj45WBr92GT2Jut6UQ.png&#34;
	width=&#34;1478&#34;
	height=&#34;737&#34;
	srcset=&#34;https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/15exIWj45WBr92GT2Jut6UQ_hu511f00ce72f53e1d7362bd42dfb8b45b_86746_480x0_resize_box_3.png 480w, https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/15exIWj45WBr92GT2Jut6UQ_hu511f00ce72f53e1d7362bd42dfb8b45b_86746_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;de-CH date format&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;200&#34;
		data-flex-basis=&#34;481px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Members can then review and accept the new dates or change them in case a Holiday falls on a different day next year.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/1AcxduYIh3KWZjYOITozFQ.png&#34;
	width=&#34;1485&#34;
	height=&#34;794&#34;
	srcset=&#34;https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/1AcxduYIh3KWZjYOITozFQ_hu598c0580cccbb0e42acaa8293abd63ae_104838_480x0_resize_box_3.png 480w, https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/1AcxduYIh3KWZjYOITozFQ_hu598c0580cccbb0e42acaa8293abd63ae_104838_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Adaptive Card date picker&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;187&#34;
		data-flex-basis=&#34;448px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;If needed, they can also configure a start or end time, if for example, a Holiday only starts at noon.&lt;/p&gt;
&lt;p&gt;Finally, they will need to select their local time zone. This is due to the fact that the Adaptive Card will submit the date and time based on the time zone which is configured on the local PC where Teams is running.&lt;/p&gt;
&lt;p&gt;In early testing stages of this solution, “00:00” was always passed to the Azure Function as “23:00” because I live in UTC-1. Without this information the Function wouldn’t be able to do its magic and convert it back to the correct date.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/1h3iWOIBo7n33yhjeAHKNow.png&#34;
	width=&#34;1397&#34;
	height=&#34;420&#34;
	srcset=&#34;https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/1h3iWOIBo7n33yhjeAHKNow_hu1110f4762f6de09525b47d659c1db887_62767_480x0_resize_box_3.png 480w, https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/1h3iWOIBo7n33yhjeAHKNow_hu1110f4762f6de09525b47d659c1db887_62767_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Adaptive Card drop-down list&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;332&#34;
		data-flex-basis=&#34;798px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;I’ve included all time zones which are supported on Windows Systems.&lt;/p&gt;
&lt;p&gt;Now all a user needs to do is to click “Submit New Dates”. This will pass all the information to an Azure Function, Update the card, and fire up the Runbook.&lt;/p&gt;
&lt;p&gt;In other words, users won’t need to bother you to update their Holidays anymore. After each time a Holiday has passed, they will get a card which allows them to update it for next year by themselves.&lt;/p&gt;
&lt;h4 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h4&gt;
&lt;p&gt;Just as with my previous articles you need to have the following things ready in Azure.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;An Azure Function App so that we can create a new Function&lt;/li&gt;
&lt;li&gt;An Azure Automation Account so we can create 2x new Runbooks&lt;/li&gt;
&lt;li&gt;Azure Automation Credentials with Teams Administrator Permissions&lt;/li&gt;
&lt;li&gt;An Incoming Teams Webhook&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you struggle to set up any of these, I recommend reading my &lt;a class=&#34;link&#34; href=&#34;https://heusser.pro/p/microsoft-teams-self-service-auto-attendants-without-premium-connectors-27e6f1281851&#34; &gt;first article&lt;/a&gt; about this topic. I also suggest creating a dedicated Teams Channel where the webhook will be added. More on that later.&lt;/p&gt;
&lt;h4 id=&#34;azure-runbook-checkholidayschedules&#34;&gt;Azure Runbook: CheckHolidaySchedules&lt;/h4&gt;
&lt;p&gt;Let’s create the first Runbook. This will be the one which logs into Teams PowerShell and checks if there are any Holidays which already lie in the past compared to the time of the Runbook Job.&lt;/p&gt;
&lt;p&gt;Enter your &lt;code&gt;$teamsWebhookUrl&lt;/code&gt; on line 2. If you like, you can change the &lt;code&gt;$defaultLocalTimeZone&lt;/code&gt; on line 3 to the time zone where most of your users are located. Make sure you also adjust the name of your Credential if yours has a different name.&lt;/p&gt;
&lt;p&gt;Leave the &lt;code&gt;$functionUrl&lt;/code&gt; empty for now since we don’t have that one yet.&lt;/p&gt;
&lt;script src=&#34;https://gist.github.com/mozziemozz/76a5f782a129ff06c6093158f1b81004.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;Save and publish the Runbook. Don’t forget to add a schedule to the Runbook. If you need a reminder on how to do that, please see &lt;a class=&#34;link&#34; href=&#34;https://heusser.pro/p/automatically-enable-overflow-action-on-call-queues-if-no-agents-are-opted-in-f1c9bea7cb87&#34; &gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h4 id=&#34;azure-runbook-updateholidayschedules&#34;&gt;Azure Runbook: UpdateHolidaySchedules&lt;/h4&gt;
&lt;p&gt;This Runbook will receive all the information a user has entered on the Adaptive Card. Because we also want to update the card, but Runbooks don’t support that, we will pass all the information from the card to the Function first. This includes the old date time range (so the script knows which one needs to be replaced), the newly entered dates and the time zone of the user.&lt;/p&gt;
&lt;p&gt;The Function will then pass the data to the Runbook. Because the script now has both the old and new dates, it will be able to remove the old values and add the new ones to the Holiday schedule.&lt;/p&gt;
&lt;p&gt;Paste your Teams Webhook URL on line 7 before you save.&lt;/p&gt;
&lt;script src=&#34;https://gist.github.com/mozziemozz/d871770b0f9c477d765f5ff2f391c03e.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;To be able to call this Runbook from the Function, we’ll need to add a Webhook trigger to it as it’s described &lt;a class=&#34;link&#34; href=&#34;https://www.bing.com/search?q=azure&amp;#43;runbook&amp;#43;webhook&amp;#43;docs&amp;amp;form=ANNTH1&amp;amp;refig=f6e9976ff1de4f9baa308faa7c1bbdd2&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;here&lt;/a&gt;. Before you click Create, copy its URL.&lt;/p&gt;
&lt;h4 id=&#34;azure-function-updatecardandtriggerrunbook&#34;&gt;Azure Function: UpdateCardAndTriggerRunbook&lt;/h4&gt;
&lt;p&gt;Now we can create the Function. Set &lt;code&gt;$runBookUrl&lt;/code&gt; to the Runbook’s webhook URL on line 6 and save the Function.&lt;/p&gt;
&lt;script src=&#34;https://gist.github.com/mozziemozz/01ab601212a7bb42dc5b8257f91b8f30.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;For the last step, we need to copy the URL of the Function and go back to our first Runbook “CheckHolidaySchedules”.&lt;/p&gt;
&lt;h4 id=&#34;runbook-checkholidayschedules-again&#34;&gt;Runbook CheckHolidaySchedules (Again)&lt;/h4&gt;
&lt;p&gt;Edit the Runbook and set the &lt;code&gt;$functionUrl&lt;/code&gt; variable to the copied Function URL on line 1. Save and Publish the Runbook again.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/1GR5EyFfJfYB6i4K3scmjeg.png&#34;
	width=&#34;1055&#34;
	height=&#34;42&#34;
	srcset=&#34;https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/1GR5EyFfJfYB6i4K3scmjeg_hua1b9b88479cb1e8fbcfaceadd9d189b9_2290_480x0_resize_box_3.png 480w, https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/1GR5EyFfJfYB6i4K3scmjeg_hua1b9b88479cb1e8fbcfaceadd9d189b9_2290_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;2511&#34;
		data-flex-basis=&#34;6028px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;test-drive&#34;&gt;Test Drive&lt;/h4&gt;
&lt;p&gt;During normal operation, we would need to wait for a Holiday to be over before anything happens. In our case, we can test by manually starting the Runbook.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/1H9UkxAEL3jrTfviZvVSgg.png&#34;
	width=&#34;1520&#34;
	height=&#34;235&#34;
	srcset=&#34;https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/1H9UkxAEL3jrTfviZvVSgg_hu747e59c015796a6b0567a2fbfcd8f12a_48021_480x0_resize_box_3.png 480w, https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/1H9UkxAEL3jrTfviZvVSgg_hu747e59c015796a6b0567a2fbfcd8f12a_48021_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Start the Runbook to test&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;646&#34;
		data-flex-basis=&#34;1552px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;After a few seconds, we should start seeing some new Adaptive Cards in our channel. Keep in mind that triggering the Runbook for the first time will post a card for each Holiday which has already passed. We can also see which Auto Attendants are affected on the card.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/1AYdQc3exHJ9FyyXQiVqSA.png&#34;
	width=&#34;1480&#34;
	height=&#34;746&#34;
	srcset=&#34;https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/1AYdQc3exHJ9FyyXQiVqSA_hub2b8aedf00e11d925bf19bc15d7ce787_88013_480x0_resize_box_3.png 480w, https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/1AYdQc3exHJ9FyyXQiVqSA_hub2b8aedf00e11d925bf19bc15d7ce787_88013_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Adaptive Card sent by the Runbook&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;198&#34;
		data-flex-basis=&#34;476px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;After new dates have been submitted by a user, the Function will update the card.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/19gmVaYLQTt48rRlAxtOv3g.png&#34;
	width=&#34;1478&#34;
	height=&#34;239&#34;
	srcset=&#34;https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/19gmVaYLQTt48rRlAxtOv3g_hubfd1aca977c57076cfa4c39ac9334293_34008_480x0_resize_box_3.png 480w, https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/19gmVaYLQTt48rRlAxtOv3g_hubfd1aca977c57076cfa4c39ac9334293_34008_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Adaptive Card after it has been updated by the Function&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;618&#34;
		data-flex-basis=&#34;1484px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;As soon as the Runbook has finished, it will post another card to the channel to confirm that the Holiday has been renewed for next year. For review purposes both the old and new dates are included. If anybody made a mistake, they could still contact IT to manually fix the dates.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/1DTMQw26Duejt40miV2ig.png&#34;
	width=&#34;1482&#34;
	height=&#34;304&#34;
	srcset=&#34;https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/1DTMQw26Duejt40miV2ig_hu704bf8f956c3214c88230f7c7196ef92_49852_480x0_resize_box_3.png 480w, https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/1DTMQw26Duejt40miV2ig_hu704bf8f956c3214c88230f7c7196ef92_49852_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Adaptive Card confirmation sent by the second Runbook&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;487&#34;
		data-flex-basis=&#34;1170px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;If we switch to the Holiday list in TAC, we can see that the Runbook added the new Holiday and removed the old one.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/11Wx5wc7HVIBSgXum5COQLA.png&#34;
	width=&#34;1290&#34;
	height=&#34;866&#34;
	srcset=&#34;https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/11Wx5wc7HVIBSgXum5COQLA_hu9819c5d3af9f7b3c27ade27e6e31c607_101306_480x0_resize_box_3.png 480w, https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/11Wx5wc7HVIBSgXum5COQLA_hu9819c5d3af9f7b3c27ade27e6e31c607_101306_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;01. September 2023 has been added at the end of the list by the Runbook&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;148&#34;
		data-flex-basis=&#34;357px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h4&gt;
&lt;p&gt;Out of all the Teams self-service automation solutions I already did, I think that this is actually the coolest one. Not only does it provide a great user experience because everything can be done from within Teams, but it also makes sure nobody forgets to update the company’s Holiday list. No more last-minute support tickets just before you were about to leave for the Christmas break.&lt;/p&gt;
&lt;p&gt;And the best part is that we don’t need to grant any kind of admin permission. The only thing we need to make sure is that only the people who are allowed to update the Holidays have access to the Teams Channel.&lt;/p&gt;
&lt;p&gt;The whole point of using a script to automatically notify us when a Holiday has passed instead of using the &lt;strong&gt;request a change on-demand approach&lt;/strong&gt; like with the other two self-service examples is that nobody forgets about updating the Holidays. To make sure that users don’t miss the Adaptive Cards in Teams, I suggest using a dedicated channel and having them turn on notifications for all activity on said channel.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/1VTj3UiR6hEnLHyOiYbAUQ.png&#34;
	width=&#34;1186&#34;
	height=&#34;398&#34;
	srcset=&#34;https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/1VTj3UiR6hEnLHyOiYbAUQ_hua27dfc0373145416591fb095ee23bcbc_36471_480x0_resize_box_3.png 480w, https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/1VTj3UiR6hEnLHyOiYbAUQ_hua27dfc0373145416591fb095ee23bcbc_36471_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Channel notification Settings in Teams&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;297&#34;
		data-flex-basis=&#34;715px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;By using a dedicated channel for Holiday self-service, we don’t need to force users to turn on all notifications for channels which might have much more activity/trigger too many notifications.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Everything You Ever Wanted to Know About Teams Resource Accounts</title>
        <link>https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-resource-accounts-2ff9661fc489/</link>
        <pubDate>Mon, 29 Aug 2022 19:45:51 +0000</pubDate>
        
        <guid>https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-resource-accounts-2ff9661fc489/</guid>
        <description>&lt;p&gt;Today we’re going to take a detailed look at Teams Resource Accounts.&lt;/p&gt;
&lt;p&gt;Resource Accounts are special Azure AD Objects (or Microsoft 365 User Accounts, if you will) which can only be created from Teams Admin Center or via Teams PowerShell. It’s not possible to create such an account in M365 Admin or Azure AD. What’s funny though is that they can only be deleted from M365 Admin or AAD but not from Teams Admin Center or Teams PowerShell.&lt;/p&gt;
&lt;h4 id=&#34;the-basics&#34;&gt;The Basics&lt;/h4&gt;
&lt;p&gt;Currently, there are two different types of so called first-party (Microsoft) Resource Accounts. Call Queues and Auto Attendants. These accounts are then associated with corresponding types of Voice App, which are again, Call Queues or Auto Attendants.&lt;/p&gt;
&lt;p&gt;Each Resource Account can only be associated with &lt;strong&gt;one&lt;/strong&gt; Voice App, but a Voice App can have multiple Resource Accounts associated. Just like with Teams users, each Resource Account can also only have &lt;strong&gt;one&lt;/strong&gt; phone number assigned. For example, you can have an Auto Attendant which has multiple Resource Accounts assigned, where each Resource Account has a phone number from a different country. This way you can have an Auto Attendant which serves customers across multiple countries, but each customer will be able to call a local number.&lt;/p&gt;
&lt;h4 id=&#34;how-to-create-a-resourceaccount&#34;&gt;How to Create a Resource Account&lt;/h4&gt;
&lt;p&gt;You can create new Resource Accounts from TAC. They are located under &lt;a class=&#34;link&#34; href=&#34;https://admin.teams.microsoft.com/company-wide-settings/resource-accounts&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Voice\Resource accounts&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There are a few things to consider here. The first one is naming. If you have a complex call flow, chances are that you will have many Auto Attendants, Call Queues and Resource Accounts. I always use a prefix and suffix system.&lt;/p&gt;
&lt;p&gt;The Display Name is followed by the suffix “AA” or “CQ”. This way it will be easier to identify the correct Resource Account, when you associate it with a Voice App. The User Principal Name is led by the prefix “ra_aa_” or “ra_cq_” so that they can easily be filtered in AAD. Of course, this is only a suggestion, you’re free to name them however you want.&lt;/p&gt;
&lt;p&gt;Usually, I just use the *.onmicrosoft.com name of the Tenant as the domain suffix. External users won’t be able to interact with these kinds of accounts, so it doesn’t matter if you don’t use your default custom domain name.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-resource-accounts-2ff9661fc489/1AWJTS0fgG35lia04bwh5w.png&#34;
	width=&#34;507&#34;
	height=&#34;614&#34;
	srcset=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-resource-accounts-2ff9661fc489/1AWJTS0fgG35lia04bwh5w_hucf59d4edd313e17d25d7e479f7824db8_39268_480x0_resize_box_3.png 480w, https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-resource-accounts-2ff9661fc489/1AWJTS0fgG35lia04bwh5w_hucf59d4edd313e17d25d7e479f7824db8_39268_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;82&#34;
		data-flex-basis=&#34;198px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Here are the &lt;a class=&#34;link&#34; href=&#34;https://docs.microsoft.com/en-us/powershell/module/skype/new-csonlineapplicationinstance?view=skype-ps&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PowerShell equivalent commands&lt;/a&gt; to create Resoure Accounts.&lt;/p&gt;
&lt;p&gt;Auto Attendant:&lt;/p&gt;
&lt;p&gt;# App Id Auto Attendants: ce933385-9390-45d1-9512-c8d228074e07&lt;/p&gt;
&lt;p&gt;New-CsOnlineApplicationInstance -UserPrincipalName &amp;ldquo;ra_aa_example_ps@domain.com&amp;rdquo; -ApplicationId &amp;ldquo;ce933385-9390-45d1-9512-c8d228074e07&amp;rdquo; -DisplayName &amp;ldquo;Example PS AA&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Call Queues:&lt;/p&gt;
&lt;p&gt;# App Id Call Queues: 11cd3e2e-fccb-42ad-ad00-878b93575e07&lt;/p&gt;
&lt;p&gt;New-CsOnlineApplicationInstance -UserPrincipalName &amp;ldquo;ra_cq_example_ps@domain.com&amp;rdquo; -ApplicationId &amp;ldquo;11cd3e2e-fccb-42ad-ad00-878b93575e07&amp;rdquo; -DisplayName &amp;ldquo;Example PS CQ&amp;rdquo;&lt;/p&gt;
&lt;h4 id=&#34;searching-for-resourceaccounts&#34;&gt;Searching for Resource Accounts&lt;/h4&gt;
&lt;p&gt;If you want to return all Resource Accounts by PowerShell, the MicrosoftTeams Module 4.6.0 now supports a parameter to only return Resource Accounts: &lt;code&gt;Get-CsOnlineUser -AccountType ResourceAccount&lt;/code&gt; . If we didn’t include a prefix or a suffix, there’s currently no way to tell if the returned objects are Queues or Attendants.&lt;/p&gt;
&lt;p&gt;For that, we need to use&lt;code&gt;Get-CsOnlineApplicationInstance&lt;/code&gt; . This will return a list with some basic information like Display Name, UPN, Phone Number and Application Id.&lt;/p&gt;
&lt;h4 id=&#34;licensing-resourceaccounts&#34;&gt;Licensing Resource Accounts&lt;/h4&gt;
&lt;p&gt;A Resource Account must be licensed in the following cases:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If you want to assign a phone number to it&lt;/li&gt;
&lt;li&gt;If the Resource Accounts needs to be able to transfer calls to external numbers&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Update 29.01.2023&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Microsoft updated their documentation. From now on, &lt;strong&gt;every&lt;/strong&gt; Resource Account must be licensed, regardless of if a phone number is assigned or not. You can find more info &lt;a class=&#34;link&#34; href=&#34;https://learn.microsoft.com/en-us/microsoftteams/manage-resource-accounts#assign-a-license&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;An easy way to ensure that every Teams Resource Account is licensed properly is to use a dynamic user Azure AD Group which automatically assigns the license. The easiest way to do so is to filter on the Department attribute.&lt;/p&gt;
&lt;p&gt;(user.department -eq &amp;ldquo;Microsoft Communication Application Instance&amp;rdquo;)&lt;/p&gt;
&lt;p&gt;If you need step-by-step instructions on how to create an Azure AD Group with a dynamic query, please consult &lt;a class=&#34;link&#34; href=&#34;https://heusser.pro/p/create-a-dynamic-azure-ad-group-with-all-teams-phone-standard-licensed-users-3a4194284739&#34; &gt;this&lt;/a&gt; article and just replace the query with the one above.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/Update&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update 06.02.2023&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Thanks to a reader &lt;a class=&#34;link&#34; href=&#34;https://medium.com/p/3c1dad7d67c&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;comment&lt;/a&gt;, it was brought to my attention, that group based licensing actually requires an Azure AD Premium P1 license, for any user which takes advantage of the feature. This is documented &lt;a class=&#34;link&#34; href=&#34;https://learn.microsoft.com/en-us/azure/active-directory/fundamentals/active-directory-licensing-whatis-azure-portal#licensing-requirements&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I don’t know if a resource account qualifies as “user” because they are resource account and sign-in blocked. If you want to be absolutely sure, I recommend that you have a P1 license for each resource account or that you contact your account manager at Microsoft and ask them about this.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/Update&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Licensing can’t be done from TAC. We need to use AAD or M365 Admin. As we can see, the account “Example AA” has now been created in AAD.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-resource-accounts-2ff9661fc489/1evT4xkagZq7LVOGeSDAn5w.png&#34;
	width=&#34;1759&#34;
	height=&#34;382&#34;
	srcset=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-resource-accounts-2ff9661fc489/1evT4xkagZq7LVOGeSDAn5w_huf34e2e9e047dda8dc57232887efed293_41168_480x0_resize_box_3.png 480w, https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-resource-accounts-2ff9661fc489/1evT4xkagZq7LVOGeSDAn5w_huf34e2e9e047dda8dc57232887efed293_41168_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;460&#34;
		data-flex-basis=&#34;1105px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Because this is a special kind of account, it’s Sign-in blocked. This means that the account doesn’t support interactive sign-ins.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-resource-accounts-2ff9661fc489/1juIc9FR7liYQzHJAbkhg.png&#34;
	width=&#34;854&#34;
	height=&#34;220&#34;
	srcset=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-resource-accounts-2ff9661fc489/1juIc9FR7liYQzHJAbkhg_hub96f9c647c50e4be5a34527a347e08ac_22963_480x0_resize_box_3.png 480w, https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-resource-accounts-2ff9661fc489/1juIc9FR7liYQzHJAbkhg_hub96f9c647c50e4be5a34527a347e08ac_22963_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;388&#34;
		data-flex-basis=&#34;931px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Another important info is that these accounts have “Microsoft Communication Application Instance” set as their department. Just leave this as it is and don’t change anything.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-resource-accounts-2ff9661fc489/1LXbE3uikECfwcAvF4MvTkw.png&#34;
	width=&#34;819&#34;
	height=&#34;117&#34;
	srcset=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-resource-accounts-2ff9661fc489/1LXbE3uikECfwcAvF4MvTkw_hua7a594ac5fb1d88dc77b8f53a8345bef_10312_480x0_resize_box_3.png 480w, https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-resource-accounts-2ff9661fc489/1LXbE3uikECfwcAvF4MvTkw_hua7a594ac5fb1d88dc77b8f53a8345bef_10312_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;700&#34;
		data-flex-basis=&#34;1680px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Based on my experience, it’s no problem to change its Display or User Principal Name though.&lt;/p&gt;
&lt;p&gt;If you want to assign a phone number to a Resource Account, you will need to assign a license to it. Microsoft has recently renamed the old license “Microsoft Teams Phone — Virtual User” to “Microsoft Teams Phone Resource Account”.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-resource-accounts-2ff9661fc489/17nSgscEOXkNkdAbl5pliw.png&#34;
	width=&#34;511&#34;
	height=&#34;87&#34;
	srcset=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-resource-accounts-2ff9661fc489/17nSgscEOXkNkdAbl5pliw_hu649f645650307a80b1356743a4b6c87d_11684_480x0_resize_box_3.png 480w, https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-resource-accounts-2ff9661fc489/17nSgscEOXkNkdAbl5pliw_hu649f645650307a80b1356743a4b6c87d_11684_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;587&#34;
		data-flex-basis=&#34;1409px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;What’s really nice about these licenses, is that their free. &lt;a class=&#34;link&#34; href=&#34;https://docs.microsoft.com/en-us/microsoftteams/teams-add-on-licensing/virtual-user#resource-account-license-allocation&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;At least to some extent&lt;/a&gt;. If you have at least one Teams Phone license, you will get 25 Teams Phone Resource Account licenses for free. After that, you will get 1 Resource Account license for every 10 Teams Phone licenses. The “PowerShell Name” or rather the AccountSkuId of this license is still called “TenantName:PHONESYSTEM_VIRTUALUSER”. Unlike Teams Phone which needs a “base license” like a Business Premium or Enterprise E3, Resource Account licenses can be assigned as standalone licenses.&lt;/p&gt;
&lt;h4 id=&#34;how-to-assign-phone-numbers-to-resourceaccounts&#34;&gt;How to Assign Phone Numbers to Resource Accounts&lt;/h4&gt;
&lt;p&gt;Once you’ve assigned a license to a Resource Account you can either use TAC or PowerShell to assign a phone number to the account.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-resource-accounts-2ff9661fc489/1vhe0ahawllXMWMWFpxQ.png&#34;
	width=&#34;498&#34;
	height=&#34;750&#34;
	srcset=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-resource-accounts-2ff9661fc489/1vhe0ahawllXMWMWFpxQ_hu627d729aeed47bd416b748512d13ddb9_65569_480x0_resize_box_3.png 480w, https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-resource-accounts-2ff9661fc489/1vhe0ahawllXMWMWFpxQ_hu627d729aeed47bd416b748512d13ddb9_65569_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;66&#34;
		data-flex-basis=&#34;159px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;For PowerShell, you can use the same command as you would with a normal user. You might stumble upon outdated articles which mention the following command.&lt;/p&gt;
&lt;p&gt;Set-CsOnlineApplicationInstance -Identity &amp;ldquo;ra_aa_example_ps@domain.com&amp;rdquo; -OnPremPhoneNumber +4144512xxxx&lt;/p&gt;
&lt;p&gt;The new one is the following:&lt;/p&gt;
&lt;p&gt;Set-CsPhoneNumberAssignment -Identity &amp;ldquo;ra_aa_example_ps@domain.com&amp;rdquo; -PhoneNumber +4144512xxxx -PhoneNumberType DirectRouting&lt;/p&gt;
&lt;p&gt;Even though the Resource Account now has a phone number assigned to it, the number won’t be active until the Resource Account is associated with a Voice App. We’ll get to that later.&lt;/p&gt;
&lt;h4 id=&#34;how-to-assign-a-voice-routing-policy-to-a-resourceaccount&#34;&gt;How to Assign a Voice Routing Policy to a Resource Account&lt;/h4&gt;
&lt;p&gt;If the Resource Account should be able to transfer calls to external PSTN numbers using Direct Routing, we will also need to assign a Voice Routing Policy to it. This can also be done from TAC. Select your Resource Account and click on Edit. Now choose your desired Voice Routing Policy and click Save.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-resource-accounts-2ff9661fc489/1au4ToHQ2IwpJc3nIrDgPqQ.png&#34;
	width=&#34;511&#34;
	height=&#34;532&#34;
	srcset=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-resource-accounts-2ff9661fc489/1au4ToHQ2IwpJc3nIrDgPqQ_hubd27a7a9fb92c57e04889fe786fb083b_31657_480x0_resize_box_3.png 480w, https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-resource-accounts-2ff9661fc489/1au4ToHQ2IwpJc3nIrDgPqQ_hubd27a7a9fb92c57e04889fe786fb083b_31657_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;96&#34;
		data-flex-basis=&#34;230px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Doing it with PowerShell is again, the same as if it was a normal user.&lt;/p&gt;
&lt;p&gt;Grant-CsOnlineVoiceRoutingPolicy -Identity &amp;ldquo;&lt;a class=&#34;link&#34; href=&#34;mailto:ra_aa_example_ps@domain.com&#34; &gt;ra_aa_example_ps@domain.com&lt;/a&gt;&amp;rdquo; -PolicyName &amp;ldquo;Test&amp;rdquo;&lt;/p&gt;
&lt;h4 id=&#34;how-to-change-the-type-of-a-resourceaccount&#34;&gt;How to Change the Type of a Resource Account&lt;/h4&gt;
&lt;p&gt;On that same “Edit resource account” window, it’s also possible to change the type of a Resource Account. This can also be done by PowerShell. Just use the &lt;a class=&#34;link&#34; href=&#34;https://docs.microsoft.com/en-us/powershell/module/skype/set-csonlineapplicationinstance?view=skype-ps&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Set-CsApplicationInstance&lt;/a&gt; cmdlet and include the &lt;code&gt;-Identity&lt;/code&gt; and &lt;code&gt;-ApplicationId&lt;/code&gt; parameters. Even though this should work in theory, I haven’t tested it myself since I recommend re-creating them, if ever needed. Also be careful when 3rd party resource accounts e.g. from Attendant Console or Contact Center vendors are in play. TAC only supports first party Application Ids and won’t allow you to save changes you made without choosing a Resource Account type. Use PowerShell if you need to assign an online voice routing policy to a 3rd party resource account.&lt;/p&gt;
&lt;h4 id=&#34;how-to-associate-a-resource-account-with-a-voiceapp&#34;&gt;How to Associate a Resource Account with a Voice App&lt;/h4&gt;
&lt;p&gt;In most cases, having one Resource Account per Queue or Attendant is enough. Let’s make a small detour and talk about naming again for a second. To avoid confusion, I always make sure that the Display Name for the Queue/Attendant and the Resource Account are the same. If a Voice App needs multiple resource accounts, I use numbering on the resource account names. It’s important to note that the Display Name of the Resource Account is the name which a recipient of a call which was transferred by an Attendant or a Queue will see on the Teams toast notification.&lt;/p&gt;
&lt;p&gt;Here we can see that this Call Queue is called “MS Test CQ” but the associated resource account is called “Team Green CQ”.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-resource-accounts-2ff9661fc489/1RGhZfRUJ9Hj7L0u8ko1uYQ.png&#34;
	width=&#34;1766&#34;
	height=&#34;593&#34;
	srcset=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-resource-accounts-2ff9661fc489/1RGhZfRUJ9Hj7L0u8ko1uYQ_huc28893d83e8a09b59e57156c338edcb0_64330_480x0_resize_box_3.png 480w, https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-resource-accounts-2ff9661fc489/1RGhZfRUJ9Hj7L0u8ko1uYQ_huc28893d83e8a09b59e57156c338edcb0_64330_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;297&#34;
		data-flex-basis=&#34;714px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Since the toast will show the Display Name of the resource account, it will say that there’s a call for “Team Green CQ” and not “MS Test CQ”.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-resource-accounts-2ff9661fc489/16eE5gPpiQQQ7E0HWidOcrw.png&#34;
	width=&#34;452&#34;
	height=&#34;438&#34;
	srcset=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-resource-accounts-2ff9661fc489/16eE5gPpiQQQ7E0HWidOcrw_hu868f7a547900ec85740336284fa75377_69783_480x0_resize_box_3.png 480w, https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-resource-accounts-2ff9661fc489/16eE5gPpiQQQ7E0HWidOcrw_hu868f7a547900ec85740336284fa75377_69783_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;103&#34;
		data-flex-basis=&#34;247px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;I talked about the importance of the AA/CQ suffix at the beginning of this post. Microsoft has improved TAC and now shows assigned phone numbers in the drop-down list, if we search for a Voice App redirection target.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-resource-accounts-2ff9661fc489/1ROuuUDhMjYnjORsGLjOiLQ.png&#34;
	width=&#34;1380&#34;
	height=&#34;382&#34;
	srcset=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-resource-accounts-2ff9661fc489/1ROuuUDhMjYnjORsGLjOiLQ_hu60e4b66024a65bc12b599e752cfffc42_28678_480x0_resize_box_3.png 480w, https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-resource-accounts-2ff9661fc489/1ROuuUDhMjYnjORsGLjOiLQ_hu60e4b66024a65bc12b599e752cfffc42_28678_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;361&#34;
		data-flex-basis=&#34;867px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;But let’s assume that neither of these accounts had a phone number assigned and we didn’t use a suffix either. Good luck figuring out which one of these is the Auto Attendant and which one is the Call Queue.&lt;/p&gt;
&lt;h4 id=&#34;enterprise-voice&#34;&gt;Enterprise Voice&lt;/h4&gt;
&lt;p&gt;This is an interesting one. As far as I can tell, resource accounts which were created at least a few months ago, are still Enterprise Voice enabled, even if they don’t have a Teams Phone Resource Account License assigned.&lt;/p&gt;
&lt;p&gt;Here’s an example of such a relict. This resource account is Enterprise Voice enabled, despite not having a LineURI or a Feature Type. FeatureTypes is a relatively new property which is returned by &lt;code&gt;Get-CsOnlineUser&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;DisplayName            : Support Number Business Hours AA&lt;br&gt;
EnterpriseVoiceEnabled : True&lt;br&gt;
LineUri                :&lt;br&gt;
FeatureTypes           : {}&lt;/p&gt;
&lt;p&gt;For reference, here’s a screenshot of the M365 Admin Portal.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-resource-accounts-2ff9661fc489/1PqykXYuUDlX2lTaW1z4Q.png&#34;
	width=&#34;1338&#34;
	height=&#34;200&#34;
	srcset=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-resource-accounts-2ff9661fc489/1PqykXYuUDlX2lTaW1z4Q_hu41d1eb67ff84fd9314761e7bf306cae9_24872_480x0_resize_box_3.png 480w, https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-resource-accounts-2ff9661fc489/1PqykXYuUDlX2lTaW1z4Q_hu41d1eb67ff84fd9314761e7bf306cae9_24872_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;669&#34;
		data-flex-basis=&#34;1605px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;If we check “Support Number AA” (which does have a license) by PowerShell using the search query below, we can see that it includes “VoiceApp” under FeatureTypes.&lt;/p&gt;
&lt;p&gt;Get-CsOnlineUser -Identity &lt;a class=&#34;link&#34; href=&#34;mailto:ra_aa_support_number@mozzism.ch&#34; &gt;ra_aa_support_number@mozzism.ch&lt;/a&gt; | FL DisplayName, EnterpriseVoiceEnabled, LineURI, FeatureTypes&lt;/p&gt;
&lt;p&gt;Output:&lt;/p&gt;
&lt;p&gt;DisplayName            : Support Number AA&lt;br&gt;
EnterpriseVoiceEnabled : True&lt;br&gt;
LineUri                : tel:+4144xxxxxxx&lt;br&gt;
FeatureTypes           : {VoiceApp}&lt;/p&gt;
&lt;p&gt;If we check a normal Teams user account, we can see that they’ll have “PhoneSystem” and “Teams” included in their FeatureTypes.&lt;/p&gt;
&lt;p&gt;DisplayName            : Ben Kim&lt;br&gt;
EnterpriseVoiceEnabled : True&lt;br&gt;
FeatureTypes           : {PhoneSystem, Teams}&lt;/p&gt;
&lt;p&gt;But beware that a user can also include the Feature Type “PhoneSystem” without actually being Enterprise Voice enabled. (In this case the user has a Teams Phone License but is not configured for EV yet.)&lt;/p&gt;
&lt;p&gt;DisplayName            : Bill Stearn&lt;br&gt;
EnterpriseVoiceEnabled : False&lt;br&gt;
FeatureTypes           : {PhoneSystem, Teams}&lt;/p&gt;
&lt;p&gt;I wasn’t able to reproduce this scenario. When I created a new resource account and didn’t assign a license, it was always set to Enterprise Voice enabled False.&lt;/p&gt;
&lt;p&gt;DisplayName            : Example PS AA&lt;br&gt;
EnterpriseVoiceEnabled : False&lt;br&gt;
FeatureTypes           : {}&lt;/p&gt;
&lt;p&gt;Let’s see how this looks, after we’ve added a Microsoft Teams Phone Resource Account License to “Example PS AA”. After a few minutes, the Feature Type will be added, and EV will be set to True. I was spamming the Get-CsOnlineUser query so often, that I even managed to get an output right before and after the change.&lt;/p&gt;
&lt;p&gt;Here we can see that the Feature Type “VoiceApp” was added but Enterprise Voice was still disabled.&lt;/p&gt;
&lt;p&gt;DisplayName            : Example PS AA&lt;br&gt;
EnterpriseVoiceEnabled : False&lt;br&gt;
FeatureTypes           : {VoiceApp}&lt;/p&gt;
&lt;p&gt;Literally seconds later, I ran it again and now Enterprise Voice has been enabled.&lt;/p&gt;
&lt;p&gt;DisplayName            : Example PS AA&lt;br&gt;
EnterpriseVoiceEnabled : True&lt;br&gt;
FeatureTypes           : {VoiceApp}&lt;/p&gt;
&lt;p&gt;Assigning the license will automatically set Enterprise Voice enabled to True. This is different than with normal user accounts. They will stay False until we either assign them a number through TAC or use &lt;code&gt;Set-CsPhoneNumberAssignment -EnterpriseVoiceEnabled $true&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;If the license is removed from the resource account, EV will be disabled again.&lt;/p&gt;
&lt;h4 id=&#34;external-pstn-transfer-from-resourceaccounts&#34;&gt;External PSTN Transfer from Resource Accounts&lt;/h4&gt;
&lt;p&gt;The official documentation of the technical requirements which are needed for external PSTN transfers can be viewed &lt;a class=&#34;link&#34; href=&#34;https://docs.microsoft.com/en-us/microsoftteams/create-a-phone-system-auto-attendant?tabs=general-info#external-phone-number-transfers---technical-details&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;here&lt;/a&gt;. I’m only covering Direct Routing Scenarios in this article.&lt;/p&gt;
&lt;p&gt;These requirements need to be met by all resource accounts which are associated with a Voice App. For example, if you have an Auto Attendant which has two resource accounts / numbers assigned and it forwards to an external number outside of business hours, both resource accounts will need to have a valid voice routing policy assigned. TAC won’t display a warning or an error message, even if none of the associated resource account have an online voice routing policy assigned. So, in other words: If a call is made to a Resource Account which doesn’t have a voice routing policy assigned, the call transfer will fail.&lt;/p&gt;
&lt;p&gt;What about nesting? Although I don’t think that this is officially documented, I have found that only the top-level resource account, which is the one with the number which is dialed, needs to be configured properly.&lt;/p&gt;
&lt;p&gt;Let’s take a look at the configuration of the resource accounts used in this scenario.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-resource-accounts-2ff9661fc489/1GRf3ngbTvUo9hndInnZg.png&#34;
	width=&#34;545&#34;
	height=&#34;1376&#34;
	srcset=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-resource-accounts-2ff9661fc489/1GRf3ngbTvUo9hndInnZg_hu2d10416055c9dbcae33bd2a835f02847_79140_480x0_resize_box_3.png 480w, https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-resource-accounts-2ff9661fc489/1GRf3ngbTvUo9hndInnZg_hu2d10416055c9dbcae33bd2a835f02847_79140_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;39&#34;
		data-flex-basis=&#34;95px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Obviously, the Call Queue “Test EV Enabled CQ” and not the “Test EV Enabled AA” does the PSTN transfer. But only the Auto Attendant is configured for outbound PSTN calling. The call transfer in this scenario works.&lt;/p&gt;
&lt;p&gt;DisplayName              : Test EV Enabled AA&lt;br&gt;
EnterpriseVoiceEnabled   : True&lt;br&gt;
FeatureTypes             : {VoiceApp}&lt;br&gt;
OnlineVoiceRoutingPolicy : FirstTrunk&lt;/p&gt;
&lt;p&gt;DisplayName              : Test EV Enabled CQ&lt;br&gt;
EnterpriseVoiceEnabled   : False&lt;br&gt;
FeatureTypes             : {}&lt;br&gt;
OnlineVoiceRoutingPolicy :&lt;/p&gt;
&lt;p&gt;In the PSTN and SMS (preview) usage report in TAC, we can see that it’s the initially called resource account, rather than the one associated with the call queue which does the outbound call. Outbound Direct Routing calls from Voice Apps are labelled as “dr_out_bot”.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-resource-accounts-2ff9661fc489/1OeqBbcYeZ8ZTXWRwP1xyyA.png&#34;
	width=&#34;1594&#34;
	height=&#34;198&#34;
	srcset=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-resource-accounts-2ff9661fc489/1OeqBbcYeZ8ZTXWRwP1xyyA_hu4fdeabe4fcdafa84c09261636577626a_38596_480x0_resize_box_3.png 480w, https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-resource-accounts-2ff9661fc489/1OeqBbcYeZ8ZTXWRwP1xyyA_hu4fdeabe4fcdafa84c09261636577626a_38596_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;805&#34;
		data-flex-basis=&#34;1932px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;To be absolutely sure, I created another configuration. This time the other way around. The top-level Auto Attendant does not have an online voice routing policy assigned, but the nested Call Queue does.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-resource-accounts-2ff9661fc489/14WDSbZwQEdURpq3c7BpcgQ.png&#34;
	width=&#34;364&#34;
	height=&#34;898&#34;
	srcset=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-resource-accounts-2ff9661fc489/14WDSbZwQEdURpq3c7BpcgQ_hua2f24443ff9ccd84552ae2926e8fba72_43092_480x0_resize_box_3.png 480w, https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-resource-accounts-2ff9661fc489/14WDSbZwQEdURpq3c7BpcgQ_hua2f24443ff9ccd84552ae2926e8fba72_43092_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;40&#34;
		data-flex-basis=&#34;97px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;When I called the number of the Auto Attendant, the PSTN transfer of the Call Queue did not work, even though the Queue is configured for outbound calling. When I called the number of the Queue directly, forwarding to PSTN worked perfectly.&lt;/p&gt;
&lt;p&gt;P.S. If you’re wondering, how I created that flow chart and didn’t get the memo before, besides blogging, I’m also the creator of this &lt;a class=&#34;link&#34; href=&#34;https://github.com/mozziemozz/M365CallFlowVisualizer/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PowerShell Tool&lt;/a&gt; which allows anybody to automatically render these cool diagrams for free.&lt;/p&gt;
&lt;h4 id=&#34;finding-auto-attendants-and-call-queues-inteams&#34;&gt;Finding Auto Attendants and Call Queues in Teams&lt;/h4&gt;
&lt;p&gt;If you can’t find all your Auto Attendants and Call Queues when you search for them in Teams, you should definitely take a look at &lt;a class=&#34;link&#34; href=&#34;https://heusser.pro/p/why-can-only-some-users-search-auto-attendants-and-call-queues-in-teams-940402164681&#34; &gt;this article&lt;/a&gt;.&lt;/p&gt;
&lt;h4 id=&#34;one-lastthing&#34;&gt;One Last Thing&lt;/h4&gt;
&lt;p&gt;Although it’s now possible to do most of the things, like assigning online voice routing policies or phone numbers in TAC, some things are still missing from TAC. For example, you won’t find your resource accounts under “Manage users”. You can, however, replace the Object Id of a user in the URL, with an Object Id of a Resource Account. This will allow you to view some data, like recent calls.&lt;/p&gt;
&lt;p&gt;If you’re too lazy to grab the Object Id, you can also click the Display Name of a Resource Account from the PSTN and SMS (preview) usage report.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-resource-accounts-2ff9661fc489/1aUlQ20axCxy0nA86UlRjw.png&#34;
	width=&#34;1489&#34;
	height=&#34;128&#34;
	srcset=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-resource-accounts-2ff9661fc489/1aUlQ20axCxy0nA86UlRjw_hu3bd74bf9d64007c31e0c3cfde9bb9719_21363_480x0_resize_box_3.png 480w, https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-resource-accounts-2ff9661fc489/1aUlQ20axCxy0nA86UlRjw_hu3bd74bf9d64007c31e0c3cfde9bb9719_21363_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;1163&#34;
		data-flex-basis=&#34;2791px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;This will yield an error message that TAC can’t get the policies of this account. But you’ll still be able to see it’s call history under the “Meetings &amp;amp; calls” tab.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-resource-accounts-2ff9661fc489/1gzkRCHSpGq5csQDU7FQuA.png&#34;
	width=&#34;2040&#34;
	height=&#34;634&#34;
	srcset=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-resource-accounts-2ff9661fc489/1gzkRCHSpGq5csQDU7FQuA_huf8261de6bb254ae6436e364defa1acd5_76242_480x0_resize_box_3.png 480w, https://heusser.pro/p/everything-you-ever-wanted-to-know-about-teams-resource-accounts-2ff9661fc489/1gzkRCHSpGq5csQDU7FQuA_huf8261de6bb254ae6436e364defa1acd5_76242_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;321&#34;
		data-flex-basis=&#34;772px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;I hope this article helps you better understand how Resource Accounts work in Teams Phone. Feel free to reach out if you have any questions left.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Change Business Hours of a Teams Auto Attendant with PowerShell</title>
        <link>https://heusser.pro/p/change-business-hours-of-a-teams-auto-attendant-with-powershell-ed03a15881d2/</link>
        <pubDate>Tue, 23 Aug 2022 18:21:59 +0000</pubDate>
        
        <guid>https://heusser.pro/p/change-business-hours-of-a-teams-auto-attendant-with-powershell-ed03a15881d2/</guid>
        <description>&lt;p&gt;Changing the business hours on a Teams Auto Attendant can be quite cumbersome. Especially if you have multiple hours a day, like a lunch break. If you’ve been working long enough with Teams, you probably remember how easy it was in Skype for Business Online Admin Center. There, we could just select opening hours from a timetable and be done with it. Nowadays we have to select the start and end time from a drop-down list for each day individually.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/change-business-hours-of-a-teams-auto-attendant-with-powershell-ed03a15881d2/1OJWoGKSIPltflYAjr6K4Q.png&#34;
	width=&#34;1235&#34;
	height=&#34;1086&#34;
	srcset=&#34;https://heusser.pro/p/change-business-hours-of-a-teams-auto-attendant-with-powershell-ed03a15881d2/1OJWoGKSIPltflYAjr6K4Q_hucd09f4292c753ae6ac659eaa01a4489e_111560_480x0_resize_box_3.png 480w, https://heusser.pro/p/change-business-hours-of-a-teams-auto-attendant-with-powershell-ed03a15881d2/1OJWoGKSIPltflYAjr6K4Q_hucd09f4292c753ae6ac659eaa01a4489e_111560_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;113&#34;
		data-flex-basis=&#34;272px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;To speed up this process, I’ve created a PowerShell Script. Right now, there are no parameters. After all, the idea is to be quicker and not make you pick times from a drop-down in PowerShell rather than in TAC.&lt;/p&gt;
&lt;p&gt;By default, the script will allow you to set a time range for mornings and one for afternoons. These are defined in the variables &lt;code&gt;$tr1&lt;/code&gt; and &lt;code&gt;$tr2&lt;/code&gt; on line 7 and 8. You can adjust them to your liking, as long as they don’t overlap each other. Only 15minute increments are supported. You must use the 24-hour clock system.&lt;/p&gt;
&lt;p&gt;Edit (08.09.2022): I’ve updated line 16 to look for the CallFlowId of the Auto Attendants CallHandlingAssociation with type “AfterHours” instead of the CallFlow Name matching “After hours call flow”.&lt;/p&gt;
&lt;script src=&#34;https://gist.github.com/mozziemozz/389d9107fdd2cf5f0727c331ec27d636.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;Once you run the script, the defined time ranges will be applied to the Auto Attendant which was selected from the list.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/change-business-hours-of-a-teams-auto-attendant-with-powershell-ed03a15881d2/19tJFZYDGgLaWooIZxwZXUQ.png&#34;
	width=&#34;1472&#34;
	height=&#34;382&#34;
	srcset=&#34;https://heusser.pro/p/change-business-hours-of-a-teams-auto-attendant-with-powershell-ed03a15881d2/19tJFZYDGgLaWooIZxwZXUQ_hu6874f9b06b6209446cc0a32428e6af2b_28012_480x0_resize_box_3.png 480w, https://heusser.pro/p/change-business-hours-of-a-teams-auto-attendant-with-powershell-ed03a15881d2/19tJFZYDGgLaWooIZxwZXUQ_hu6874f9b06b6209446cc0a32428e6af2b_28012_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;385&#34;
		data-flex-basis=&#34;924px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;This works for both, Auto Attendants which already have business hours configured and Auto Attendants which didn’t have business hours already. Your configured after hours call flow (e.g. forward to shared voicemail etc.) will not be impacted/overwritten. It will stay exactly the same as it was.&lt;/p&gt;
&lt;p&gt;If your call flow has different business hours for specific days, just add more &lt;code&gt;$tr&lt;/code&gt; variables and make sure to add/change them on line 40. For example, if your business closes early on Fridays but has no lunch break, create a &lt;code&gt;$tr3&lt;/code&gt; variable and change &lt;code&gt;-FridayHours @($tr1,$tr2)&lt;/code&gt; to &lt;code&gt;-FridayHours @($tr3)&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;By default, the script will not add any business hours for Saturday and Sunday. This means that the after hours call flow will be active on the weekend. If you also want to configure hours for these days, add them using the switch &lt;code&gt;-SaturdayHours&lt;/code&gt; followed by the array &lt;code&gt;@($tr4,$tr5)&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/change-business-hours-of-a-teams-auto-attendant-with-powershell-ed03a15881d2/1Dwi1PcIhDweQdaV4OSw64w.png&#34;
	width=&#34;713&#34;
	height=&#34;133&#34;
	srcset=&#34;https://heusser.pro/p/change-business-hours-of-a-teams-auto-attendant-with-powershell-ed03a15881d2/1Dwi1PcIhDweQdaV4OSw64w_hu99337b2211c4b60cda8ea3366d0729dc_9052_480x0_resize_box_3.png 480w, https://heusser.pro/p/change-business-hours-of-a-teams-auto-attendant-with-powershell-ed03a15881d2/1Dwi1PcIhDweQdaV4OSw64w_hu99337b2211c4b60cda8ea3366d0729dc_9052_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;536&#34;
		data-flex-basis=&#34;1286px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;On a final note, when changing business hours via PowerShell, we must use the &lt;code&gt;-Complement&lt;/code&gt; switch. This will invert the time ranges. Meaning that the after hours call flow will be active during times which are outside of what is shown on the timetable. TAC displays the business hours, during which the Auto Attendant is open but it does so on the after hours call flow page. This can be a little misleading. When business hours are set through TAC, the complement flag is automatically enabled.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/change-business-hours-of-a-teams-auto-attendant-with-powershell-ed03a15881d2/12hwGZALSqgnj9JLZEmK8g.png&#34;
	width=&#34;837&#34;
	height=&#34;278&#34;
	srcset=&#34;https://heusser.pro/p/change-business-hours-of-a-teams-auto-attendant-with-powershell-ed03a15881d2/12hwGZALSqgnj9JLZEmK8g_hufd66022d87c00e2ae0cd6917873c74e4_72793_480x0_resize_box_3.png 480w, https://heusser.pro/p/change-business-hours-of-a-teams-auto-attendant-with-powershell-ed03a15881d2/12hwGZALSqgnj9JLZEmK8g_hufd66022d87c00e2ae0cd6917873c74e4_72793_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;301&#34;
		data-flex-basis=&#34;722px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;I hope this helps you save some time as well.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Download Existing Audio Files from Teams Admin Center</title>
        <link>https://heusser.pro/p/download-existing-audio-files-from-teams-admin-center-1839230eadb0/</link>
        <pubDate>Tue, 16 Aug 2022 17:33:21 +0000</pubDate>
        
        <guid>https://heusser.pro/p/download-existing-audio-files-from-teams-admin-center-1839230eadb0/</guid>
        <description>&lt;p&gt;Many companies use custom audio files like greetings, IVR announcements etc. in their call flows. Often these audio files are custom made by professionals. Hence, they provide a certain value to many customers. Unfortunately, sometimes people take the “set and forget” approach and these files are then either deleted or can’t be found by the people who need them.&lt;/p&gt;
&lt;p&gt;So, let’s assume that you have an auto attendant or a call queue in Teams which use custom audio files. Now you want to create a new call flow with the same greetings, but you can’t find the existing files anymore. The only place where they are stored is in Teams / the live configuration.&lt;/p&gt;
&lt;h4 id=&#34;download-viatac&#34;&gt;Download via TAC&lt;/h4&gt;
&lt;p&gt;Since a few weeks, it’s possible to download these files via TAC directly instead of just PowerShell. To do so, just go into the configuration of your auto attendant or call queue and locate the desired file you want to download.&lt;/p&gt;
&lt;p&gt;Now right click on the filename and select “Save link as”.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/download-existing-audio-files-from-teams-admin-center-1839230eadb0/11yqZHiodIZeZzqL9YsH3rg.png&#34;
	width=&#34;708&#34;
	height=&#34;671&#34;
	srcset=&#34;https://heusser.pro/p/download-existing-audio-files-from-teams-admin-center-1839230eadb0/11yqZHiodIZeZzqL9YsH3rg_hu3e3994373b323492d360b827295e29ba_211291_480x0_resize_box_3.png 480w, https://heusser.pro/p/download-existing-audio-files-from-teams-admin-center-1839230eadb0/11yqZHiodIZeZzqL9YsH3rg_hu3e3994373b323492d360b827295e29ba_211291_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;105&#34;
		data-flex-basis=&#34;253px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;The suggested filename is actually the audio file id from the CsOnlineAudioFile but the extension is missing by default.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/download-existing-audio-files-from-teams-admin-center-1839230eadb0/1wNaFbBhDQgXFvIUxuonbQ.png&#34;
	width=&#34;708&#34;
	height=&#34;68&#34;
	srcset=&#34;https://heusser.pro/p/download-existing-audio-files-from-teams-admin-center-1839230eadb0/1wNaFbBhDQgXFvIUxuonbQ_huf9dd0d918a0a4d55ea3b9d2eca536c25_5070_480x0_resize_box_3.png 480w, https://heusser.pro/p/download-existing-audio-files-from-teams-admin-center-1839230eadb0/1wNaFbBhDQgXFvIUxuonbQ_huf9dd0d918a0a4d55ea3b9d2eca536c25_5070_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;1041&#34;
		data-flex-basis=&#34;2498px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Naturally, I tried to add .mp3 as the filename extension since that’s what it says in TAC.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/download-existing-audio-files-from-teams-admin-center-1839230eadb0/1aa4m4jVobzxNhGuZxTCAVw.png&#34;
	width=&#34;530&#34;
	height=&#34;129&#34;
	srcset=&#34;https://heusser.pro/p/download-existing-audio-files-from-teams-admin-center-1839230eadb0/1aa4m4jVobzxNhGuZxTCAVw_hu0dff639929587e38431c842f21f333b1_9162_480x0_resize_box_3.png 480w, https://heusser.pro/p/download-existing-audio-files-from-teams-admin-center-1839230eadb0/1aa4m4jVobzxNhGuZxTCAVw_hu0dff639929587e38431c842f21f333b1_9162_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;410&#34;
		data-flex-basis=&#34;986px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Once the file has been downloaded, it plays back just fine on my computer. However, when I try to upload it to another auto attendant or call queue (or even the same for that matter), I always receive the following error message.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/download-existing-audio-files-from-teams-admin-center-1839230eadb0/1aWpVq6apo0mqJH0H2uwAw.png&#34;
	width=&#34;638&#34;
	height=&#34;55&#34;
	srcset=&#34;https://heusser.pro/p/download-existing-audio-files-from-teams-admin-center-1839230eadb0/1aWpVq6apo0mqJH0H2uwAw_hu496ba66d2b2676a3af0c96bfffa59464_4950_480x0_resize_box_3.png 480w, https://heusser.pro/p/download-existing-audio-files-from-teams-admin-center-1839230eadb0/1aWpVq6apo0mqJH0H2uwAw_hu496ba66d2b2676a3af0c96bfffa59464_4950_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;1160&#34;
		data-flex-basis=&#34;2784px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Teams supports MP3, WAV and WMA files which are smaller than 5 MB. So, the downloaded file should be supported. However, it looks like uploaded files are somehow converted by Teams, regardless of their source format. &lt;strong&gt;As soon as I renamed the downloaded mp3 file to .wav, I was able to upload the file without any issues.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/download-existing-audio-files-from-teams-admin-center-1839230eadb0/1jtiQRFtF8SowJ1FSkDVrNg.png&#34;
	width=&#34;397&#34;
	height=&#34;82&#34;
	srcset=&#34;https://heusser.pro/p/download-existing-audio-files-from-teams-admin-center-1839230eadb0/1jtiQRFtF8SowJ1FSkDVrNg_hu03691ffa3cf87eded0b1e933a38e8828_3964_480x0_resize_box_3.png 480w, https://heusser.pro/p/download-existing-audio-files-from-teams-admin-center-1839230eadb0/1jtiQRFtF8SowJ1FSkDVrNg_hu03691ffa3cf87eded0b1e933a38e8828_3964_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;484&#34;
		data-flex-basis=&#34;1161px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;download-by-powershell&#34;&gt;Download by PowerShell&lt;/h4&gt;
&lt;p&gt;Previously, the only way to download existing audio files was by using PowerShell. If that’s what you’re interested in, you can use the Gist below to download already uploaded audio files. This handy snippet will retrieve all types of audio files (TenantGlobal, HuntGroup and OrgAutoAttendant), present them in an Out-GridView list (Windows only) and lets you choose a destination directory.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/download-existing-audio-files-from-teams-admin-center-1839230eadb0/1EzZMcqhGpskq1eQ9p56T4g.png&#34;
	width=&#34;1499&#34;
	height=&#34;525&#34;
	srcset=&#34;https://heusser.pro/p/download-existing-audio-files-from-teams-admin-center-1839230eadb0/1EzZMcqhGpskq1eQ9p56T4g_hua79b32da378df7a78b895741a7487180_116499_480x0_resize_box_3.png 480w, https://heusser.pro/p/download-existing-audio-files-from-teams-admin-center-1839230eadb0/1EzZMcqhGpskq1eQ9p56T4g_hua79b32da378df7a78b895741a7487180_116499_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;285&#34;
		data-flex-basis=&#34;685px&#34;
	
&gt;&lt;/p&gt;
&lt;script src=&#34;https://gist.github.com/mozziemozz/4bf4ab793a31b8350793d60e783214d0.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;Note: It’s the same case here, if an mp3 file is saved with an mp3 filename extension, Teams won’t accept the file. Thus, the PowerShell code saves .mp3 and .wma files as .wav files.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;TLDR&lt;/em&gt;&lt;/strong&gt;; All you have to do is to download the file and save it as *.wav regardless of the original filename extension. You’ll then be able to easily export and reupload already existing audio files.&lt;/p&gt;
&lt;p&gt;I hope this article saves you some trouble next time somebody urgently needs an audio file which has mysteriously disappeared from SharePoint or your file server.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Microsoft Teams Call Queue Agent Lists (And how to Force-Sync them)</title>
        <link>https://heusser.pro/p/microsoft-teams-call-queue-agent-lists-and-how-to-force-sync-them-ef8092090df0/</link>
        <pubDate>Sun, 10 Apr 2022 10:13:53 +0000</pubDate>
        
        <guid>https://heusser.pro/p/microsoft-teams-call-queue-agent-lists-and-how-to-force-sync-them-ef8092090df0/</guid>
        <description>&lt;p&gt;The purpose of a call queue in Teams is to distribute incoming calls to multiple call agents. Every call queue stores its own “Agent List” which is basically just an array of Microsoft 365 users object Ids. Incoming Teams or PSTN calls are then distributed to the call queue’s agents. In this post, we’ll take a look at the types of agent lists which are available and how to configure them. We’ll also explore some useful tips how to cope with unexpected behavior during configuration.&lt;/p&gt;
&lt;h4 id=&#34;agent-listtypes&#34;&gt;Agent List Types&lt;/h4&gt;
&lt;p&gt;There are three (or four, depending how you look at it) different ways of adding Agents to a queue&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Direct user assignments&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Users are assigned by display name and will be visible directly in a queue’s settings. This method is suitable for small teams because you can see who’s in the queue in TAC without checking the group members in M365 Admin or AAD. Since you can’t control the order agents will be added in when using a group or channel based agent list, direct assignments are crucial when your queue is using serial routing. &lt;a class=&#34;link&#34; href=&#34;https://docs.microsoft.com/en-us/microsoftteams/create-a-phone-system-call-queue#users-and-groups&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;You can add up to 20 agents individually.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/microsoft-teams-call-queue-agent-lists-and-how-to-force-sync-them-ef8092090df0/1JnhguYQCBAml6b1TDgAiA.png&#34;
	width=&#34;1383&#34;
	height=&#34;927&#34;
	srcset=&#34;https://heusser.pro/p/microsoft-teams-call-queue-agent-lists-and-how-to-force-sync-them-ef8092090df0/1JnhguYQCBAml6b1TDgAiA_huf325dbf47a900a129970d3ed520bbd40_55457_480x0_resize_box_3.png 480w, https://heusser.pro/p/microsoft-teams-call-queue-agent-lists-and-how-to-force-sync-them-ef8092090df0/1JnhguYQCBAml6b1TDgAiA_huf325dbf47a900a129970d3ed520bbd40_55457_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;149&#34;
		data-flex-basis=&#34;358px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;2. Group assignments&lt;/p&gt;
&lt;p&gt;With group assignments, you can add up to 200 agents but you can’t control the order in which the agents are added. Thus, you can’t control the order in which the users are signaled by the queue when using serial routing either. Based on my testing, the order of the agent list will correspond to the order in which the users show up when viewing it in AAD. Although it might not be a common scenario, you can even add multiple groups to the list. &lt;a class=&#34;link&#34; href=&#34;https://docs.microsoft.com/en-us/microsoftteams/create-a-phone-system-call-queue#users-and-groups&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;All common group types are supported.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/microsoft-teams-call-queue-agent-lists-and-how-to-force-sync-them-ef8092090df0/17ssSjJFxHxXZTdtm8BpupQ.png&#34;
	width=&#34;1380&#34;
	height=&#34;923&#34;
	srcset=&#34;https://heusser.pro/p/microsoft-teams-call-queue-agent-lists-and-how-to-force-sync-them-ef8092090df0/17ssSjJFxHxXZTdtm8BpupQ_hu7eae838453589cf1c0c2f64dce6882d5_58726_480x0_resize_box_3.png 480w, https://heusser.pro/p/microsoft-teams-call-queue-agent-lists-and-how-to-force-sync-them-ef8092090df0/17ssSjJFxHxXZTdtm8BpupQ_hu7eae838453589cf1c0c2f64dce6882d5_58726_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;149&#34;
		data-flex-basis=&#34;358px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;3. Combination of direct and groups&lt;/p&gt;
&lt;p&gt;If you want to use a group but still need to add other users which are not a member of this group, you can add them individually. Here I’ve got a group called “CQ Agents 1” which has two members.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/microsoft-teams-call-queue-agent-lists-and-how-to-force-sync-them-ef8092090df0/1Dkc15OvPzERAne0L7pTXgA.png&#34;
	width=&#34;1109&#34;
	height=&#34;292&#34;
	srcset=&#34;https://heusser.pro/p/microsoft-teams-call-queue-agent-lists-and-how-to-force-sync-them-ef8092090df0/1Dkc15OvPzERAne0L7pTXgA_hu36e48e243e13c7cbca14017e7bcfdeaa_43594_480x0_resize_box_3.png 480w, https://heusser.pro/p/microsoft-teams-call-queue-agent-lists-and-how-to-force-sync-them-ef8092090df0/1Dkc15OvPzERAne0L7pTXgA_hu36e48e243e13c7cbca14017e7bcfdeaa_43594_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;379&#34;
		data-flex-basis=&#34;911px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;I’ve also added Mike and Bobby as individual agents. Of course. the queue will add Mike only once.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/microsoft-teams-call-queue-agent-lists-and-how-to-force-sync-them-ef8092090df0/1r2hQr9rHxDqI24577P61lg.png&#34;
	width=&#34;1380&#34;
	height=&#34;1251&#34;
	srcset=&#34;https://heusser.pro/p/microsoft-teams-call-queue-agent-lists-and-how-to-force-sync-them-ef8092090df0/1r2hQr9rHxDqI24577P61lg_hu1b4ec12460c75d422e3c76349a322169_74195_480x0_resize_box_3.png 480w, https://heusser.pro/p/microsoft-teams-call-queue-agent-lists-and-how-to-force-sync-them-ef8092090df0/1r2hQr9rHxDqI24577P61lg_hu1b4ec12460c75d422e3c76349a322169_74195_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;110&#34;
		data-flex-basis=&#34;264px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Unfortunately, querying the queue’s agents only yields object Ids and no display names.&lt;/p&gt;
&lt;p&gt;(Get-CsCallQueue -Identity a11d15d3-79d8-4bd2-8a35-xxxxxxxxxxxx).Agents&lt;/p&gt;
&lt;p&gt;Output:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ObjectId                             OptIn  
--------                             -----  
76606d0b-4d28-4246-9c08-xxxxxxxxxxxx  True This is Bobby&#39;s Object Id  
9a7c1bb4-49db-40ee-9d05-xxxxxxxxxxxx  True This is Mike&#39;s Object Id  
fa19b242-8bae-419d-a4eb-xxxxxxxxxxxx  True This is Wendy&#39;s Object Id
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As you can see, individually added agents will be first in the list, just like TAC is displaying it (individual agents above groups).&lt;/p&gt;
&lt;p&gt;I have now replaced the direct assignment of Mike with Wendy and placed her on top.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/microsoft-teams-call-queue-agent-lists-and-how-to-force-sync-them-ef8092090df0/1ua3yDYWFbd0Z2T5OKyeBIQ.png&#34;
	width=&#34;1276&#34;
	height=&#34;360&#34;
	srcset=&#34;https://heusser.pro/p/microsoft-teams-call-queue-agent-lists-and-how-to-force-sync-them-ef8092090df0/1ua3yDYWFbd0Z2T5OKyeBIQ_hu0f0795e399129c16044556ce1e814e5d_21328_480x0_resize_box_3.png 480w, https://heusser.pro/p/microsoft-teams-call-queue-agent-lists-and-how-to-force-sync-them-ef8092090df0/1ua3yDYWFbd0Z2T5OKyeBIQ_hu0f0795e399129c16044556ce1e814e5d_21328_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;354&#34;
		data-flex-basis=&#34;850px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;When we query the agent list again, we can see that Wendy is on top now, even though she would be added last if we’re using just a group.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ObjectId                             OptIn  
--------                             -----  
fa19b242-8bae-419d-a4eb-xxxxxxxxxxxx  True This is Wendy&#39;s Object Id  
76606d0b-4d28-4246-9c08-xxxxxxxxxxxx  True This is Bobby&#39;s Object Id  
9a7c1bb4-49db-40ee-9d05-xxxxxxxxxxxx  True This is Mike&#39;s Object Id
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;4. Teams channel assignment&lt;/p&gt;
&lt;p&gt;The third and last option is to use a Teams Channel. In this case, the group type obviously needs to be a Team. &lt;a class=&#34;link&#34; href=&#34;https://docs.microsoft.com/en-us/microsoftteams/create-a-phone-system-call-queue#teams-channel&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Private or shared channels are not supported.&lt;/a&gt; From an agent list perspective this method is the same as a group-based assignment, except that you can’t add individual members or multiple groups as well.&lt;/p&gt;
&lt;h4 id=&#34;summary-andcaveats&#34;&gt;Summary and Caveats&lt;/h4&gt;
&lt;p&gt;In order for a user to be added as an agent, Enterprise Voice must be enabled. &lt;strong&gt;Having a Teams Phone Standard license is not enough&lt;/strong&gt;. Unfortunately, there’s no straightforward way of checking if EV is enabled in TAC.&lt;/p&gt;
&lt;p&gt;You might think that the “Phone System” Column in Teams Users will tell you that but that’s actually just evaluating if the user is licensed for Teams Phone Standard. (I hope Microsoft updates the column name at some point…).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/microsoft-teams-call-queue-agent-lists-and-how-to-force-sync-them-ef8092090df0/1o3uFzdE2500fMsfRDgRo3Q.png&#34;
	width=&#34;1273&#34;
	height=&#34;126&#34;
	srcset=&#34;https://heusser.pro/p/microsoft-teams-call-queue-agent-lists-and-how-to-force-sync-them-ef8092090df0/1o3uFzdE2500fMsfRDgRo3Q_hu22c1b9f043e8478a11c245ca9343627f_14076_480x0_resize_box_3.png 480w, https://heusser.pro/p/microsoft-teams-call-queue-agent-lists-and-how-to-force-sync-them-ef8092090df0/1o3uFzdE2500fMsfRDgRo3Q_hu22c1b9f043e8478a11c245ca9343627f_14076_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;1010&#34;
		data-flex-basis=&#34;2424px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;When you try to add a user which is not EV enabled to a queue, TAC will throw an error message:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/microsoft-teams-call-queue-agent-lists-and-how-to-force-sync-them-ef8092090df0/1onUinLhMf93WDYAt0S0g.png&#34;
	width=&#34;568&#34;
	height=&#34;101&#34;
	srcset=&#34;https://heusser.pro/p/microsoft-teams-call-queue-agent-lists-and-how-to-force-sync-them-ef8092090df0/1onUinLhMf93WDYAt0S0g_huff7c9e611c141b86924e16387f3a1f5e_14069_480x0_resize_box_3.png 480w, https://heusser.pro/p/microsoft-teams-call-queue-agent-lists-and-how-to-force-sync-them-ef8092090df0/1onUinLhMf93WDYAt0S0g_huff7c9e611c141b86924e16387f3a1f5e_14069_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;562&#34;
		data-flex-basis=&#34;1349px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;This is the only way I know of to check if a user is EV enabled or not through a GUI based tool. It’s easy in PS though:&lt;/p&gt;
&lt;p&gt;Get-CsOnlineUser -Identity &lt;a class=&#34;link&#34; href=&#34;mailto:bill@domain.com&#34; &gt;bill@domain.com&lt;/a&gt; | ft DisplayName,FeatureTypes,EnterpriseVoiceEnabled&lt;/p&gt;
&lt;p&gt;Again, having a Teams Phone service plan, does not mean EV is enabled by default. A user’s feature types can be read from the .FeatureTypes attribute (Teams PS 4.x.x and later).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;DisplayName FeatureTypes         EnterpriseVoiceEnabled  
----------- ------------         ----------------------  
Bill Stearn {PhoneSystem, Teams}                  False
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Does this mean we can only add groups to an agent list if all the members are already EV enabled? Certainly not. In this case, only EV enabled members will be added to a queue but you won’t see any warnings or errors if your group contains users without EV.&lt;/p&gt;
&lt;p&gt;I’ve added Bill to the “CQ Agents 1” group:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/microsoft-teams-call-queue-agent-lists-and-how-to-force-sync-them-ef8092090df0/1pTf4EjM79Dcv21SuFa1IPQ.png&#34;
	width=&#34;1107&#34;
	height=&#34;212&#34;
	srcset=&#34;https://heusser.pro/p/microsoft-teams-call-queue-agent-lists-and-how-to-force-sync-them-ef8092090df0/1pTf4EjM79Dcv21SuFa1IPQ_hu648445925f7993484e5b1bdae7fd899f_39328_480x0_resize_box_3.png 480w, https://heusser.pro/p/microsoft-teams-call-queue-agent-lists-and-how-to-force-sync-them-ef8092090df0/1pTf4EjM79Dcv21SuFa1IPQ_hu648445925f7993484e5b1bdae7fd899f_39328_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;522&#34;
		data-flex-basis=&#34;1253px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Let’s check our queue again by storing it’s properties in the variable &lt;code&gt;$cq&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$cq&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Get-CsCallQueue&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-Identity&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a11d15d3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;79d8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;4bd2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;8a35-xxxxxxxxxxxx&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;By accessing $cq.DistributionListsLastExpanded we can verify that the queue has indeed updated its agent list when we saved it.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/microsoft-teams-call-queue-agent-lists-and-how-to-force-sync-them-ef8092090df0/1MP0g1DqtuGySqfMbguKw.png&#34;
	width=&#34;1059&#34;
	height=&#34;28&#34;
	srcset=&#34;https://heusser.pro/p/microsoft-teams-call-queue-agent-lists-and-how-to-force-sync-them-ef8092090df0/1MP0g1DqtuGySqfMbguKw_huc8eb3d54e1a48fd2b3501f0f3c7361d2_28909_480x0_resize_box_3.png 480w, https://heusser.pro/p/microsoft-teams-call-queue-agent-lists-and-how-to-force-sync-them-ef8092090df0/1MP0g1DqtuGySqfMbguKw_huc8eb3d54e1a48fd2b3501f0f3c7361d2_28909_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;3782&#34;
		data-flex-basis=&#34;9077px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;As expected, the object Id of bill does not show up when we check $cq.Agents. I’ve also removed the direct assignments, that’s why we only see two object Ids now.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ObjectId                             OptIn  
--------                             -----  
fa19b242-8bae-419d-a4eb-xxxxxxxxxxxx  True That&#39;s Wendy&#39;s Object Id  
9a7c1bb4-49db-40ee-9d05-xxxxxxxxxxxx  True That&#39;s Mike&#39;s Object Id
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;What’s interesting is that even though the direct assignments were removed, the queue remembered the specific order we defined using direct assignments before. Wendy is still above mike.&lt;/p&gt;
&lt;p&gt;No matter in which way the agents are added, in the end, all EV enabled agents will always be stored in one single array on the queue’s properties in the “Agents” attribute.&lt;/p&gt;
&lt;h4 id=&#34;agent-listsync&#34;&gt;Agent List Sync&lt;/h4&gt;
&lt;p&gt;Now you know what types of agent lists you can have and how to configure them. Let’s talk about syncing agent lists. With direct assignments, it’s easy. Every time you add or remove an agent and save the queue, the agent list is updated immediately.&lt;/p&gt;
&lt;p&gt;If you’re adding a group which already has a bunch of users in it, that’s no problem either. But what about if you add a Team or a group which does not have any members yet, or if you add new users to an existing group which is already linked to a queue?&lt;/p&gt;
&lt;p&gt;I created a new, empty Team called “PS Test CQ” and added it to the queue’s agent list. As expected, TAC now says that this queue has zero agents.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/microsoft-teams-call-queue-agent-lists-and-how-to-force-sync-them-ef8092090df0/1TnPbQ99tL2GNctNLkDd9A.png&#34;
	width=&#34;1850&#34;
	height=&#34;253&#34;
	srcset=&#34;https://heusser.pro/p/microsoft-teams-call-queue-agent-lists-and-how-to-force-sync-them-ef8092090df0/1TnPbQ99tL2GNctNLkDd9A_hu646a022f1882af0a05cc9564812e24f2_18519_480x0_resize_box_3.png 480w, https://heusser.pro/p/microsoft-teams-call-queue-agent-lists-and-how-to-force-sync-them-ef8092090df0/1TnPbQ99tL2GNctNLkDd9A_hu646a022f1882af0a05cc9564812e24f2_18519_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;731&#34;
		data-flex-basis=&#34;1754px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;So, let’s head over to Teams and add some members. After a browser refresh, TAC still shows zero call agents. Let’s check again with PowerShell:&lt;/p&gt;
&lt;p&gt;(Get-CsCallQueue -Identity a11d15d3-79d8-4bd2-8a35-xxxxxxxxxxxx) | ft Name, DistributionListsLastExpanded, Agents&lt;/p&gt;
&lt;p&gt;Although the output at least tells us when the agent list was last synchronized, it also shows no agents:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Name       DistributionListsLastExpanded Agents  
----       ----------------------------- ------  
PS Test CQ 04/10/2022 09:12:22 +00:00    {}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I don’t know the exact interval Teams uses to sync call queue agent lists. But I’m guessing it checks every few hours or so. Is there a way to force a sync?&lt;/p&gt;
&lt;h4 id=&#34;force-agent-list-sync-usingtac&#34;&gt;Force Agent List Sync using TAC&lt;/h4&gt;
&lt;p&gt;If we’re doing it via TAC, we must change any value of the queue to be able to save it. Otherwise, the submit button will be greyed out.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/microsoft-teams-call-queue-agent-lists-and-how-to-force-sync-them-ef8092090df0/1Cuo5HASr68JnCdmDDLpxKQ.png&#34;
	width=&#34;1224&#34;
	height=&#34;725&#34;
	srcset=&#34;https://heusser.pro/p/microsoft-teams-call-queue-agent-lists-and-how-to-force-sync-them-ef8092090df0/1Cuo5HASr68JnCdmDDLpxKQ_hu55b79e8fe22f4e58ff39313479940ce6_58789_480x0_resize_box_3.png 480w, https://heusser.pro/p/microsoft-teams-call-queue-agent-lists-and-how-to-force-sync-them-ef8092090df0/1Cuo5HASr68JnCdmDDLpxKQ_hu55b79e8fe22f4e58ff39313479940ce6_58789_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;168&#34;
		data-flex-basis=&#34;405px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;If you want to do it via TAC, I recommend changing a non-critical value like up the overflow threshold value by 1 and submit.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/microsoft-teams-call-queue-agent-lists-and-how-to-force-sync-them-ef8092090df0/1rCOHPX3fUTdnLRivr8ckdQ.png&#34;
	width=&#34;666&#34;
	height=&#34;536&#34;
	srcset=&#34;https://heusser.pro/p/microsoft-teams-call-queue-agent-lists-and-how-to-force-sync-them-ef8092090df0/1rCOHPX3fUTdnLRivr8ckdQ_hu597fdd23ac8a5c39e462678be0b8b5ce_33211_480x0_resize_box_3.png 480w, https://heusser.pro/p/microsoft-teams-call-queue-agent-lists-and-how-to-force-sync-them-ef8092090df0/1rCOHPX3fUTdnLRivr8ckdQ_hu597fdd23ac8a5c39e462678be0b8b5ce_33211_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;124&#34;
		data-flex-basis=&#34;298px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;This will submit the new configuration which will also update the agent list. Now our queue has 1 agent (the one we added to the Team earlier).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/microsoft-teams-call-queue-agent-lists-and-how-to-force-sync-them-ef8092090df0/1Y80efOkZInQnO0FtDwHNMw.png&#34;
	width=&#34;1731&#34;
	height=&#34;137&#34;
	srcset=&#34;https://heusser.pro/p/microsoft-teams-call-queue-agent-lists-and-how-to-force-sync-them-ef8092090df0/1Y80efOkZInQnO0FtDwHNMw_hu1469c17f83b6982290c065d940933f48_12731_480x0_resize_box_3.png 480w, https://heusser.pro/p/microsoft-teams-call-queue-agent-lists-and-how-to-force-sync-them-ef8092090df0/1Y80efOkZInQnO0FtDwHNMw_hu1469c17f83b6982290c065d940933f48_12731_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;1263&#34;
		data-flex-basis=&#34;3032px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;To minimize service impact, remember to revert the change back to its original value and submit again.&lt;/p&gt;
&lt;p&gt;Since TAC evaluates if you changed anything before you’re allowed to save the queue and you always have to save the queue twice to force a sync, this is a pretty cumbersome way to do it.&lt;/p&gt;
&lt;h4 id=&#34;force-agent-list-sync-by-powershell&#34;&gt;Force Agent List Sync by PowerShell&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Update 05.04.2023&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I wrote a new function to make this even easier. Please check out this article.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://heusser.pro/p/manage-microsoft-teams-call-queues-with-powershell-force-sync-9919e2939552&#34; &gt;Manage Microsoft Teams Call Queues with PowerShell (Force-Sync) | by martin heusser | Apr, 2023 | Medium&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;/Update&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Luckily, PowerShell allows us to save queues, even if none of the values have changed. To test this, I’ve added another EV enabled user to the Team.&lt;/p&gt;
&lt;p&gt;With this little code snippet, we will get all our call queues and set the OverflowThreshold value to the exact same value which was returned by PowerShell.&lt;/p&gt;
&lt;script src=&#34;https://gist.github.com/mozziemozz/10283870a4485a30ae9792da12f9a91b.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;To use Set-CsCallQueue we need to provide at least one property and a value which should be changed. But unlike TAC, PS doesn’t care if the new value is the same as the old value. Hence, we only need to touch each queue once.&lt;/p&gt;
&lt;p&gt;Tip: If you only want to sync queues which have no agents at all, just change the first line to:&lt;/p&gt;
&lt;p&gt;$callQueues = Get-CsCallQueue | Where-Object {$_.Agents.Count -lt 1}&lt;/p&gt;
&lt;p&gt;After running this foreach loop, our queue now shows two agents, and all the other queues settings remain unchanged.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/microsoft-teams-call-queue-agent-lists-and-how-to-force-sync-them-ef8092090df0/13kP8m8OOxnADWJlDOpjQ.png&#34;
	width=&#34;1735&#34;
	height=&#34;145&#34;
	srcset=&#34;https://heusser.pro/p/microsoft-teams-call-queue-agent-lists-and-how-to-force-sync-them-ef8092090df0/13kP8m8OOxnADWJlDOpjQ_hua2c95b01bccdaa4696c51456e5ea792d_13395_480x0_resize_box_3.png 480w, https://heusser.pro/p/microsoft-teams-call-queue-agent-lists-and-how-to-force-sync-them-ef8092090df0/13kP8m8OOxnADWJlDOpjQ_hua2c95b01bccdaa4696c51456e5ea792d_13395_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;1196&#34;
		data-flex-basis=&#34;2871px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;addendum&#34;&gt;Addendum&lt;/h4&gt;
&lt;p&gt;There’s also a Cmdlet called “&lt;a class=&#34;link&#34; href=&#34;https://docs.microsoft.com/es-es/powershell/module/skype/sync-csonlineapplicationinstance?view=skype-ps&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Sync-CsOnlineApplicationInstance&lt;/a&gt;”. Microsoft says the following:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Use the Sync-CsOnlineApplicationInstance cmdlet to sync the application instance from Azure Active Directory into Agent Provisioning Service.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Based on my testing, this had no effect on a queue&amp;rsquo;s agent list. Since it’s also the only Cmdlet containing *Sync-Cs* in its name, I assume that there currently is no easier workaround as the one described by me in this blog post.&lt;/p&gt;
&lt;p&gt;I hope that this information is useful to you when planning and deploying Microsoft Teams Phone solutions. But most importantly, I hope that you don’t get chills when all your queues show up with no agents even though you long added the Team or group members!&lt;/p&gt;
</description>
        </item>
        <item>
        <title>How to Permanently Forward PSTN Calls in Microsoft Teams (Without License)</title>
        <link>https://heusser.pro/p/how-to-permanently-forward-pstn-calls-in-microsoft-teams-without-license-baa0cb56b4c6/</link>
        <pubDate>Thu, 10 Mar 2022 19:01:47 +0000</pubDate>
        
        <guid>https://heusser.pro/p/how-to-permanently-forward-pstn-calls-in-microsoft-teams-without-license-baa0cb56b4c6/</guid>
        <description>&lt;p&gt;When you’re using Microsoft Teams Direct Routing as your primary calling solution, chances are that sometimes you also need to permanently forward calls to one of your numbers to another external phone number.&lt;/p&gt;
&lt;p&gt;In many cases, forwarding of numbers can also be handled outside of Teams. Most SIP providers offer a web-based portal for number management and forwarding. However, controlling all your numbers inside Teams without relying on third parties can still be an advantage sometimes.&lt;/p&gt;
&lt;p&gt;Note: this blog post only considers Teams Direct Routing scenarios. Calling Plans or Operator Connect are not covered.&lt;/p&gt;
&lt;h4 id=&#34;forwarding-by-a-licensed-teamsuser&#34;&gt;Forwarding by a Licensed Teams User&lt;/h4&gt;
&lt;p&gt;Setting up a forwarding of numbers can be achieved in multiple ways. The most obvious one to just create and license a Teams user and setup a permanent call forwarding for that user in the Teams Client.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/how-to-permanently-forward-pstn-calls-in-microsoft-teams-without-license-baa0cb56b4c6/1hF9oWNMacZgIt1dCtfkcOQ.png&#34;
	width=&#34;1156&#34;
	height=&#34;485&#34;
	srcset=&#34;https://heusser.pro/p/how-to-permanently-forward-pstn-calls-in-microsoft-teams-without-license-baa0cb56b4c6/1hF9oWNMacZgIt1dCtfkcOQ_hud2f68a252ad9d90fa2fed0467d55a8ba_58788_480x0_resize_box_3.png 480w, https://heusser.pro/p/how-to-permanently-forward-pstn-calls-in-microsoft-teams-without-license-baa0cb56b4c6/1hF9oWNMacZgIt1dCtfkcOQ_hud2f68a252ad9d90fa2fed0467d55a8ba_58788_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;238&#34;
		data-flex-basis=&#34;572px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;This user will need at minimum a Business Basic + Teams Phone Standard License. A CAP (Common Area Phone License) *in theory* should also present this option when using the Desktop or Web Client but call forwarding won’t be available when using a Teams certified Desk Phone. Thus, this is an unsupported scenario and should not be used. There’s a better way which will even allow you to get rid of the license costs entirely. I’ll explain how later in this article.&lt;/p&gt;
&lt;p&gt;Since there is no voice app like an auto attendant or call queue involved in this scenario, all calls to the direct number of this particular user will be forwarded right away. This also means that the caller will hear the ring back tone, until the external participant (forwaring target) answers the call.&lt;/p&gt;
&lt;p&gt;Advantages:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Direct forwarding, call does not get picked up or intercepted by Teams&lt;/li&gt;
&lt;li&gt;Should be possible to forward calls to a FAX number&lt;/li&gt;
&lt;li&gt;Good for scenarios where the forwarding target often changes (can be changed by other Teams users from inside their client by using the Boss/Delegate feature)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Disadvantages:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;License costs&lt;/li&gt;
&lt;li&gt;Configuration can only be reviewed or changed by logging in, using Boss/Delegate or PowerShell Preview Cmdlets (Get-CsUserCallingSettings)&lt;/li&gt;
&lt;li&gt;Can’t use Service or Toll-Free numbers&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;forwaring-by-a-resourceaccount&#34;&gt;Forwaring by a Resource Account&lt;/h4&gt;
&lt;p&gt;It’s also possible to transfer calls to external PSTN numbers by using resource accounts assigned to auto attendants or call queues. Before you can assign a number to a resource account, you need to assign a free &lt;a class=&#34;link&#34; href=&#34;https://docs.microsoft.com/en-us/microsoftteams/teams-add-on-licensing/virtual-user#virtual-user-license-allocation&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Teams Phone Standard — Virtual User License&lt;/a&gt; to the resource account.&lt;/p&gt;
&lt;p&gt;Once the license is assigned, we need to assign a phone number to the resource account:&lt;/p&gt;
&lt;p&gt;Set-CsPhoneNumberAssignment -Identity ra_cq_PS_Test@mozzism.ch -PhoneNumber +41445124077 -PhoneNumberType DirectRouting&lt;/p&gt;
&lt;p&gt;Next we also need to assign it a Voice Routing Policy:&lt;/p&gt;
&lt;p&gt;Grant-CsOnlineVoiceRoutingPolicy -Identity &lt;a class=&#34;link&#34; href=&#34;mailto:ra_cq_PS_Test@mozzism.ch&#34; &gt;ra_cq_PS_Test@mozzism.ch&lt;/a&gt; -PolicyName &amp;ldquo;FirstTrunk&amp;rdquo;&lt;/p&gt;
&lt;p&gt;The most obvious way, at least for me was to create an auto attendant and set it up without business hours so it will always perform the same action: forward the call to an external number. This works, no doubt but the problem is that the auto attendant *ALWAYS* answers the call before it’s actually forwarded. Because of that, this method can’t be used to forward calls to a FAX number.&lt;/p&gt;
&lt;p&gt;Since it’s also possible to forward calls from a call queue to an external number, we can leverage this to create a similar experience as to when the call is permanently forwarded by a Teams user.&lt;/p&gt;
&lt;p&gt;A call queue has two options to control actions or forwardings. Overflow (max. number of simultaneous calls) or timeout.&lt;/p&gt;
&lt;p&gt;If we set the timeout to zero (0 minutes, 0 seconds) the queue still answers the call, before it’s forwarded. Even if there is no greeting configured.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/how-to-permanently-forward-pstn-calls-in-microsoft-teams-without-license-baa0cb56b4c6/1YgnBVoi8wRNzxMl3TedyyQ.png&#34;
	width=&#34;1768&#34;
	height=&#34;734&#34;
	srcset=&#34;https://heusser.pro/p/how-to-permanently-forward-pstn-calls-in-microsoft-teams-without-license-baa0cb56b4c6/1YgnBVoi8wRNzxMl3TedyyQ_hue64e3524f799987c0a7f03b0e55629b2_83302_480x0_resize_box_3.png 480w, https://heusser.pro/p/how-to-permanently-forward-pstn-calls-in-microsoft-teams-without-license-baa0cb56b4c6/1YgnBVoi8wRNzxMl3TedyyQ_hue64e3524f799987c0a7f03b0e55629b2_83302_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;240&#34;
		data-flex-basis=&#34;578px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;A good example to see that the queue picked up the call is that the counter starts on any phone. Here I’m using Skype to call the call queue and you can see that the call has been established for 5 seconds, even though the configured forwarding target has not answered the call yet. While the call rings the forwarding target, Teams will generate a ring back tone inside the already established call.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/how-to-permanently-forward-pstn-calls-in-microsoft-teams-without-license-baa0cb56b4c6/1QAUIogXcABSjdUwIzj5LDQ.png&#34;
	width=&#34;1590&#34;
	height=&#34;1017&#34;
	srcset=&#34;https://heusser.pro/p/how-to-permanently-forward-pstn-calls-in-microsoft-teams-without-license-baa0cb56b4c6/1QAUIogXcABSjdUwIzj5LDQ_hu0edb9f3b89aaea4b10989c563ce6f412_890223_480x0_resize_box_3.png 480w, https://heusser.pro/p/how-to-permanently-forward-pstn-calls-in-microsoft-teams-without-license-baa0cb56b4c6/1QAUIogXcABSjdUwIzj5LDQ_hu0edb9f3b89aaea4b10989c563ce6f412_890223_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;156&#34;
		data-flex-basis=&#34;375px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;If we set the overflow threshold of the queue to zero on the other hand, TAC shows a warning message that the queue won’t play the greeting when the overflow threshold is set to 0.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/how-to-permanently-forward-pstn-calls-in-microsoft-teams-without-license-baa0cb56b4c6/1jxc3VpgcSiWVumahjggBRg.png&#34;
	width=&#34;1766&#34;
	height=&#34;765&#34;
	srcset=&#34;https://heusser.pro/p/how-to-permanently-forward-pstn-calls-in-microsoft-teams-without-license-baa0cb56b4c6/1jxc3VpgcSiWVumahjggBRg_hub16c720000d59c96133901d009d78a60_94963_480x0_resize_box_3.png 480w, https://heusser.pro/p/how-to-permanently-forward-pstn-calls-in-microsoft-teams-without-license-baa0cb56b4c6/1jxc3VpgcSiWVumahjggBRg_hub16c720000d59c96133901d009d78a60_94963_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;230&#34;
		data-flex-basis=&#34;554px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;It’s not entirely clear that this has always been the case, but I’m pretty sure that at least this warning message has been introduced a only few weeks ago when the call queue wizard was redesigned. It was this warning message that tipped me of and inspired me to test this.&lt;/p&gt;
&lt;p&gt;So, let’s make another call to the queue’s number. This time, there’s no counter visible in Skype’s call screen which means that the call gets forwarded without being intercepted by the queue first. In this case, because I’m using Skype I can only hear Skype’s own “ring back jingle”.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/how-to-permanently-forward-pstn-calls-in-microsoft-teams-without-license-baa0cb56b4c6/1d3NXW1fGGCCxHfm0jhDKzw.png&#34;
	width=&#34;1590&#34;
	height=&#34;1017&#34;
	srcset=&#34;https://heusser.pro/p/how-to-permanently-forward-pstn-calls-in-microsoft-teams-without-license-baa0cb56b4c6/1d3NXW1fGGCCxHfm0jhDKzw_hu7a27d03f3960869f3f9f5792b35aa6f0_58709_480x0_resize_box_3.png 480w, https://heusser.pro/p/how-to-permanently-forward-pstn-calls-in-microsoft-teams-without-license-baa0cb56b4c6/1d3NXW1fGGCCxHfm0jhDKzw_hu7a27d03f3960869f3f9f5792b35aa6f0_58709_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;156&#34;
		data-flex-basis=&#34;375px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;When using a “real phone” like my cell phone the ring back tone gets played back just like when any other number is dialed.&lt;/p&gt;
&lt;p&gt;Altough I haven’t actually tested sending a FAX message end to end, I tested forwarding to a FAX number and was able to hear the typical FAX noises when I called the queue’s number. I can’t see any reason why this shouldn’t work.&lt;/p&gt;
&lt;p&gt;Advantages:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;No License costs&lt;/li&gt;
&lt;li&gt;Can use Service or Toll-Free numbers&lt;/li&gt;
&lt;li&gt;Should be possible to forward calls to a FAX number (when using a CQ)&lt;/li&gt;
&lt;li&gt;Configured forwarding is more obvious because it’s visible in TAC&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Disadvantages:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Only Teams admins can change the forwarding target&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;summary&#34;&gt;Summary&lt;/h4&gt;
&lt;p&gt;Even though it might not be an obvious solution, using a call queue to permanently forward calls is still a great way to have more control over all your DIDs right inside Teams itself without adding any license costs.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Microsoft Teams: Activate FQDN of Online PSTN Gateway without License</title>
        <link>https://heusser.pro/p/microsoft-teams-activate-fqdn-of-online-pstn-gateway-without-license-85e9ee4ca4cc/</link>
        <pubDate>Tue, 08 Feb 2022 21:29:25 +0000</pubDate>
        
        <guid>https://heusser.pro/p/microsoft-teams-activate-fqdn-of-online-pstn-gateway-without-license-85e9ee4ca4cc/</guid>
        <description>&lt;p&gt;If you’re a Microsoft Teams Admin, like me, you are probably aware that setting up a new Online PSTN Gateway in Teams Admin Center (TAC) or via PowerShell requires the domain of the SBC’s FQDN to be activated. This is done by creating at least one account using the SBC’s FQDN as the UPN Suffix.&lt;/p&gt;
&lt;h3 id=&#34;domains&#34;&gt;Domains&lt;/h3&gt;
&lt;p&gt;Now keep in mind that there are two ways how you can add an Online PSTN Gateway in Teams. Either you use your own Gateway in which case the domain usually has one segment less and is a subdomain of your main domain. E.g.&lt;/p&gt;
&lt;p&gt;sbc.domain.com&lt;/p&gt;
&lt;p&gt;In this case you don’t need to create a user to activate the domain because &lt;em&gt;domain.com&lt;/em&gt; is already used for other UPNs and thus already known in your tenant.&lt;/p&gt;
&lt;p&gt;If you want to use Direct Routing offered by one of the various managed service providers, your FQDN might look something like this. E.g.&lt;/p&gt;
&lt;p&gt;customer1.customers.domain.com&lt;/p&gt;
&lt;p&gt;In this case you need to add a user with the following UPN. E.g.&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;mailto:domainactivation@customer1.customers.domain.com&#34; &gt;domainactivation@customer1.customers.domain.com&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;microsoft-docs&#34;&gt;Microsoft Docs&lt;/h3&gt;
&lt;p&gt;The information on Microsoft’s &lt;a class=&#34;link&#34; href=&#34;https://t.umblr.com/redirect?z=https%3A%2F%2Fdocs.microsoft.com%2Fen-us%2Fmicrosoftteams%2Fdirect-routing-sbc-multiple-tenants%23activate-the-subdomain-name&amp;amp;t=OTVkYjk5ZDBiMDNhNmNhOGIxNjY2YzlmYjZkZTdjMzA3ODkxYjk1Yiw5MmY5MzI0OTk0Y2RjZTUwZWM0N2I0YmIyOWYxNWM2YzQ2ZmY1ZmIw&amp;amp;ts=1633444148&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;official documentation&lt;/a&gt; is a bit controversial. They have two sections mentioning the activation of the domain. One time for the base domain (Carrier Tenant) and one time for the subdomains (Customer Tenants).&lt;/p&gt;
&lt;p&gt;As of writing this article, the information looks like this.&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://t.umblr.com/redirect?z=https%3A%2F%2Fdocs.microsoft.com%2Fen-us%2Fmicrosoftteams%2Fdirect-routing-sbc-multiple-tenants%23activate-the-domain-name&amp;amp;t=OWMxYjUzYzU2ZDI3OWRiZDBkNjQ3YWJjYjZjMTBmZTJhNzg3MDVlMiwxNWQ4NjM5NjY2NzdhZDgzZGM1NTU2NTBmOGFlMGY2YzhkMjIxMjA1&amp;amp;ts=1633444148&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Base Domain&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;After you have registered a domain name, you need to activate it by adding at least one user with Phone System license and assigning a SIP address with the FQDN portion of the SIP address matching the created base domain.&lt;/p&gt;
&lt;p&gt;Previously, Microsoft always said that this user needs an E5 License. This is still visible in their screenshots. If you want to review the change history of this particular documentation, you can always see it here on &lt;a class=&#34;link&#34; href=&#34;https://href.li/?https://github.com/MicrosoftDocs/OfficeDocs-SkypeForBusiness/commits/live/Teams/direct-routing-sbc-multiple-tenants.md&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you’re a customer and want to add a domain name assigned to you by your managed service provider, you don’t need to worry about this part. The assigned licenses will determine what voice capabilities your tenant has. You can check this by running the following in a Teams PowerShell session.&lt;/p&gt;
&lt;p&gt;(Get-CsTenant).ProvisionedPlan&lt;/p&gt;
&lt;p&gt;This will return an XML string containing all assigned licenses. It’s still a little weird that they only mention Phone System. Because Phone System is just an add-on which can’t be assigned without a corresponding Enterprise License (one of the SKUs which actually triggers the creation of an SfB user object), unless you use Common Area Phone.&lt;/p&gt;
&lt;p&gt;Oddly enough though, for the subdomain they don’t mention licensing at all. The subdomain part describes what needs to be done in the customer tenant.&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://t.umblr.com/redirect?z=https%3A%2F%2Fdocs.microsoft.com%2Fen-us%2Fmicrosoftteams%2Fdirect-routing-sbc-multiple-tenants%23activate-the-subdomain-name&amp;amp;t=OTVkYjk5ZDBiMDNhNmNhOGIxNjY2YzlmYjZkZTdjMzA3ODkxYjk1Yiw5MmY5MzI0OTk0Y2RjZTUwZWM0N2I0YmIyOWYxNWM2YzQ2ZmY1ZmIw&amp;amp;ts=1633444148&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Sub Domains&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;After you register a domain name, you need to activate it by adding at least one user and assign a SIP address with the FQDN portion of the SIP address matching the created subdomain in the customer tenant.&lt;/p&gt;
&lt;p&gt;Here they just say that the user needs to be assigned a SIP address, which is not possible without assigning a SfB Online Plan 2 license. Unless you keep on reading…&lt;/p&gt;
&lt;h3 id=&#34;what-will-assigning-the-licensedo&#34;&gt;What will assigning the license do?&lt;/h3&gt;
&lt;p&gt;So why is a License needed in the first place? Assigning a user a SfB License will provision an SfB Online user object for each licensed user.&lt;/p&gt;
&lt;p&gt;Once the SfB user is provisioned, the domain will also be stored in your tenants DomainUrlMap. If the FQDN of your Gateway is not present in your DomainUrlMap, you will not be able to create the gateway. MVP Luca Vitali has en excellent &lt;a class=&#34;link&#34; href=&#34;https://href.li/?https://lucavitali.wordpress.com/2019/03/15/new-csonlinepstngateway/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Blog Post&lt;/a&gt; about that.&lt;/p&gt;
&lt;h3 id=&#34;do-we-really-need-a-license-to-create-thegateway&#34;&gt;Do we really need a license to create the Gateway?&lt;/h3&gt;
&lt;p&gt;Based on my various tests, it really doesn’t matter if it’s an E1, E3, E5 or even a Business Basic License. As long as the SKU includes SfB Online Plan 2, a SIP address and an entry in the DomainUrlMap for that domain will be created.&lt;/p&gt;
&lt;p&gt;So, I asked myself, is there an easier way to activate the domain? One without assigning a license which would help automate things even further? Turns out there is indeed!&lt;/p&gt;
&lt;p&gt;A resource account in Teams does not need a license, unless you want to assign a phone number to it. If you create one without a license, Microsoft 365 will still provision an SfB Online object for this resource account and add its domain to your DomainUrlMap.&lt;/p&gt;
&lt;p&gt;By running &lt;em&gt;Get-CsOnlineApplicationInstance&lt;/em&gt; we can query our resource accounts in Teams.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/microsoft-teams-activate-fqdn-of-online-pstn-gateway-without-license-85e9ee4ca4cc/0ERujVXcteQftrsYE.png&#34;
	width=&#34;640&#34;
	height=&#34;351&#34;
	srcset=&#34;https://heusser.pro/p/microsoft-teams-activate-fqdn-of-online-pstn-gateway-without-license-85e9ee4ca4cc/0ERujVXcteQftrsYE_hu7977328df1e1474667a67bdd237ae9ef_172350_480x0_resize_box_3.png 480w, https://heusser.pro/p/microsoft-teams-activate-fqdn-of-online-pstn-gateway-without-license-85e9ee4ca4cc/0ERujVXcteQftrsYE_hu7977328df1e1474667a67bdd237ae9ef_172350_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;182&#34;
		data-flex-basis=&#34;437px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;After a few minutes, the account will also be visible when you run Get-CsOnlineUser. I always create my resource accounts using &lt;em&gt;ra_aa_&lt;/em&gt; as a UPN prefix. Another easy way of identifying resource accounts is to look for the &lt;em&gt;Department Attribute.&lt;/em&gt; A resource account will always have &lt;em&gt;Microsoft Communication Application Instance&lt;/em&gt; set as &lt;em&gt;Department.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/microsoft-teams-activate-fqdn-of-online-pstn-gateway-without-license-85e9ee4ca4cc/0yI6AyClljJe7j1X0.png&#34;
	width=&#34;640&#34;
	height=&#34;351&#34;
	srcset=&#34;https://heusser.pro/p/microsoft-teams-activate-fqdn-of-online-pstn-gateway-without-license-85e9ee4ca4cc/0yI6AyClljJe7j1X0_hu0b0addbd932257f620d1aaa3a69fcf90_159485_480x0_resize_box_3.png 480w, https://heusser.pro/p/microsoft-teams-activate-fqdn-of-online-pstn-gateway-without-license-85e9ee4ca4cc/0yI6AyClljJe7j1X0_hu0b0addbd932257f620d1aaa3a69fcf90_159485_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;182&#34;
		data-flex-basis=&#34;437px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;caveats&#34;&gt;Caveats&lt;/h3&gt;
&lt;p&gt;The only caveat is that you don’t usually configure the SfB Online DNS entries for a domain which you want to use for your Direct Routing Gateway domain. If the DNS records are not configured, creating a resource account using your SBC FQDN will fail. Jeff Brown over at Jeff Brown Tech also has a great &lt;a class=&#34;link&#34; href=&#34;https://href.li/?https://jeffbrown.tech/microsoft-teams-unable-to-create-resource-accounts/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Blog Post&lt;/a&gt; covering this topic.&lt;/p&gt;
&lt;p&gt;According to my research and testing, the only record that’s needed in order to create the resource account is the &lt;a class=&#34;link&#34; href=&#34;https://t.umblr.com/redirect?z=https%3A%2F%2Fdocs.microsoft.com%2Fen-us%2FSkypeForBusiness%2Ftroubleshoot%2Fonline-configuration%2Fdns-configuration-issue%23solution&amp;amp;t=NDY5M2UyYjRmZGZhNjdjYTJkZjFjMGQ5NDdmMzgwNjBkZGYwNjU1MCxhMjFjMmJjOTg1YWQ2Zjk2MjU2NzE0Yzc5MGNjMzE5NzllMTBmY2I4&amp;amp;ts=1633642291&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;SIP Federation TLS SRV Record.&lt;/a&gt; The other three SfB records can be ignored.&lt;/p&gt;
&lt;p&gt;Once this record is created you will be able to create a resource account using your SBCs FQDN as UPN suffix. Now you just have to wait for the account to be provisioned and for the domain to show up in your DomainUrlMap. This usually takes around 5–15 minutes but can take a lot longer sometimes.&lt;/p&gt;
&lt;p&gt;You can check your DomainUrlMap using this command:&lt;/p&gt;
&lt;p&gt;(Get-CsTenant).DomainUrlMap&lt;/p&gt;
&lt;p&gt;Based on my Testing, DomainMapUrl was not available anymore in Teams PowerShell Modules above version 2.6.0. This caused my provisioning script to end up in an infinite loop because it was checking the DomainUrlMap every few minutes but always returned empty.&lt;/p&gt;
&lt;p&gt;The last module I know of which returned the DomainUrlMap was 2.3.1. Since we’re now at version 3.1.1 I suggest to query the SfB users by using Get-CsOnlineUser to check if the domain is already activated. However, it might still take a few minutes before the gateway can be created. By working with Try {} Catch{} and a Do-Until loop you can keep trying to create the gateway until it succeeds.&lt;/p&gt;
&lt;h3 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;So, there you have it. It’s indeed possible to create a PSTN Online Gateway without ever assigning a license. Not every tenant even has available licenses and not every tenant has the same type of available licenses. This means that you don’t need to make sure anymore that your script is assigning the correct license or even that enough licenses are available in the first place. In scenarios where you want to automate everything using unattended scripts, this comes in quite handy.&lt;/p&gt;
&lt;p&gt;Because the license and the user can be removed after you created the gateway, I see no problem in setting up a resource account without a license. Unless you’re setting up the carrier tenant. In this case you don’t usually have any other production users which means that you need to keep at minimum one license assigned. Otherwise, the tenant will lose its voice capabilities and break your Direct Routing configuration for all your customers.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Automatically render Microsoft Teams Call Flow Diagrams</title>
        <link>https://heusser.pro/p/automatically-render-microsoft-teams-call-flow-diagrams-607b89df4154/</link>
        <pubDate>Tue, 04 Jan 2022 20:50:28 +0000</pubDate>
        
        <guid>https://heusser.pro/p/automatically-render-microsoft-teams-call-flow-diagrams-607b89df4154/</guid>
        <description>&lt;p&gt;I am very pleased to announce version 2 of my “&lt;a class=&#34;link&#34; href=&#34;https://github.com/mozziemozz/M365CallFlowVisualizer&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Microsoft 365 Call Flow Visualizer&lt;/a&gt;” Script. Those who follow me on Twitter, might have already seen a glimpse of what I’ve been working on in my spare time for the past few months.&lt;/p&gt;
&lt;h4 id=&#34;what-am-i-talkingabout&#34;&gt;What am I talking about?&lt;/h4&gt;
&lt;p&gt;At work, I build or configure Microsoft Teams call flows almost daily. Even though the Teams Admin Center provides an easy-to-use graphical user interface to set up auto attendants and call queues, the solutions are not always that straight forward. If you’re creating your very first call flow, chances are that you will start by creating an auto attendant. Why wouldn’t you, it’s where the call first hits your system, isn’t it? Later on, you discover that you can’t even configure the most basic call flow, because you have not created your target call queue yet.&lt;/p&gt;
&lt;h4 id=&#34;living-in-a-fast-pacedworld&#34;&gt;Living in a fast paced world&lt;/h4&gt;
&lt;p&gt;What if three months down the road somebody from the office or a customer asks you how their main number handles incoming calls? Are you still able to answer that without logging into the Teams Admin Center and clicking through all the nested auto attendants and call queues?&lt;/p&gt;
&lt;p&gt;They probably want to know things like how long does it ring before a call is transferred? Where is it transferred to? And which users are configured to answer calls? Just to name a few. If you manage a lot of customers, or work for a large organization with dozens of call queues, answering these kinds of questions can cost quite some time and resources.&lt;/p&gt;
&lt;p&gt;What if I told you that you could just run a script which will render a diagram containing your call flows automatically? Would that be something you might be interested in? (Shout out to all the Entourage fans out there.)&lt;/p&gt;
&lt;h4 id=&#34;finding-inspiration-in-microsoft-docs&#34;&gt;Finding inspiration in Microsoft Docs&lt;/h4&gt;
&lt;p&gt;docs.microsoft.com is arguably one of the best product documentation sites on the web. Of course, that can differ from product to product but overall, it’s a very solid approach to documentation. When docs.microsoft.com was &lt;a class=&#34;link&#34; href=&#34;https://docs.microsoft.com/en-us/teamblog/introducing-docs-microsoft-com#readability&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;introduced in 2016&lt;/a&gt; Microsoft even said that eye tracking studies have shown that content with a fixed width is easier to read. This really got my attention and made me believe that Microsoft has put some real effort into creating their product documentations.&lt;/p&gt;
&lt;p&gt;I am by no means a professional developer. I didn’t even really know what Markdown is at that time. After doing some research I quickly understood that all or most of their documentation content is based on Markdown files which are hosted on GitHub and rendered into a website.&lt;/p&gt;
&lt;p&gt;I started to pay attention and noticed that many other companies, like &lt;a class=&#34;link&#34; href=&#34;https://bitwarden.com/help/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Bitwarden&lt;/a&gt;, my favorite password manager, also use Markdown based documentation websites. This underlined my hunch that Markdown based docs are the real deal.&lt;/p&gt;
&lt;p&gt;No more confusing file versions, people creating and changing their own versions of documentations without telling anyone and so forth. With a Markdown based documentation solution, everything is stored in a central repository and every change is tracked with GIT. I need this too. But how do they do it?&lt;/p&gt;
&lt;p&gt;Another quick research session led me to &lt;a class=&#34;link&#34; href=&#34;https://dotnet.github.io/docfx/index.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;DocFx&lt;/a&gt;, a static website generator for Markdown files maintained by the .NET team. After some tweaks here and there, my documentation site was already up and running.&lt;/p&gt;
&lt;h4 id=&#34;lazy-is-the-newsmart&#34;&gt;Lazy is the new smart&lt;/h4&gt;
&lt;p&gt;Nobody likes writing documentations. Including me. But what if I could start to write some PowerShell scripts which will automatically retrieve specific information about a Microsoft 365 tenant and save it to Markdown files? Basically, let the scripts do the work for me? What at first was a proof of concept quickly turned into a full-fledged documentation website containing all sorts of data.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/automatically-render-microsoft-teams-call-flow-diagrams-607b89df4154/1MrTseh4yHR5hpsbg3RrQ.png&#34;
	width=&#34;1758&#34;
	height=&#34;1038&#34;
	srcset=&#34;https://heusser.pro/p/automatically-render-microsoft-teams-call-flow-diagrams-607b89df4154/1MrTseh4yHR5hpsbg3RrQ_hue4d00a77483787ba4de7326580b302b9_109130_480x0_resize_box_3.png 480w, https://heusser.pro/p/automatically-render-microsoft-teams-call-flow-diagrams-607b89df4154/1MrTseh4yHR5hpsbg3RrQ_hue4d00a77483787ba4de7326580b302b9_109130_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;169&#34;
		data-flex-basis=&#34;406px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;one-tool-down-two-togo&#34;&gt;One tool down, two to go&lt;/h4&gt;
&lt;p&gt;With DocFx I was able to automatically structure and render information into a user friendly and comprehensible website. Next up are diagrams. I hate fiddling around with diagram drawing tools. Creating links between nodes, rearranging, and resizing shapes etc. can be a really frustrating and time-consuming chore. Once again, I searched the web for a tool or a technology which can render diagrams from code. That’s when I discovered &lt;a class=&#34;link&#34; href=&#34;https://mermaid-js.github.io/mermaid/#/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Mermaid&lt;/a&gt;. Mermaid uses JavaScript to render diagrams and flow charts from code. The learning curve was quite big at first. I probably would have been faster if I had just drawn a call flow diagram in Visio. But since Mermaid also offers an excellent &lt;a class=&#34;link&#34; href=&#34;https://mermaid.live/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;live editor&lt;/a&gt;, I essentially got the hang of it. Now I can create diagrams a hundred times faster and without the hassle of manually drawing them.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/automatically-render-microsoft-teams-call-flow-diagrams-607b89df4154/19wkpjx2ZmqSSBLXUfDmPNg.png&#34;
	width=&#34;1512&#34;
	height=&#34;1374&#34;
	srcset=&#34;https://heusser.pro/p/automatically-render-microsoft-teams-call-flow-diagrams-607b89df4154/19wkpjx2ZmqSSBLXUfDmPNg_hu779b201d9572ecd09b3277ce22f68915_92776_480x0_resize_box_3.png 480w, https://heusser.pro/p/automatically-render-microsoft-teams-call-flow-diagrams-607b89df4154/19wkpjx2ZmqSSBLXUfDmPNg_hu779b201d9572ecd09b3277ce22f68915_92776_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;110&#34;
		data-flex-basis=&#34;264px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;the-finalpiece&#34;&gt;The final piece&lt;/h4&gt;
&lt;p&gt;The final step of my vision was to connect all the dots. Use PowerShell to read call flows from Microsoft Teams, save them to markdown files and generate a website which will display said call flows. Of course, all of this should happen automatically and update the contents of the website on a schedule. I’ve got everything I need to achieve this except the tool to generate the flow charts.&lt;/p&gt;
&lt;p&gt;For this one, I was sure that there’s no off the shelf solution. So I started writing some PowerShell code to get all the details needed in order to display a call flow. This was a mere proof of concept at first too. I soon discovered that this project would be much more complex than initially anticipated. But I just kept on coding, experimenting, and adding stuff to my script. After a few weeks of working on this project on weekends and evenings I published a first version of my script on GitHub.&lt;/p&gt;
&lt;h4 id=&#34;the-challenges-kept-oncoming&#34;&gt;The challenges kept on coming&lt;/h4&gt;
&lt;p&gt;Even though you can only create two different types of voice apps in Teams, the number of possibilities how they might be connected to each other seem limitless. I quickly realized that I will never achieve my goal with the current version. So, I started working on an updated version.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/automatically-render-microsoft-teams-call-flow-diagrams-607b89df4154/1BRQwWnFDQSNofwNK1yfxA.jpeg&#34;
	width=&#34;1904&#34;
	height=&#34;3627&#34;
	srcset=&#34;https://heusser.pro/p/automatically-render-microsoft-teams-call-flow-diagrams-607b89df4154/1BRQwWnFDQSNofwNK1yfxA_hu43f2bf21c008164e3853d71132738f9a_230134_480x0_resize_q75_box.jpeg 480w, https://heusser.pro/p/automatically-render-microsoft-teams-call-flow-diagrams-607b89df4154/1BRQwWnFDQSNofwNK1yfxA_hu43f2bf21c008164e3853d71132738f9a_230134_1024x0_resize_q75_box.jpeg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;52&#34;
		data-flex-basis=&#34;125px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;learnings&#34;&gt;Learnings&lt;/h4&gt;
&lt;p&gt;I started learning PowerShell about three years ago. Since then, I’ve created numerous smaller and larger scripts to automate things. But I’ve never even attempted to write something as big and complex as this. Nor had I used functions a lot. Nevertheless, this feels like I was able to put almost everything I learned about PowerShell in the last years to good use. Once I realized that the script needs to be much more flexible and dynamic, I started to divide my first version of the script into separate functions. Even then, I hit several dead ends and had to rewrite a lot of the code.&lt;/p&gt;
&lt;p&gt;Even though it was a lot of work and I’m sure that it’s not the most efficient or clean code you will find on GitHub, I still learned a lot during the development of my tool. The most important part of this story is that you don’t necessarily have to be a pro dev to create something like this. We live in a world full of developers who create awesome tools, frameworks, or other technologies every day. Sometimes it’s just about vision, determination and being able to understand how different technologies can work together.&lt;/p&gt;
&lt;p&gt;I’m very proud of what I achieved and super happy with the result. Feel free to head over to &lt;a class=&#34;link&#34; href=&#34;https://github.com/mozziemozz/M365CallFlowVisualizer&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub&lt;/a&gt; and give the &lt;strong&gt;M365 Call Flow Visualizer&lt;/strong&gt; a spin. I hope that you like what I’ve done and that you may find it useful. Please contact me on &lt;a class=&#34;link&#34; href=&#34;https://twitter.com/mozzeph&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Twitter&lt;/a&gt; if you have any questions or feedback.&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
