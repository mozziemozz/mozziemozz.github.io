<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Adaptive Cards on HEUSSER.PRO</title>
        <link>https://heusser.pro/categories/adaptive-cards/</link>
        <description>Recent content in Adaptive Cards on HEUSSER.PRO</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Wed, 17 Jan 2024 19:59:21 +0000</lastBuildDate><atom:link href="https://heusser.pro/categories/adaptive-cards/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Teams Shared Voicemail for Basic Call Flows</title>
        <link>https://heusser.pro/p/teams-shared-voicemail-for-basic-call-flows-1qru2qqlx0ju/</link>
        <pubDate>Wed, 17 Jan 2024 19:59:21 +0000</pubDate>
        
        <guid>https://heusser.pro/p/teams-shared-voicemail-for-basic-call-flows-1qru2qqlx0ju/</guid>
        <description>&lt;img src="https://heusser.pro/p/teams-shared-voicemail-for-basic-call-flows-1qru2qqlx0ju/cover.png" alt="Featured image of post Teams Shared Voicemail for Basic Call Flows" /&gt;&lt;p&gt;Not too long ago I wrote &lt;a class=&#34;link&#34; href=&#34;https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc&#34; &gt;this&lt;/a&gt; blog post about the ultimate Teams shared voicemail solution. This solution assumed a full blown call flow with on-call coverage and an advanced notification mechanism. Today I&amp;rsquo;m going to show you a simplified but yet optimized version of my Power Automate Flow. While the previous solution works without any issues, it&amp;rsquo;s not really scalable. If you have a lot of queues, you probably don&amp;rsquo;t want to create a dedicated shared mailbox for every queue that needs shared voicemail access via Teams and Adaptive Cards. That just adds unnecessary management overhead to your Teams phone environment.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve got some good news for you. I found a way to do it all without the need of shared mailbox. The flow is now directly triggered by a new email to the Microsoft 365 Group instead of a new email to the shared mailbox. Furthermore, all other mail related actions in the flow have been updated to use the &lt;strong&gt;Office 365 Groups Mail&lt;/strong&gt; connector as well.&lt;/p&gt;
&lt;h2 id=&#34;call-flow-diagram&#34;&gt;Call Flow Diagram
&lt;/h2&gt;&lt;p&gt;Let&amp;rsquo;s look at the scenario first. This time around, it&amp;rsquo;s a very simple call flow which consists of an auto attendant, a call queue and a Microsoft 365 Group as shared voicemail target.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-shared-voicemail-for-basic-call-flows-1qru2qqlx0ju/PS_Test_EV_Enabled_AA_CallFlow.png&#34;
	width=&#34;7840&#34;
	height=&#34;7820&#34;
	srcset=&#34;https://heusser.pro/p/teams-shared-voicemail-for-basic-call-flows-1qru2qqlx0ju/PS_Test_EV_Enabled_AA_CallFlow_hu7272508111248889636.png 480w, https://heusser.pro/p/teams-shared-voicemail-for-basic-call-flows-1qru2qqlx0ju/PS_Test_EV_Enabled_AA_CallFlow_hu2016930160223947453.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;100&#34;
		data-flex-basis=&#34;240px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;flow-trigger&#34;&gt;Flow Trigger
&lt;/h2&gt;&lt;p&gt;The flow is now triggered by &lt;strong&gt;When a new email arrives to a group&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-shared-voicemail-for-basic-call-flows-1qru2qqlx0ju/Screenshot-2024-46-17-21-46-39.png&#34;
	width=&#34;920&#34;
	height=&#34;172&#34;
	srcset=&#34;https://heusser.pro/p/teams-shared-voicemail-for-basic-call-flows-1qru2qqlx0ju/Screenshot-2024-46-17-21-46-39_hu6276923195173620822.png 480w, https://heusser.pro/p/teams-shared-voicemail-for-basic-call-flows-1qru2qqlx0ju/Screenshot-2024-46-17-21-46-39_hu9769458055859161011.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;534&#34;
		data-flex-basis=&#34;1283px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;flow-actions&#34;&gt;Flow Actions
&lt;/h2&gt;&lt;p&gt;Using the Office 365 Groups Mail connector is not as straight forward as retrieving an email from a shared mailbox or a normal user mailbox. There are conversations, threads and thread posts. Everything must be queried in the correct order to receive all the data that&amp;rsquo;s needed.&lt;/p&gt;
&lt;p&gt;This is how it&amp;rsquo;s done.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-shared-voicemail-for-basic-call-flows-1qru2qqlx0ju/Screenshot-2024-47-17-21-47-39.png&#34;
	width=&#34;1104&#34;
	height=&#34;1365&#34;
	srcset=&#34;https://heusser.pro/p/teams-shared-voicemail-for-basic-call-flows-1qru2qqlx0ju/Screenshot-2024-47-17-21-47-39_hu3691167799431175005.png 480w, https://heusser.pro/p/teams-shared-voicemail-for-basic-call-flows-1qru2qqlx0ju/Screenshot-2024-47-17-21-47-39_hu12860602678462286633.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;80&#34;
		data-flex-basis=&#34;194px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Because this call flow doesn&amp;rsquo;t have an on-call option, the flow uses way less actions. However, there&amp;rsquo;s still a parallel branch needed. Once the Adaptive Card has been posted to the Teams channel, the flow waits for a reply so the &lt;code&gt;messageId&lt;/code&gt; of the message containing the Adaptive card is still unknown to the flow. That&amp;rsquo;s where the parallel branch comes into play. It will get the &lt;code&gt;messageId&lt;/code&gt; and then the &lt;code&gt;userId&lt;/code&gt; of each Team member. Finally, the flow will send a Teams activity feed notification for the new Adaptive Card to each Team member. By using the flow to send the notifications we don&amp;rsquo;t need to worry about users not enabling notifications for all new channel posts. They&amp;rsquo;ll have no excuse if they ever forget to call somebody back.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-shared-voicemail-for-basic-call-flows-1qru2qqlx0ju/flow-notification-2024-59-17-21-59-53.png&#34;
	width=&#34;1944&#34;
	height=&#34;1585&#34;
	srcset=&#34;https://heusser.pro/p/teams-shared-voicemail-for-basic-call-flows-1qru2qqlx0ju/flow-notification-2024-59-17-21-59-53_hu4052034907694077373.png 480w, https://heusser.pro/p/teams-shared-voicemail-for-basic-call-flows-1qru2qqlx0ju/flow-notification-2024-59-17-21-59-53_hu15607944988022955664.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;122&#34;
		data-flex-basis=&#34;294px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;result-in-teams&#34;&gt;Result in Teams
&lt;/h2&gt;&lt;p&gt;This is how the notification looks like for end users in Teams. In case the audio player on the card is not working for whatever reason, I&amp;rsquo;ve also included an additional button called &lt;strong&gt;Open MP3&lt;/strong&gt; which will open the audio file in Microsoft Stream when it&amp;rsquo;s clicked.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-shared-voicemail-for-basic-call-flows-1qru2qqlx0ju/teams-voicemail-notification-2024-34-17-23-34-17.png&#34;
	width=&#34;2241&#34;
	height=&#34;932&#34;
	srcset=&#34;https://heusser.pro/p/teams-shared-voicemail-for-basic-call-flows-1qru2qqlx0ju/teams-voicemail-notification-2024-34-17-23-34-17_hu18345731162980052300.png 480w, https://heusser.pro/p/teams-shared-voicemail-for-basic-call-flows-1qru2qqlx0ju/teams-voicemail-notification-2024-34-17-23-34-17_hu8683442676467481998.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;240&#34;
		data-flex-basis=&#34;577px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;final-notes&#34;&gt;Final Notes
&lt;/h2&gt;&lt;p&gt;If you have an on-call option in your call flow but you still want to take advantage of the simplified trigger without the shared mailbox, you can just import both flows into your Power Automate Environment and build a new flow from scratch which combines the best of both worlds. The Microsoft Edge split screen feature and Power Automate&amp;rsquo;s copy/paste feature are a great help for that.&lt;/p&gt;
&lt;h2 id=&#34;summary&#34;&gt;Summary
&lt;/h2&gt;&lt;p&gt;The initial scenario which included the on-call notification mechanism was designed for a very specific use case. This iteration of my Teams Shared Voicemail solution should fit a lot more customer scenarios. It&amp;rsquo;s easier to understand and implement and also has less moving parts. Feel free to download the basic version of my flow from &lt;a class=&#34;link&#34; href=&#34;https://github.com/mozziemozz/TeamsPhoneAutomation/raw/main/Scripts/PowerAutomate/Flows/TeamsSharedVoicemailBasicV3%28M365GroupInbox%29_GitHub.zip&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;here&lt;/a&gt; and give it a try. Just make sure to replace anything that&amp;rsquo;s specific to my lab tenant with your actual values.&lt;/p&gt;
&lt;p&gt;If you need help importing the flow, please read this section in the &lt;a class=&#34;link&#34; href=&#34;https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/#the-flow&#34; &gt;initial article&lt;/a&gt; first.&lt;/p&gt;
&lt;p&gt;If this blog provides additional value to you or your company, I want you to know that you can always show your support by donating on my &lt;a class=&#34;link&#34; href=&#34;https://github.com/sponsors/mozziemozz?frequency=one-time&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub Sponsors&lt;/a&gt; profile.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>The Ultimate Teams Shared Voicemail Solution</title>
        <link>https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/</link>
        <pubDate>Wed, 06 Dec 2023 20:59:21 +0000</pubDate>
        
        <guid>https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/</guid>
        <description>&lt;p&gt;In June last year I wrote about &lt;a class=&#34;link&#34; href=&#34;https://heusser.pro/p/microsoft-teams-handle-shared-voicemail-more-efficiently-746ddeae6ac4&#34; &gt;handling Teams shared voicemail more efficiently&lt;/a&gt;. Although the principle is the same today, a couple of things have changed which has allowed me to build a much more elegant version of this Power Automate flow.&lt;/p&gt;
&lt;p&gt;About a year ago, I also &lt;a class=&#34;link&#34; href=&#34;https://heusser.pro/p/microsoft-teams-shared-voicemail-now-supports-distribution-lists-and-mail-enabled-security-groups-cc6453f88f1&#34; &gt;wrote&lt;/a&gt; about shared voicemail now supporting not just Microsoft 365 groups but also distribution lists and mail enabled security groups. While it’s great to have more options, that doesn’t solve the issue at its core.&lt;/p&gt;
&lt;p&gt;My main complaint about shared voicemail in Teams is that it’s hard to keep an overview over which voicemails have already been processed (as in the person who left the message has been called back). You either train people to regularly check their Microsoft 365 group inboxes or you enable &lt;a class=&#34;link&#34; href=&#34;https://support.microsoft.com/en-us/office/follow-a-group-in-outlook-e147fc19-f548-4cd2-834f-80c6235b7c36#:~:text=Follow%20a%20group%3A%201%20In%20Outlook%20for%20Windows%2C,list%2C%20select%20Not%20following%20%3E%20Follow%20in%20Inbox.&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;follow in inbox&lt;/a&gt; for all the group&amp;rsquo;s members. Follow in inbox will make sure that no voicemail/email gets lost, but it also means that more communication is required within a team to make sure that the caller is not called back multiple times or not at all (because everybody believes that someone else will call back). My Power Automate Flow solves this issue by delivering the voicemails directly into a Teams channel.&lt;/p&gt;
&lt;h4 id=&#34;call-flowdiagram&#34;&gt;Call Flow Diagram
&lt;/h4&gt;&lt;p&gt;This is the example scenario. A relatively simple call flow with an auto attendant which routes calls to a call queue during business hours and redirects to a second auto attendant after hours. The second auto attendant offers callers a choice to either leave a message or get connected to the on-call service.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/1RMziOV2rbncLrbdFMbnAzw.png&#34;
	width=&#34;7840&#34;
	height=&#34;5630&#34;
	srcset=&#34;https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/1RMziOV2rbncLrbdFMbnAzw_hu12855296586873793472.png 480w, https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/1RMziOV2rbncLrbdFMbnAzw_hu5436304556483671852.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;139&#34;
		data-flex-basis=&#34;334px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;I purposely used a dedicated auto attendant for the after-hours so it can be re-used if the call flow is extended in the future. You can see that the after-hours call flow of the main auto attendant (PS Test EV Enabled AA) only plays the greeting &lt;em&gt;Welcome to heusser.pro. You’re calling us outside of our business hours&lt;/em&gt;. And &lt;strong&gt;PS Test EV Enabled On Call AA&lt;/strong&gt; does the actual after-hours routing. By splitting the greeting, I could also use the IVR of the second auto attendant for another call queue or for holidays configured on the main auto attendant. This way, I won’t have to build a new/the same IVR per holiday call handling which saves time and reduces management effort.&lt;/p&gt;
&lt;p&gt;The second reason I built it like this is that the name of the auto attendant includes the keyword &lt;strong&gt;On Call&lt;/strong&gt;. Because the on-call call queue uses the same naming convention. This means that the email containing the voicemail includes the name of the voice app in which the call was sent to voicemail, which makes it easy to determine if a voicemail was left during business hours or during on-call/after hours.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/1DFC8bAkYRUtHZJIpF21w.png&#34;
	width=&#34;2033&#34;
	height=&#34;543&#34;
	srcset=&#34;https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/1DFC8bAkYRUtHZJIpF21w_hu10242821503798733846.png 480w, https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/1DFC8bAkYRUtHZJIpF21w_hu14495164218824647678.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;374&#34;
		data-flex-basis=&#34;898px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;shared-voicemail&#34;&gt;Shared Voicemail
&lt;/h4&gt;&lt;p&gt;As you can see in the diagram, in every case where a call cannot be answered, it goes to the same shared voicemail group. This Microsoft 365 group is the same group that’s linked to the Team which also hosts the two voice enabled channels which are linked to the call queues.&lt;/p&gt;
&lt;p&gt;Instead of relying on people either checking the group mailbox for new voicemail messages or subscribing to the group mailbox, we’re going to build a Power Automate flow to deliver voicemail messages directly into a Teams channel.&lt;/p&gt;
&lt;p&gt;The first thing we need to do is to create or define a shared mailbox so we can subscribe it to new messages of the M365 group. The flow will only process emails which have attachments, and the attachments name must end with &lt;code&gt;.mp3&lt;/code&gt; . But I still strongly recommend to create a dedicated shared mailbox which will only receive emails from the M365 group. To keep things clean, I would also deter from sending any kind of other emails to the M365 group. If you also use a dedicated Team for your call queues, that shouldn’t be an issue.&lt;/p&gt;
&lt;p&gt;Once the shared mailbox is created, we need to give the user which will own the Flow full access to it.&lt;/p&gt;
&lt;p&gt;You will need the PowerShell module &lt;code&gt;ExchangeOnlineManagement&lt;/code&gt; and need to run &lt;code&gt;Connect-ExchangeOnline&lt;/code&gt; before you can run these commands.&lt;/p&gt;
&lt;h3 id=&#34;create-shared-mailbox&#34;&gt;Create shared mailbox
&lt;/h3&gt;&lt;p&gt;New-Mailbox -Shared -Name &amp;ldquo;PS Test EV Enabled SharedVoicemail&amp;rdquo; -DisplayName &amp;ldquo;PS Test EV Enabled SharedVoicemail&amp;rdquo; -Alias &amp;ldquo;PSTestEVEnabledSharedVoicemail&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Start-Sleep -Seconds 30&lt;/p&gt;
&lt;h4 id=&#34;grant-full-mailbox-access-to-the-flow-owner&#34;&gt;Grant full mailbox access to the flow owner
&lt;/h4&gt;&lt;p&gt;Add-MailboxPermission -Identity &amp;ldquo;PSTestEVEnabledSharedVoicemail&amp;rdquo; -User &amp;ldquo;&lt;a class=&#34;link&#34; href=&#34;mailto:mozzie@mozzism.ch&#34; &gt;mozzie@mozzism.ch&lt;/a&gt;&amp;rdquo; -AccessRights FullAccess -InheritanceType All&lt;/p&gt;
&lt;h4 id=&#34;subscribing-the-shared-mailbox-to-the-m365-groupinbox&#34;&gt;Subscribing the Shared Mailbox to the M365 Group Inbox
&lt;/h4&gt;&lt;p&gt;Next, we add the newly created shared mailbox as a member of the group and then also subscribe it to the group’s inbox.&lt;/p&gt;
&lt;h4 id=&#34;add-the-shared-mailbox-as-a-member-to-the-m365-group&#34;&gt;Add the shared mailbox as a member to the M365 group
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;Add-UnifiedGroupLinks&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-Identity&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$groupId&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-LinkType&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Members&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-Links&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;PSTestEVEnabledSharedVoicemail&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;subscribe-the-shared-mailbox-to-the-m365-groups-emails-enable-follow-in-inbox&#34;&gt;Subscribe the shared mailbox to the M365 group&amp;rsquo;s emails (enable follow in inbox)
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;Add-UnifiedGroupLinks&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-Identity&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$groupId&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-LinkType&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Subscribers&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-Links&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;PSTestEVEnabledSharedVoicemail&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;We can verify that the shared mailbox is indeed subscribed by using this code. (I have no idea why it says &lt;code&gt;UserMailbox&lt;/code&gt; though…)&lt;/p&gt;
&lt;p&gt;PS V:\GitHub\TeamsPhoneAutomation&amp;gt; Get-UnifiedGroupLinks -Identity $groupId -LinkType Subscribers&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Name                               RecipientType  
----                               -------------  
PS Test EV Enabled SharedVoicemail UserMailbox
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The idea here is that only the shared mailbox gets new voicemails in its mailbox. None of the users should get the voicemails in their personal inbox because they receive them in Teams. This allows for much better and efficient collaboration.&lt;/p&gt;
&lt;h3 id=&#34;the-result&#34;&gt;The Result
&lt;/h3&gt;&lt;p&gt;This is the Team I created for this call flow. Channels 1 and 2 are linked to the queues which receive calls. 3 and 4 are the ones which receive the voicemails. As explained earlier in this article, the flow can easily determine at which stage in the call flow (during business hours or on-call/after hours) a voicemail was left. That’s why we have two separate voicemail channels.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/1ERgB32HAsCptqOqTdj0BGw.png&#34;
	width=&#34;1054&#34;
	height=&#34;489&#34;
	srcset=&#34;https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/1ERgB32HAsCptqOqTdj0BGw_hu8526223670376369789.png 480w, https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/1ERgB32HAsCptqOqTdj0BGw_hu923701379336760308.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;215&#34;
		data-flex-basis=&#34;517px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;voicemail-during-businesshours&#34;&gt;Voicemail During Business Hours
&lt;/h4&gt;&lt;p&gt;Adaptive Cards in Teams now support &lt;a class=&#34;link&#34; href=&#34;https://adaptivecards.io/explorer/Media.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;media&lt;/a&gt;. This means that we can now embed an audio file which is stored on SharePoint directly on an adaptive card and we’ll get a neat little Stream powered media player inside Teams.&lt;/p&gt;
&lt;p&gt;The card will include the number or the email address of the user who left the voicemail.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/1N07rBJWK18W1euy4cQzG6g.png&#34;
	width=&#34;1382&#34;
	height=&#34;763&#34;
	srcset=&#34;https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/1N07rBJWK18W1euy4cQzG6g_hu2728496663489879185.png 480w, https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/1N07rBJWK18W1euy4cQzG6g_hu5761825704734345070.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;181&#34;
		data-flex-basis=&#34;434px&#34;
	
&gt;
&lt;img src=&#34;https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/1fonLxu3PBkT7HhWfqp6jQ.png&#34;
	width=&#34;1384&#34;
	height=&#34;760&#34;
	srcset=&#34;https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/1fonLxu3PBkT7HhWfqp6jQ_hu1933363755079576700.png 480w, https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/1fonLxu3PBkT7HhWfqp6jQ_hu13564362274648033296.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;182&#34;
		data-flex-basis=&#34;437px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;After members of the channel have listened to a voicemail, they can call the person who left a voicemail back directly from the channel.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/1e9z0eSHELDBRHsHUBQeObA.png&#34;
	width=&#34;885&#34;
	height=&#34;232&#34;
	srcset=&#34;https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/1e9z0eSHELDBRHsHUBQeObA_hu2874519935006339848.png 480w, https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/1e9z0eSHELDBRHsHUBQeObA_hu7741457662367446754.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;381&#34;
		data-flex-basis=&#34;915px&#34;
	
&gt;
&lt;img src=&#34;https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/1RUyvz8rZnRkIvd09QDxug.png&#34;
	width=&#34;882&#34;
	height=&#34;230&#34;
	srcset=&#34;https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/1RUyvz8rZnRkIvd09QDxug_hu352885753578483131.png 480w, https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/1RUyvz8rZnRkIvd09QDxug_hu8273292575465076490.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;383&#34;
		data-flex-basis=&#34;920px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;updated-adaptivecards&#34;&gt;Updated Adaptive Cards
&lt;/h4&gt;&lt;p&gt;Once a team member has called back, a card can be marked as completed. This will update the card so that all other team members can see that there’s no action left to take. It’s even possible to see who has marked a card as completed.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/19JfyMJstjSP28RABrpIVQ.png&#34;
	width=&#34;1384&#34;
	height=&#34;481&#34;
	srcset=&#34;https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/19JfyMJstjSP28RABrpIVQ_hu1422730863264469117.png 480w, https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/19JfyMJstjSP28RABrpIVQ_hu2161688040932036547.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;287&#34;
		data-flex-basis=&#34;690px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Completed cards don’t show the media player anymore. However, the &lt;strong&gt;Voicemail Details&lt;/strong&gt; button will reveal the original card including the audio file again. This is helpful in case somebody needs to listen to a message again or the &lt;strong&gt;Call Completed&lt;/strong&gt; button was clicked by accident.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/1ACYALybGWJoArNe8UambPA.png&#34;
	width=&#34;1379&#34;
	height=&#34;1003&#34;
	srcset=&#34;https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/1ACYALybGWJoArNe8UambPA_hu12012160211085122908.png 480w, https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/1ACYALybGWJoArNe8UambPA_hu4945891878961499679.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;137&#34;
		data-flex-basis=&#34;329px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Users don’t really need to worry about this, but technically, the files get uploaded to the channel’s folder in the Teams’ SharePoint site.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/1Z4LN9USbrAkCKJ13EzaKA.png&#34;
	width=&#34;1468&#34;
	height=&#34;422&#34;
	srcset=&#34;https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/1Z4LN9USbrAkCKJ13EzaKA_hu10524768591447971398.png 480w, https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/1Z4LN9USbrAkCKJ13EzaKA_hu2149592211078648373.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;347&#34;
		data-flex-basis=&#34;834px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Completed cards also feature a &lt;strong&gt;Show Metrics&lt;/strong&gt; button which will tell you when a voicemail was received, when it was completed and how many hours and minutes it took until it was marked as completed. Based on that, it will display a different emoji.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/133dz2lFitMlRusIK8k3G1Q.png&#34;
	width=&#34;1385&#34;
	height=&#34;539&#34;
	srcset=&#34;https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/133dz2lFitMlRusIK8k3G1Q_hu15458806330991475184.png 480w, https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/133dz2lFitMlRusIK8k3G1Q_hu6948695240082654987.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;256&#34;
		data-flex-basis=&#34;616px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Less or equal 1 hour = 😊&lt;br&gt;
Less or equal 2 hours = 😐&lt;br&gt;
More than 2 hours = 😞&lt;/p&gt;
&lt;h4 id=&#34;voicemail-during-after-hours-oncall&#34;&gt;Voicemail During After Hours (On Call)
&lt;/h4&gt;&lt;p&gt;Voicemails which were left outside business hours will go into the &lt;strong&gt;Voicemail On Call&lt;/strong&gt; channel. When a voicemail is left during on-call hours, it means that the people who are on-call missed a call and should call back as soon as possible. Thus, we want to have an appropriate alerting system in place.&lt;/p&gt;
&lt;p&gt;I’m using a shift which is linked to my Call Queue Team which defines which user is on call on which days.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/1vfGE9YXP2x2YJx0yBEig.png&#34;
	width=&#34;2149&#34;
	height=&#34;961&#34;
	srcset=&#34;https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/1vfGE9YXP2x2YJx0yBEig_hu10642960343245584212.png 480w, https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/1vfGE9YXP2x2YJx0yBEig_hu15002541618406063103.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;223&#34;
		data-flex-basis=&#34;536px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;The great thing about using Shifts is that this will automatically create a Tag with the Shift name in the Team which is linked to the shift and update the members of the Tag dynamically. In other words, the tag always includes only the users which have a currently active shift assigned.&lt;/p&gt;
&lt;p&gt;When a new voicemail is received in the On Call channel, all members of the On Call Shift Tag will get notified about new voicemails every 15 minutes for 4 hours if a card is not completed sooner. As soon as card is completed, the notifications stop.&lt;/p&gt;
&lt;p&gt;In case of an on-call voicemail the flow will take at least 15 minutes to complete, even if the card was marked as completed sooner. This is because there’s a delay action which waits for 15 minutes before it checks again if the card has been completed.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/1IBU2Pc9lwN7E0D5TMxb1iw.png&#34;
	width=&#34;1554&#34;
	height=&#34;740&#34;
	srcset=&#34;https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/1IBU2Pc9lwN7E0D5TMxb1iw_hu5463160827794298530.png 480w, https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/1IBU2Pc9lwN7E0D5TMxb1iw_hu4029770359386110174.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;210&#34;
		data-flex-basis=&#34;504px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Because the flow is still waiting on the card to be completed in the on-call scenario, there’s no way to get the message Id of the adaptive card that was sent to the channel from a subsequent step in the flow. Instead, the flow needs to retrieve the latest message which was sent to the channel in a parallel branch.&lt;/p&gt;
&lt;p&gt;Because of that, I strongly recommend turning on channel moderation and prohibit members from posting new messages to the &lt;strong&gt;On Call Voicemail&lt;/strong&gt; channel. This way, we can make sure that the newest message in the channel is always the adaptive card which was sent by the flow and not something posted by a user.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/1vHUTKmRHNbKSXstHFfjQhQ.png&#34;
	width=&#34;1025&#34;
	height=&#34;1195&#34;
	srcset=&#34;https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/1vHUTKmRHNbKSXstHFfjQhQ_hu5937485943100323066.png 480w, https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/1vHUTKmRHNbKSXstHFfjQhQ_hu15200492561129714022.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;85&#34;
		data-flex-basis=&#34;205px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Channel members should only be allowed to reply to messages so that they can e.g. mention a team member who should carry out a call back action.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/1jbbDZa4DBMfNtFmRN7qw.png&#34;
	width=&#34;1388&#34;
	height=&#34;846&#34;
	srcset=&#34;https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/1jbbDZa4DBMfNtFmRN7qw_hu14014501432488919598.png 480w, https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/1jbbDZa4DBMfNtFmRN7qw_hu7289622198699713943.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;164&#34;
		data-flex-basis=&#34;393px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;I changed the delay action from 15 minutes to 15 seconds for demonstration purposes. Here you can see three Teams activity feed notifications which link directly to the channel message containing the voicemail. Using a Teams activity feed notification instead of a channel message reply has two main advantages. It doesn’t clutter the channel feed and members don’t need to specifically enable notifications for all channel messages to get the alerts.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/1H4mIfIX2E8FpbkR1aqUX0A.png&#34;
	width=&#34;2284&#34;
	height=&#34;961&#34;
	srcset=&#34;https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/1H4mIfIX2E8FpbkR1aqUX0A_hu11908678012870351812.png 480w, https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/1H4mIfIX2E8FpbkR1aqUX0A_hu1712600209183588314.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;237&#34;
		data-flex-basis=&#34;570px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;the-flow&#34;&gt;The Flow
&lt;/h3&gt;&lt;p&gt;The flow has become quite large and Power Automate keeps reminding me that it contains too many actions to use the new AI-powered designer. 🙃&lt;/p&gt;
&lt;p&gt;To make it easier for you, I exported the flow and made it available for download &lt;a class=&#34;link&#34; href=&#34;https://github.com/mozziemozz/TeamsPhoneAutomation/blob/main/Scripts/PowerAutomate/Flows/TeamsSharedVoicemailv2.4_GitHub.zip&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;here&lt;/a&gt;. To import it, go to &lt;a class=&#34;link&#34; href=&#34;https://make.powerautomate.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://make.powerautomate.com&lt;/a&gt; and select &lt;strong&gt;Import&lt;/strong&gt; and then &lt;strong&gt;Import Package (Legacy)&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Select an existing or set up a new connection for each of the resources listed before you click &lt;strong&gt;Import.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/1PjOBPj93JF5mUnRj9jX6g.png&#34;
	width=&#34;2095&#34;
	height=&#34;1392&#34;
	srcset=&#34;https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/1PjOBPj93JF5mUnRj9jX6g_hu16515656192914363879.png 480w, https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/1PjOBPj93JF5mUnRj9jX6g_hu9617947552083075885.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;150&#34;
		data-flex-basis=&#34;361px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Unfortunately, you still need to expand every action and check if you need to modify/update the values. To make it easier for you, I added a note to all the actions which need to be updated. Here are some examples.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/13a2N43Dn0FSyhwhumCryDw.png&#34;
	width=&#34;915&#34;
	height=&#34;351&#34;
	srcset=&#34;https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/13a2N43Dn0FSyhwhumCryDw_hu1657808557811107612.png 480w, https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/13a2N43Dn0FSyhwhumCryDw_hu11851405960407821866.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;260&#34;
		data-flex-basis=&#34;625px&#34;
	
&gt;
&lt;img src=&#34;https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/1xugazCEKqoQ8ujjNlToClQ.png&#34;
	width=&#34;1933&#34;
	height=&#34;907&#34;
	srcset=&#34;https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/1xugazCEKqoQ8ujjNlToClQ_hu3119412816953799147.png 480w, https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/1xugazCEKqoQ8ujjNlToClQ_hu1742214663190435552.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;213&#34;
		data-flex-basis=&#34;511px&#34;
	
&gt;
&lt;img src=&#34;https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/1UbT09eRnOVQ5C8w3jb8Lw.png&#34;
	width=&#34;913&#34;
	height=&#34;349&#34;
	srcset=&#34;https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/1UbT09eRnOVQ5C8w3jb8Lw_hu5307429991215446537.png 480w, https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/1UbT09eRnOVQ5C8w3jb8Lw_hu15168558474484845638.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;261&#34;
		data-flex-basis=&#34;627px&#34;
	
&gt;
&lt;img src=&#34;https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/1uFe7nY71LGjXHUfElaa1KQ.png&#34;
	width=&#34;914&#34;
	height=&#34;1033&#34;
	srcset=&#34;https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/1uFe7nY71LGjXHUfElaa1KQ_hu5465998868029572349.png 480w, https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/1uFe7nY71LGjXHUfElaa1KQ_hu3064536430309956232.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;88&#34;
		data-flex-basis=&#34;212px&#34;
	
&gt;
&lt;img src=&#34;https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/1NU84CkNj9stAoCGxHSGUw.png&#34;
	width=&#34;916&#34;
	height=&#34;218&#34;
	srcset=&#34;https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/1NU84CkNj9stAoCGxHSGUw_hu14997008649639381127.png 480w, https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/1NU84CkNj9stAoCGxHSGUw_hu12034864242468898112.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;420&#34;
		data-flex-basis=&#34;1008px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;You get the gist. At least you won’t have to create all the actions manually.&lt;/p&gt;
&lt;h3 id=&#34;summary&#34;&gt;Summary
&lt;/h3&gt;&lt;p&gt;Even though it took me days to finally get this right, I had so much fun building this. Besides that, I also learned a lot of new stuff about Power Automate. In fact, this was the very first parallel branch I ever built. It’s awesome that Adaptive Card in Teams now support media. I think this is a really great example of how powerful Adaptive Cards can be. They not only look beautiful, but they also provide a fantastic user experience since users will be able to interact with them directly in Teams.&lt;/p&gt;
&lt;p&gt;I’d be lying if I said that I wasn’t a little proud of the flow and process I built. The only thing I’m still missing with this solution is to be able to create Teams deep links which also specify which outbound caller id should be used when a call back link is clicked. Wouldn’t it just be great if we could say that users should always use the queue’s/attendant’s phone number when they call somebody back from a voicemail card?&lt;/p&gt;
&lt;p&gt;What’s funny is that the Teams mobile apps actually prompt users which have multiple calling line identities assigned to select an identity before the call is made.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/1rI1ZJKlVVJ1J6E0PPhrg.png&#34;
	width=&#34;1125&#34;
	height=&#34;2436&#34;
	srcset=&#34;https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/1rI1ZJKlVVJ1J6E0PPhrg_hu11109037850452349308.png 480w, https://heusser.pro/p/the-ultimate-teams-shared-voicemail-solution-5dd2ce57facc/1rI1ZJKlVVJ1J6E0PPhrg_hu17447961148085830847.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;46&#34;
		data-flex-basis=&#34;110px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;As you can tell, I’m pretty excited about all of this. I hope you like it too and that you can implement it for your users or customers as well.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Automatically Notify Users to Update Teams Holidays for Next Year</title>
        <link>https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/</link>
        <pubDate>Wed, 07 Sep 2022 10:19:11 +0000</pubDate>
        
        <guid>https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/</guid>
        <description>&lt;p&gt;In my last few articles, I’ve talked about building Teams Phone self-service solutions for end users. The reason one might want to do this is quite obvious: We don’t want to give users access to Teams Admin Center but as engineers, we don’t want to take on tedious tasks like updating an Auto Attendant’s Holiday list either.&lt;/p&gt;
&lt;p&gt;Even though pretty much everything that can be configured in TAC, including managing Holidays can be scripted with PowerShell, Holidays still require a fixed date and time range and can’t be renewed automatically or fetched from an external source. This results in a considerable administrative overhead for both Teams admins and end users.&lt;/p&gt;
&lt;p&gt;When I need to configure Teams Holidays, I always ask users to provide a list where each holiday is noted &lt;strong&gt;with an explicit date&lt;/strong&gt;. I’m not going to do the work for them and go look up when exactly a Holiday takes place next year. (For Holidays which don’t have a fixed date at least.) I’ve seen some lazy users try to take a shortcut and tell me to just add “all lawful Bank Holidays” of Country/State/Canton XY. Unfortunately, that’s not how it works my dear users. I’d spend hours looking up this stuff and probably still end up with some wrong dates anyway. That’s why I set out and created a better solution. /rant&lt;/p&gt;
&lt;p&gt;In this article, I’m going to show you a solution where the whole process of &lt;strong&gt;maintaining&lt;/strong&gt; a Holiday List can be outsourced to end users. Admins only need to set up Holidays &lt;strong&gt;once&lt;/strong&gt; initially.&lt;/p&gt;
&lt;h4 id=&#34;recap&#34;&gt;Recap
&lt;/h4&gt;&lt;p&gt;Before we dive in, let’s recap what I’ve published in my last articles to give you some context on Teams self-service solutions using Azure Automation and Adaptive Cards.&lt;/p&gt;
&lt;p&gt;It all began with &lt;a class=&#34;link&#34; href=&#34;https://heusser.pro/p/microsoft-teams-self-service-auto-attendants-without-premium-connectors-27e6f1281851?source=user_profile---------11----------------------------&#34; &gt;this article&lt;/a&gt; where I wrote about my take on a self-service solution which lets users manually open or close an Auto Attendant. This solution builds on the work of Microsoft MVPs which are linked in the original article.&lt;/p&gt;
&lt;p&gt;I then went on and published &lt;a class=&#34;link&#34; href=&#34;https://heusser.pro/p/microsoft-teams-self-service-call-queue-solution-part-2-ab8201157831&#34; &gt;this piece&lt;/a&gt; which uses the same principle but lets users enable or disable immediate forwarding to an external number or update the external forwarding target number on a Call Queue.&lt;/p&gt;
&lt;p&gt;We can use these examples and build on them to create something similar for Auto Attendant Holidays.&lt;/p&gt;
&lt;h4 id=&#34;how-does-itwork&#34;&gt;How Does it Work?
&lt;/h4&gt;&lt;p&gt;It’s important to understand that there needs to be an existing, initial configuration in your Tenant. This means that you as a Teams Phone admin need to sit down with the person in charge of the reception phone or whoever oversees Holidays at your company. You then need to configure either a single or multiple Holiday lists in TAC and link them to each Auto Attendant, where they’re required.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/1fQcNBnDUDxER2RrRYDd3w.png&#34;
	width=&#34;2190&#34;
	height=&#34;315&#34;
	srcset=&#34;https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/1fQcNBnDUDxER2RrRYDd3w_hu3034356793226170838.png 480w, https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/1fQcNBnDUDxER2RrRYDd3w_hu14724216378298220086.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Holiday Schedules in Teams Admin Center&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;695&#34;
		data-flex-basis=&#34;1668px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;My solution currently doesn’t have an option to allow users to add new Holidays to a list. When a new Holiday needs to be added, users must still request the change at IT. After it has been added to the list, there’s no additional work required for the new Holiday to also support user self-serviced updating.&lt;/p&gt;
&lt;p&gt;I created an Azure Runbook which runs on a schedule. I suppose running it weekly will suffice. If you wish, you can even run it daily. The script checks if the difference between the &lt;strong&gt;run time of the Job&lt;/strong&gt; and the &lt;strong&gt;end date&lt;/strong&gt; of a Holiday is bigger than 24 hours. This is because Holiday dates/lists itself don’t have a time zone property. But Auto Attendants do have a time zone setting, thus, we need to make sure that a Holiday is not updated/deleted before the Holiday would end in an Attendant specific time zone. A buffer of 24 hours should work well considering that the largest UTC offset is +14 hours.&lt;/p&gt;
&lt;p&gt;When the script runs, it will send a Teams Message Card to a Channel for each Holiday which now lies in the past. (Even though they are technically &lt;a class=&#34;link&#34; href=&#34;https://docs.microsoft.com/en-us/outlook/actionable-messages/message-card-reference&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Legacy Actionable Message Cards&lt;/a&gt; I will just refer to them as &lt;a class=&#34;link&#34; href=&#34;https://adaptivecards.io/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Adaptive Cards&lt;/a&gt; from now on.)&lt;/p&gt;
&lt;p&gt;Members of the channel will be able to see the dates, the name of the Holiday schedule as well as all linked Auto Attendants on the Adaptive Card. Furthermore, the script will add one year to the current dates and pre-fill the dates of next year as a suggested value in the date picker.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/1QKq3e17FCDqQEvn5hbJzfg.png&#34;
	width=&#34;1489&#34;
	height=&#34;745&#34;
	srcset=&#34;https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/1QKq3e17FCDqQEvn5hbJzfg_hu11674743888103282197.png 480w, https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/1QKq3e17FCDqQEvn5hbJzfg_hu11861829260789832165.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;en-US date format&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;199&#34;
		data-flex-basis=&#34;479px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Because we’re using Adaptive Cards, the date format will automatically adjust to the Teams Clients display language. In this example, the Teams Client was set to German (Switzerland).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/15exIWj45WBr92GT2Jut6UQ.png&#34;
	width=&#34;1478&#34;
	height=&#34;737&#34;
	srcset=&#34;https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/15exIWj45WBr92GT2Jut6UQ_hu13717092920608122669.png 480w, https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/15exIWj45WBr92GT2Jut6UQ_hu15475968410738808022.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;de-CH date format&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;200&#34;
		data-flex-basis=&#34;481px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Members can then review and accept the new dates or change them in case a Holiday falls on a different day next year.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/1AcxduYIh3KWZjYOITozFQ.png&#34;
	width=&#34;1485&#34;
	height=&#34;794&#34;
	srcset=&#34;https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/1AcxduYIh3KWZjYOITozFQ_hu4677433707772385773.png 480w, https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/1AcxduYIh3KWZjYOITozFQ_hu266510165975810734.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Adaptive Card date picker&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;187&#34;
		data-flex-basis=&#34;448px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;If needed, they can also configure a start or end time, if for example, a Holiday only starts at noon.&lt;/p&gt;
&lt;p&gt;Finally, they will need to select their local time zone. This is due to the fact that the Adaptive Card will submit the date and time based on the time zone which is configured on the local PC where Teams is running.&lt;/p&gt;
&lt;p&gt;In early testing stages of this solution, “00:00” was always passed to the Azure Function as “23:00” because I live in UTC-1. Without this information the Function wouldn’t be able to do its magic and convert it back to the correct date.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/1h3iWOIBo7n33yhjeAHKNow.png&#34;
	width=&#34;1397&#34;
	height=&#34;420&#34;
	srcset=&#34;https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/1h3iWOIBo7n33yhjeAHKNow_hu6571618173843459272.png 480w, https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/1h3iWOIBo7n33yhjeAHKNow_hu3859008471761273829.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Adaptive Card drop-down list&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;332&#34;
		data-flex-basis=&#34;798px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;I’ve included all time zones which are supported on Windows Systems.&lt;/p&gt;
&lt;p&gt;Now all a user needs to do is to click “Submit New Dates”. This will pass all the information to an Azure Function, Update the card, and fire up the Runbook.&lt;/p&gt;
&lt;p&gt;In other words, users won’t need to bother you to update their Holidays anymore. After each time a Holiday has passed, they will get a card which allows them to update it for next year by themselves.&lt;/p&gt;
&lt;h4 id=&#34;prerequisites&#34;&gt;Prerequisites
&lt;/h4&gt;&lt;p&gt;Just as with my previous articles you need to have the following things ready in Azure.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;An Azure Function App so that we can create a new Function&lt;/li&gt;
&lt;li&gt;An Azure Automation Account so we can create 2x new Runbooks&lt;/li&gt;
&lt;li&gt;Azure Automation Credentials with Teams Administrator Permissions&lt;/li&gt;
&lt;li&gt;An Incoming Teams Webhook&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you struggle to set up any of these, I recommend reading my &lt;a class=&#34;link&#34; href=&#34;https://heusser.pro/p/microsoft-teams-self-service-auto-attendants-without-premium-connectors-27e6f1281851&#34; &gt;first article&lt;/a&gt; about this topic. I also suggest creating a dedicated Teams Channel where the webhook will be added. More on that later.&lt;/p&gt;
&lt;h4 id=&#34;azure-runbook-checkholidayschedules&#34;&gt;Azure Runbook: CheckHolidaySchedules
&lt;/h4&gt;&lt;p&gt;Let’s create the first Runbook. This will be the one which logs into Teams PowerShell and checks if there are any Holidays which already lie in the past compared to the time of the Runbook Job.&lt;/p&gt;
&lt;p&gt;Enter your &lt;code&gt;$teamsWebhookUrl&lt;/code&gt; on line 2. If you like, you can change the &lt;code&gt;$defaultLocalTimeZone&lt;/code&gt; on line 3 to the time zone where most of your users are located. Make sure you also adjust the name of your Credential if yours has a different name.&lt;/p&gt;
&lt;p&gt;Leave the &lt;code&gt;$functionUrl&lt;/code&gt; empty for now since we don’t have that one yet.&lt;/p&gt;
&lt;script src=&#34;https://gist.github.com/mozziemozz/76a5f782a129ff06c6093158f1b81004.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;Save and publish the Runbook. Don’t forget to add a schedule to the Runbook. If you need a reminder on how to do that, please see &lt;a class=&#34;link&#34; href=&#34;https://heusser.pro/p/automatically-enable-overflow-action-on-call-queues-if-no-agents-are-opted-in-f1c9bea7cb87&#34; &gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h4 id=&#34;azure-runbook-updateholidayschedules&#34;&gt;Azure Runbook: UpdateHolidaySchedules
&lt;/h4&gt;&lt;p&gt;This Runbook will receive all the information a user has entered on the Adaptive Card. Because we also want to update the card, but Runbooks don’t support that, we will pass all the information from the card to the Function first. This includes the old date time range (so the script knows which one needs to be replaced), the newly entered dates and the time zone of the user.&lt;/p&gt;
&lt;p&gt;The Function will then pass the data to the Runbook. Because the script now has both the old and new dates, it will be able to remove the old values and add the new ones to the Holiday schedule.&lt;/p&gt;
&lt;p&gt;Paste your Teams Webhook URL on line 7 before you save.&lt;/p&gt;
&lt;script src=&#34;https://gist.github.com/mozziemozz/d871770b0f9c477d765f5ff2f391c03e.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;To be able to call this Runbook from the Function, we’ll need to add a Webhook trigger to it as it’s described &lt;a class=&#34;link&#34; href=&#34;https://www.bing.com/search?q=azure&amp;#43;runbook&amp;#43;webhook&amp;#43;docs&amp;amp;form=ANNTH1&amp;amp;refig=f6e9976ff1de4f9baa308faa7c1bbdd2&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;here&lt;/a&gt;. Before you click Create, copy its URL.&lt;/p&gt;
&lt;h4 id=&#34;azure-function-updatecardandtriggerrunbook&#34;&gt;Azure Function: UpdateCardAndTriggerRunbook
&lt;/h4&gt;&lt;p&gt;Now we can create the Function. Set &lt;code&gt;$runBookUrl&lt;/code&gt; to the Runbook’s webhook URL on line 6 and save the Function.&lt;/p&gt;
&lt;script src=&#34;https://gist.github.com/mozziemozz/01ab601212a7bb42dc5b8257f91b8f30.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;For the last step, we need to copy the URL of the Function and go back to our first Runbook “CheckHolidaySchedules”.&lt;/p&gt;
&lt;h4 id=&#34;runbook-checkholidayschedules-again&#34;&gt;Runbook CheckHolidaySchedules (Again)
&lt;/h4&gt;&lt;p&gt;Edit the Runbook and set the &lt;code&gt;$functionUrl&lt;/code&gt; variable to the copied Function URL on line 1. Save and Publish the Runbook again.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/1GR5EyFfJfYB6i4K3scmjeg.png&#34;
	width=&#34;1055&#34;
	height=&#34;42&#34;
	srcset=&#34;https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/1GR5EyFfJfYB6i4K3scmjeg_hu5641259114092207642.png 480w, https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/1GR5EyFfJfYB6i4K3scmjeg_hu4961657240343386721.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;2511&#34;
		data-flex-basis=&#34;6028px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;test-drive&#34;&gt;Test Drive
&lt;/h4&gt;&lt;p&gt;During normal operation, we would need to wait for a Holiday to be over before anything happens. In our case, we can test by manually starting the Runbook.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/1H9UkxAEL3jrTfviZvVSgg.png&#34;
	width=&#34;1520&#34;
	height=&#34;235&#34;
	srcset=&#34;https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/1H9UkxAEL3jrTfviZvVSgg_hu16981988639064353800.png 480w, https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/1H9UkxAEL3jrTfviZvVSgg_hu13284528033247977450.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Start the Runbook to test&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;646&#34;
		data-flex-basis=&#34;1552px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;After a few seconds, we should start seeing some new Adaptive Cards in our channel. Keep in mind that triggering the Runbook for the first time will post a card for each Holiday which has already passed. We can also see which Auto Attendants are affected on the card.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/1AYdQc3exHJ9FyyXQiVqSA.png&#34;
	width=&#34;1480&#34;
	height=&#34;746&#34;
	srcset=&#34;https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/1AYdQc3exHJ9FyyXQiVqSA_hu11838043791191278464.png 480w, https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/1AYdQc3exHJ9FyyXQiVqSA_hu9969006082296334711.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Adaptive Card sent by the Runbook&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;198&#34;
		data-flex-basis=&#34;476px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;After new dates have been submitted by a user, the Function will update the card.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/19gmVaYLQTt48rRlAxtOv3g.png&#34;
	width=&#34;1478&#34;
	height=&#34;239&#34;
	srcset=&#34;https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/19gmVaYLQTt48rRlAxtOv3g_hu14086379905075071568.png 480w, https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/19gmVaYLQTt48rRlAxtOv3g_hu11756378478327737448.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Adaptive Card after it has been updated by the Function&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;618&#34;
		data-flex-basis=&#34;1484px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;As soon as the Runbook has finished, it will post another card to the channel to confirm that the Holiday has been renewed for next year. For review purposes both the old and new dates are included. If anybody made a mistake, they could still contact IT to manually fix the dates.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/1DTMQw26Duejt40miV2ig.png&#34;
	width=&#34;1482&#34;
	height=&#34;304&#34;
	srcset=&#34;https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/1DTMQw26Duejt40miV2ig_hu14196355385711350306.png 480w, https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/1DTMQw26Duejt40miV2ig_hu9134204769880532954.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Adaptive Card confirmation sent by the second Runbook&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;487&#34;
		data-flex-basis=&#34;1170px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;If we switch to the Holiday list in TAC, we can see that the Runbook added the new Holiday and removed the old one.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/11Wx5wc7HVIBSgXum5COQLA.png&#34;
	width=&#34;1290&#34;
	height=&#34;866&#34;
	srcset=&#34;https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/11Wx5wc7HVIBSgXum5COQLA_hu5523670643061680018.png 480w, https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/11Wx5wc7HVIBSgXum5COQLA_hu4628957092880871972.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;01. September 2023 has been added at the end of the list by the Runbook&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;148&#34;
		data-flex-basis=&#34;357px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;conclusion&#34;&gt;Conclusion
&lt;/h4&gt;&lt;p&gt;Out of all the Teams self-service automation solutions I already did, I think that this is actually the coolest one. Not only does it provide a great user experience because everything can be done from within Teams, but it also makes sure nobody forgets to update the company’s Holiday list. No more last-minute support tickets just before you were about to leave for the Christmas break.&lt;/p&gt;
&lt;p&gt;And the best part is that we don’t need to grant any kind of admin permission. The only thing we need to make sure is that only the people who are allowed to update the Holidays have access to the Teams Channel.&lt;/p&gt;
&lt;p&gt;The whole point of using a script to automatically notify us when a Holiday has passed instead of using the &lt;strong&gt;request a change on-demand approach&lt;/strong&gt; like with the other two self-service examples is that nobody forgets about updating the Holidays. To make sure that users don’t miss the Adaptive Cards in Teams, I suggest using a dedicated channel and having them turn on notifications for all activity on said channel.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/1VTj3UiR6hEnLHyOiYbAUQ.png&#34;
	width=&#34;1186&#34;
	height=&#34;398&#34;
	srcset=&#34;https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/1VTj3UiR6hEnLHyOiYbAUQ_hu8158064788678457607.png 480w, https://heusser.pro/p/automatically-notify-users-to-update-teams-holidays-for-next-year-cb1f6f9c6471/1VTj3UiR6hEnLHyOiYbAUQ_hu17649757732134002554.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Channel notification Settings in Teams&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;297&#34;
		data-flex-basis=&#34;715px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;By using a dedicated channel for Holiday self-service, we don’t need to force users to turn on all notifications for channels which might have much more activity/trigger too many notifications.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Microsoft Teams: Handle Shared Voicemail More Efficiently</title>
        <link>https://heusser.pro/p/microsoft-teams-handle-shared-voicemail-more-efficiently-746ddeae6ac4/</link>
        <pubDate>Sun, 05 Jun 2022 21:06:42 +0000</pubDate>
        
        <guid>https://heusser.pro/p/microsoft-teams-handle-shared-voicemail-more-efficiently-746ddeae6ac4/</guid>
        <description>&lt;p&gt;In this &lt;a class=&#34;link&#34; href=&#34;https://heusser.pro/p/everything-you-ever-wanted-to-know-about-microsoft-teams-phone-and-shared-voicemail-4df01cb28e24&#34; &gt;article&lt;/a&gt;, I did a pretty hefty run down of all things shared voicemail in Microsoft Teams. I also teased another article about creating a Power Automate Flow to deliver shared voicemails into a Teams channel instead of receiving them just by email. …which brings us to this article.&lt;/p&gt;
&lt;p&gt;The idea behind all that is, that shared voicemails get posted as an adaptive card in a Teams channel, rather than that a few individuals receive shared voicemails by email.&lt;/p&gt;
&lt;h4 id=&#34;preparations&#34;&gt;Preparations
&lt;/h4&gt;&lt;p&gt;First, we need to identify or create a Microsoft 365 Group which will be configured as shared voicemail target on an auto attendant or a call queue. Next, we’ll need to enable the follow in inbox feature for this group and add a shared mailbox of choice to this M365 Group. (If you need help with this, please check the linked article at the beginning of this story.)&lt;/p&gt;
&lt;h4 id=&#34;building-theflow&#34;&gt;Building the Flow
&lt;/h4&gt;&lt;p&gt;Then we can start building our flow. Choose “When a new email arrives in a shared mailbox (V2)” (Office 365 Outlook) as your trigger and select the mailbox and its folder. (If this shared mailbox also receives other messages, you might want to include a subject filter under advanced options.)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/microsoft-teams-handle-shared-voicemail-more-efficiently-746ddeae6ac4/1TjJaftuwTADjGZhNQJHsEg.png&#34;
	width=&#34;919&#34;
	height=&#34;295&#34;
	srcset=&#34;https://heusser.pro/p/microsoft-teams-handle-shared-voicemail-more-efficiently-746ddeae6ac4/1TjJaftuwTADjGZhNQJHsEg_hu11498010014334603720.png 480w, https://heusser.pro/p/microsoft-teams-handle-shared-voicemail-more-efficiently-746ddeae6ac4/1TjJaftuwTADjGZhNQJHsEg_hu17278700087240363418.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;311&#34;
		data-flex-basis=&#34;747px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Next, we’ll need to initialize some variables.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/microsoft-teams-handle-shared-voicemail-more-efficiently-746ddeae6ac4/1Mo4Px5HSucy8Q7gniM9KVg.png&#34;
	width=&#34;912&#34;
	height=&#34;285&#34;
	srcset=&#34;https://heusser.pro/p/microsoft-teams-handle-shared-voicemail-more-efficiently-746ddeae6ac4/1Mo4Px5HSucy8Q7gniM9KVg_hu12103196523936936177.png 480w, https://heusser.pro/p/microsoft-teams-handle-shared-voicemail-more-efficiently-746ddeae6ac4/1Mo4Px5HSucy8Q7gniM9KVg_hu12179697413673838041.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;320&#34;
		data-flex-basis=&#34;768px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;The value of this variable is the phone number which left the voicemail. We can get the number by splitting the from address at the “@” character and selecting the first value of the splitted string. This is done with the following expression.&lt;/p&gt;
&lt;p&gt;split(triggerOutputs()?[&amp;lsquo;body/from&amp;rsquo;], &amp;lsquo;@&amp;rsquo;)[0]&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/microsoft-teams-handle-shared-voicemail-more-efficiently-746ddeae6ac4/1N9QkMCcHSanum0L4lJkrA.png&#34;
	width=&#34;916&#34;
	height=&#34;283&#34;
	srcset=&#34;https://heusser.pro/p/microsoft-teams-handle-shared-voicemail-more-efficiently-746ddeae6ac4/1N9QkMCcHSanum0L4lJkrA_hu11712586045009292280.png 480w, https://heusser.pro/p/microsoft-teams-handle-shared-voicemail-more-efficiently-746ddeae6ac4/1N9QkMCcHSanum0L4lJkrA_hu3939707186250032632.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;323&#34;
		data-flex-basis=&#34;776px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;To avoid duplicate files, we will create a time stamp with this expression. (Adjust the name of the time zone to your own time zone. If you’re not sure how your time zone is called, just run “Get-TimeZone” in PowerShell and copy it’s Id.)&lt;/p&gt;
&lt;p&gt;convertTimeZone(utcNow(),&amp;lsquo;UTC&amp;rsquo;,&amp;lsquo;W. Europe Standard Time&amp;rsquo;, &amp;lsquo;yyyy-MM-dd HH:mm:ss&amp;rsquo;)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/microsoft-teams-handle-shared-voicemail-more-efficiently-746ddeae6ac4/1wAZc48VRkLgFAsVeJyrQ.png&#34;
	width=&#34;915&#34;
	height=&#34;285&#34;
	srcset=&#34;https://heusser.pro/p/microsoft-teams-handle-shared-voicemail-more-efficiently-746ddeae6ac4/1wAZc48VRkLgFAsVeJyrQ_hu5049373067404564692.png 480w, https://heusser.pro/p/microsoft-teams-handle-shared-voicemail-more-efficiently-746ddeae6ac4/1wAZc48VRkLgFAsVeJyrQ_hu6497115018323546124.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;321&#34;
		data-flex-basis=&#34;770px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;And in the end, we will convert the “+” sign into an URL friendly format with this expression.&lt;/p&gt;
&lt;p&gt;replace(variables(&amp;lsquo;FromNumber&amp;rsquo;), &amp;lsquo;+&amp;rsquo;, &amp;lsquo;%2b&amp;rsquo;)&lt;/p&gt;
&lt;p&gt;Now we have all the variables which we need. Choose “Get Attachment (V2)” (Outlook Office 365) as your next action. This will automatically add an “Apply to each” loop for this action. Let’s fill in the dynamic content of the trigger output such as “Message Id” and “Attachment Id”. To be sure that only voicemails are uploaded to SharePoint, I’ve added a condition which checks if the attachments filename ends with *.mp3.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/microsoft-teams-handle-shared-voicemail-more-efficiently-746ddeae6ac4/10Wa7BKJuUsYsSm3vdMTuw.png&#34;
	width=&#34;1973&#34;
	height=&#34;807&#34;
	srcset=&#34;https://heusser.pro/p/microsoft-teams-handle-shared-voicemail-more-efficiently-746ddeae6ac4/10Wa7BKJuUsYsSm3vdMTuw_hu6899760532551412851.png 480w, https://heusser.pro/p/microsoft-teams-handle-shared-voicemail-more-efficiently-746ddeae6ac4/10Wa7BKJuUsYsSm3vdMTuw_hu5755714650185974796.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;244&#34;
		data-flex-basis=&#34;586px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;If it does, we’ll save the file to SharePoint. If it doesn’t, we won’t do any further processing and the flow ends there. Notice how we’ll use the previously initialized variables to construct a unique filename consisting of the received date and the caller’s number. Once the file has been saved, we’ll create a share link to later access the file.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/microsoft-teams-handle-shared-voicemail-more-efficiently-746ddeae6ac4/1PtvopHOOHj77EW7S0wh1Q.png&#34;
	width=&#34;972&#34;
	height=&#34;962&#34;
	srcset=&#34;https://heusser.pro/p/microsoft-teams-handle-shared-voicemail-more-efficiently-746ddeae6ac4/1PtvopHOOHj77EW7S0wh1Q_hu216914765717667602.png 480w, https://heusser.pro/p/microsoft-teams-handle-shared-voicemail-more-efficiently-746ddeae6ac4/1PtvopHOOHj77EW7S0wh1Q_hu3197001903234287653.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;101&#34;
		data-flex-basis=&#34;242px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;All that’s left to do now is to post an adaptive card to a channel and wait for a reply.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/microsoft-teams-handle-shared-voicemail-more-efficiently-746ddeae6ac4/1L1N5uzLNZkz9j00cjuldLg.png&#34;
	width=&#34;832&#34;
	height=&#34;1790&#34;
	srcset=&#34;https://heusser.pro/p/microsoft-teams-handle-shared-voicemail-more-efficiently-746ddeae6ac4/1L1N5uzLNZkz9j00cjuldLg_hu4294098630919036970.png 480w, https://heusser.pro/p/microsoft-teams-handle-shared-voicemail-more-efficiently-746ddeae6ac4/1L1N5uzLNZkz9j00cjuldLg_hu17421349481040579635.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;46&#34;
		data-flex-basis=&#34;111px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Paste the following JSON object into your flow and replace the variables with your own names if needed.&lt;/p&gt;
&lt;p&gt;{&lt;br&gt;
&amp;ldquo;$schema&amp;rdquo;: &amp;ldquo;&lt;a class=&#34;link&#34; href=&#34;http://adaptivecards.io/schemas/adaptive-card.json&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://adaptivecards.io/schemas/adaptive-card.json&lt;/a&gt;&amp;rdquo;,&lt;br&gt;
&amp;ldquo;type&amp;rdquo;: &amp;ldquo;AdaptiveCard&amp;rdquo;,&lt;br&gt;
&amp;ldquo;version&amp;rdquo;: &amp;ldquo;1.3&amp;rdquo;,&lt;br&gt;
&amp;ldquo;body&amp;rdquo;: [&lt;br&gt;
{&lt;br&gt;
&amp;ldquo;type&amp;rdquo;: &amp;ldquo;TextBlock&amp;rdquo;,&lt;br&gt;
&amp;ldquo;text&amp;rdquo;: &amp;ldquo;@{triggerOutputs()?[&amp;lsquo;body/subject&amp;rsquo;]}&amp;rdquo;,&lt;br&gt;
&amp;ldquo;size&amp;rdquo;: &amp;ldquo;Large&amp;rdquo;&lt;br&gt;
},&lt;br&gt;
{&lt;br&gt;
&amp;ldquo;type&amp;rdquo;: &amp;ldquo;TextBlock&amp;rdquo;,&lt;br&gt;
&amp;ldquo;text&amp;rdquo;: &amp;ldquo;New Voicemail from @{variables(&amp;lsquo;FromNumber&amp;rsquo;)}&amp;rdquo;&lt;br&gt;
},&lt;br&gt;
{&lt;br&gt;
&amp;ldquo;type&amp;rdquo;: &amp;ldquo;ActionSet&amp;rdquo;,&lt;br&gt;
&amp;ldquo;actions&amp;rdquo;: [&lt;br&gt;
{&lt;br&gt;
&amp;ldquo;type&amp;rdquo;: &amp;ldquo;Action.OpenUrl&amp;rdquo;,&lt;br&gt;
&amp;ldquo;title&amp;rdquo;: &amp;ldquo;Listen to Voicemail Message&amp;rdquo;,&lt;br&gt;
&amp;ldquo;url&amp;rdquo;: &amp;ldquo;@{outputs(&amp;lsquo;Create_sharing_link_for_a_file_or_folder&amp;rsquo;)?[&amp;lsquo;body/link/webUrl&amp;rsquo;]}&amp;rdquo;&lt;br&gt;
}&lt;br&gt;
]&lt;br&gt;
},&lt;br&gt;
{&lt;br&gt;
&amp;ldquo;type&amp;rdquo;: &amp;ldquo;ActionSet&amp;rdquo;,&lt;br&gt;
&amp;ldquo;actions&amp;rdquo;: [&lt;br&gt;
{&lt;br&gt;
&amp;ldquo;type&amp;rdquo;: &amp;ldquo;Action.OpenUrl&amp;rdquo;,&lt;br&gt;
&amp;ldquo;title&amp;rdquo;: &amp;ldquo;@{variables(&amp;lsquo;FromNumber&amp;rsquo;)} Call Back&amp;rdquo;,&lt;br&gt;
&amp;ldquo;url&amp;rdquo;: &amp;ldquo;&lt;a class=&#34;link&#34; href=&#34;https://teams.microsoft.com/l/call/0/0?users=4:@%7Bvariables%28%27CallBackNumber%27%29%7D&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://teams.microsoft.com/l/call/0/0?users=4:@{variables(&amp;lsquo;CallBackNumber&amp;rsquo;)}&lt;/a&gt;&amp;rdquo;&lt;br&gt;
},&lt;br&gt;
{&lt;br&gt;
&amp;ldquo;type&amp;rdquo;: &amp;ldquo;Action.Submit&amp;rdquo;,&lt;br&gt;
&amp;ldquo;title&amp;rdquo;: &amp;ldquo;Call Completed&amp;rdquo;,&lt;br&gt;
&amp;ldquo;style&amp;rdquo;: &amp;ldquo;positive&amp;rdquo;&lt;br&gt;
}&lt;br&gt;
]&lt;br&gt;
}&lt;br&gt;
]&lt;br&gt;
}&lt;/p&gt;
&lt;h3 id=&#34;the-result&#34;&gt;The Result
&lt;/h3&gt;&lt;p&gt;Let’s see how this looks from a user&amp;rsquo;s perspective. Whenever a new shared voicemail is received in the shared mailbox, the Flow will be triggered and sends an adaptive card into the channel.&lt;/p&gt;
&lt;p&gt;All Team members will know that a new voicemail has been received and they can listen to it by clicking the button.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/microsoft-teams-handle-shared-voicemail-more-efficiently-746ddeae6ac4/1OSUU8Q1gnJGs2jVqNeag.png&#34;
	width=&#34;1233&#34;
	height=&#34;396&#34;
	srcset=&#34;https://heusser.pro/p/microsoft-teams-handle-shared-voicemail-more-efficiently-746ddeae6ac4/1OSUU8Q1gnJGs2jVqNeag_hu166847154440334082.png 480w, https://heusser.pro/p/microsoft-teams-handle-shared-voicemail-more-efficiently-746ddeae6ac4/1OSUU8Q1gnJGs2jVqNeag_hu6514374341251866140.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;311&#34;
		data-flex-basis=&#34;747px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;This will open the SharePoint link and the media can be played back in the browser.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/microsoft-teams-handle-shared-voicemail-more-efficiently-746ddeae6ac4/1fLv1Wx2j4fnsIjFXgGimg.png&#34;
	width=&#34;1896&#34;
	height=&#34;1020&#34;
	srcset=&#34;https://heusser.pro/p/microsoft-teams-handle-shared-voicemail-more-efficiently-746ddeae6ac4/1fLv1Wx2j4fnsIjFXgGimg_hu10646922207206201746.png 480w, https://heusser.pro/p/microsoft-teams-handle-shared-voicemail-more-efficiently-746ddeae6ac4/1fLv1Wx2j4fnsIjFXgGimg_hu13223624521137667189.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;185&#34;
		data-flex-basis=&#34;446px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Unfortunately, playing back media on adaptive cards is not yet supported in Teams.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/microsoft-teams-handle-shared-voicemail-more-efficiently-746ddeae6ac4/1hAWYMhyLYhbgz8eG7K5gg.png&#34;
	width=&#34;1240&#34;
	height=&#34;241&#34;
	srcset=&#34;https://heusser.pro/p/microsoft-teams-handle-shared-voicemail-more-efficiently-746ddeae6ac4/1hAWYMhyLYhbgz8eG7K5gg_hu4380780706159104824.png 480w, https://heusser.pro/p/microsoft-teams-handle-shared-voicemail-more-efficiently-746ddeae6ac4/1hAWYMhyLYhbgz8eG7K5gg_hu4071443795981480362.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;514&#34;
		data-flex-basis=&#34;1234px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Because we’ve inserted a &lt;a class=&#34;link&#34; href=&#34;https://heusser.pro/p/creating-microsoft-teams-calling-deep-links-f7c9d62eacdd&#34; &gt;calling deep link&lt;/a&gt; on the adaptive card, users will also be able to initiate a call directly from the card.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/microsoft-teams-handle-shared-voicemail-more-efficiently-746ddeae6ac4/1SkEKX8jDzDm0ToFqlAA.png&#34;
	width=&#34;889&#34;
	height=&#34;228&#34;
	srcset=&#34;https://heusser.pro/p/microsoft-teams-handle-shared-voicemail-more-efficiently-746ddeae6ac4/1SkEKX8jDzDm0ToFqlAA_hu7866697553645383011.png 480w, https://heusser.pro/p/microsoft-teams-handle-shared-voicemail-more-efficiently-746ddeae6ac4/1SkEKX8jDzDm0ToFqlAA_hu15134611314274284034.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;389&#34;
		data-flex-basis=&#34;935px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;And finally, once the customer has been called back the adaptive card can be completed by clicking the “Call Completed” button. This will refresh the card and let all other channel members know, that there is no action needed from their side anymore. They will also be able to see, who completed the card.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/microsoft-teams-handle-shared-voicemail-more-efficiently-746ddeae6ac4/1SBzl3BpHLvjijG1rcX5MA.png&#34;
	width=&#34;1228&#34;
	height=&#34;289&#34;
	srcset=&#34;https://heusser.pro/p/microsoft-teams-handle-shared-voicemail-more-efficiently-746ddeae6ac4/1SBzl3BpHLvjijG1rcX5MA_hu6639743601489609687.png 480w, https://heusser.pro/p/microsoft-teams-handle-shared-voicemail-more-efficiently-746ddeae6ac4/1SBzl3BpHLvjijG1rcX5MA_hu11633006669754039099.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;424&#34;
		data-flex-basis=&#34;1019px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;I really hope that media cards will soon be supported to provide an even better user experience in Teams.&lt;/p&gt;
&lt;p&gt;As always, I hope that you liked my article and that it helps you too, deliver a better user experience.&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
