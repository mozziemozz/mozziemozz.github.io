<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Microsoft Lists on HEUSSER.PRO</title>
        <link>https://heusser.pro/categories/microsoft-lists/</link>
        <description>Recent content in Microsoft Lists on HEUSSER.PRO</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Thu, 16 Nov 2023 10:30:16 +0000</lastBuildDate><atom:link href="https://heusser.pro/categories/microsoft-lists/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Teams Phone Number Management List Part 3</title>
        <link>https://heusser.pro/p/teams-phone-number-management-list-part-3-e083a320004d/</link>
        <pubDate>Thu, 16 Nov 2023 10:30:16 +0000</pubDate>
        
        <guid>https://heusser.pro/p/teams-phone-number-management-list-part-3-e083a320004d/</guid>
        <description>&lt;p&gt;I think it’s safe to say by now that this project has been a success. I’ve received lots of positive feedback about this from the community.&lt;/p&gt;
&lt;p&gt;That didn’t stop me from going even further and adding more features to this project though.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-3-e083a320004d/1VrXnQeg6wj3KJYetSCXQ.png&#34;
	width=&#34;1080&#34;
	height=&#34;1080&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-3-e083a320004d/1VrXnQeg6wj3KJYetSCXQ_hu15391435472830586831.png 480w, https://heusser.pro/p/teams-phone-number-management-list-part-3-e083a320004d/1VrXnQeg6wj3KJYetSCXQ_hu2910287685222638508.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;100&#34;
		data-flex-basis=&#34;240px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;new-features-and-improvements&#34;&gt;New Features and Improvements
&lt;/h3&gt;&lt;h4 id=&#34;localized--formatted-phonenumbers&#34;&gt;Localized / Formatted Phone Numbers
&lt;/h4&gt;&lt;p&gt;As you may know by now, I consider myself a data driven guy. What I really dig about Teams phone is the fact that every number is a full E.164 number in every case. This kind of absoluteness provides great safety because each number is unique. Just as with user principal names or GUIDs, there’s no funny business going on.&lt;/p&gt;
&lt;p&gt;That safety comes at the cost of readability though. If you’ve seen &lt;a class=&#34;link&#34; href=&#34;https://heusser.pro/p/prettify-and-sync-teams-phone-numbers-to-azure-ad-e973755f83d5&#34; &gt;this&lt;/a&gt; article before, then you already know that I came up with a solution to format phone numbers in their local format using Python.&lt;/p&gt;
&lt;p&gt;The runbook logic powering the list can now also leverage Python to store the formatted phone number in an additional column. This way you always have both, the E.164 number and a prettified version of it readily available.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-3-e083a320004d/1eH5p9VVDZ9zlnSfb0G9A.png&#34;
	width=&#34;999&#34;
	height=&#34;488&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-3-e083a320004d/1eH5p9VVDZ9zlnSfb0G9A_hu6944497114070764761.png 480w, https://heusser.pro/p/teams-phone-number-management-list-part-3-e083a320004d/1eH5p9VVDZ9zlnSfb0G9A_hu5717480910457783310.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;204&#34;
		data-flex-basis=&#34;491px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;For US numbers or numbers from other countries such as Japan or Israel which typically use hyphens, you might have noticed that I’m removing the hyphens, even though they’re included after a number has been formatted using the phonenumbers library. I do this so that every number in the list contains only digits and a plus sign. Also, it’s how Teams Admin Center displays the numbers.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-3-e083a320004d/1eq5k3nw1Nd6nFTUTjoxFQ.png&#34;
	width=&#34;1670&#34;
	height=&#34;123&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-3-e083a320004d/1eq5k3nw1Nd6nFTUTjoxFQ_hu8095567165187883605.png 480w, https://heusser.pro/p/teams-phone-number-management-list-part-3-e083a320004d/1eq5k3nw1Nd6nFTUTjoxFQ_hu10053253125639431864.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;1357&#34;
		data-flex-basis=&#34;3258px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;write-back-teams-phone-number-to-entraid&#34;&gt;Write back Teams Phone Number to Entra ID
&lt;/h4&gt;&lt;p&gt;When you view a user’s profile card in Teams, Outlook or anywhere else in Microsoft 365, it doesn’t display the phone number which is actually configured as &lt;strong&gt;LineURI&lt;/strong&gt; in Teams. Instead, the information is taken from Entra ID. I’ve created a variable inside the runbook which controls if the &lt;strong&gt;BusinessPhones&lt;/strong&gt; property of Entra ID users should be set to the assigned &lt;strong&gt;LineUri&lt;/strong&gt; in Teams. I’ll explain how to turn this &lt;strong&gt;on&lt;/strong&gt; or &lt;strong&gt;off&lt;/strong&gt; later in this article.&lt;/p&gt;
&lt;p&gt;With the current permissions/scopes assigned to the Entra ID App registration, this only works for users which don’t have any administrator roles assigned in Entra ID. If a user has an admin role, you’ll get an error.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-3-e083a320004d/1raGaYRAkmtuYw6eis0Y9A.png&#34;
	width=&#34;1677&#34;
	height=&#34;150&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-3-e083a320004d/1raGaYRAkmtuYw6eis0Y9A_hu14765399417767820350.png 480w, https://heusser.pro/p/teams-phone-number-management-list-part-3-e083a320004d/1raGaYRAkmtuYw6eis0Y9A_hu4177961942947920340.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;1118&#34;
		data-flex-basis=&#34;2683px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;previous-usercolumn&#34;&gt;Previous User Column
&lt;/h4&gt;&lt;p&gt;I’ve added a new column which shows the UPN of the previous user/owner of a number after it has been removed. This is achieved by an update I made to the Power Automate Flow. Note that the flow will now also retain the value of the &lt;strong&gt;Comment&lt;/strong&gt; column.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-3-e083a320004d/1BEWqNsDCKrY0BOBbMc9tkg.png&#34;
	width=&#34;1455&#34;
	height=&#34;255&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-3-e083a320004d/1BEWqNsDCKrY0BOBbMc9tkg_hu13043195248097712316.png 480w, https://heusser.pro/p/teams-phone-number-management-list-part-3-e083a320004d/1BEWqNsDCKrY0BOBbMc9tkg_hu13545381555857351609.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;570&#34;
		data-flex-basis=&#34;1369px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;The reason for this column is that you have a better overview over who has previously used a number. I’m sure you don’t want to assign the previous CEO’s number to a new intern.&lt;/p&gt;
&lt;h4 id=&#34;unassigned-routingrules&#34;&gt;Unassigned Routing Rules
&lt;/h4&gt;&lt;p&gt;When people leave, we sometimes want to forward their unassigned number to another person in the company or to the main number. This is done by routing rules. But do we typically remember or even know that such rules have been created in the past…? Now we do!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-3-e083a320004d/1mazY1aTB8fOWSqHcKsnSrA.png&#34;
	width=&#34;2160&#34;
	height=&#34;518&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-3-e083a320004d/1mazY1aTB8fOWSqHcKsnSrA_hu7246049596727152656.png 480w, https://heusser.pro/p/teams-phone-number-management-list-part-3-e083a320004d/1mazY1aTB8fOWSqHcKsnSrA_hu13123059525016007060.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;416&#34;
		data-flex-basis=&#34;1000px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Every number is checked against all routing rules a tenant has configured and if there are any matches, they’re reflected on the list. The name of the matching rule gets stored in the &lt;strong&gt;User Name&lt;/strong&gt; column. (Because this column isn’t used for the flow trigger condition.)&lt;/p&gt;
&lt;p&gt;This even works if a number is reserved. In this case, the status will be changed to &lt;strong&gt;Reserved (Routing Rule)&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-3-e083a320004d/1nLAAAS1BoTH5RfGGN788Q.png&#34;
	width=&#34;1767&#34;
	height=&#34;615&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-3-e083a320004d/1nLAAAS1BoTH5RfGGN788Q_hu4555310027703925916.png 480w, https://heusser.pro/p/teams-phone-number-management-list-part-3-e083a320004d/1nLAAAS1BoTH5RfGGN788Q_hu17744803437016946657.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;287&#34;
		data-flex-basis=&#34;689px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;improved-number-assignment-capabilities&#34;&gt;Improved Number Assignment Capabilities
&lt;/h4&gt;&lt;p&gt;I’ve also made some improvements to assigning numbers. If a number has a status of &lt;strong&gt;Reserved (Routing Rule)&lt;/strong&gt; or &lt;strong&gt;Assignment Error&lt;/strong&gt;, the script will try to assign the number as well. In the case of an assignment error, the script will try to assign the number again with each new job. This is helpful in scenarios where e.g. a license hasn’t been assigned yet.&lt;/p&gt;
&lt;p&gt;Furthermore, you can now also reserve a number and enter the user’s UPN in the &lt;strong&gt;User Principal Name&lt;/strong&gt; column. This is great if the account does not exist yet (so you can’t fill in the &lt;strong&gt;User Profile&lt;/strong&gt;) but you already know the UPN of a soon to be created user. All of these changes make it easier for you to plan ahead and have the runbook take care of everything automatically, once a user has been created and licensed.&lt;/p&gt;
&lt;h4 id=&#34;operator-column&#34;&gt;Operator Column
&lt;/h4&gt;&lt;p&gt;Last but not least, the list now also displays the name of the &lt;strong&gt;Operator&lt;/strong&gt;. This works for all types, including &lt;strong&gt;Direct Routing&lt;/strong&gt;. You will have to manually list the operator name for each Direct Routing number in your source CSV though.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-3-e083a320004d/1uGIXZRh99eE0prMLPkLnA.png&#34;
	width=&#34;1874&#34;
	height=&#34;612&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-3-e083a320004d/1uGIXZRh99eE0prMLPkLnA_hu4272710297378170363.png 480w, https://heusser.pro/p/teams-phone-number-management-list-part-3-e083a320004d/1uGIXZRh99eE0prMLPkLnA_hu12574365442724670684.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;306&#34;
		data-flex-basis=&#34;734px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;updating-all-the-components&#34;&gt;Updating All the Components
&lt;/h3&gt;&lt;p&gt;I will most likely update the deployment script at some point to deploy everything from scratch including all the updates. If I can find enough time, I may also create an update script to update an existing deployment.&lt;/p&gt;
&lt;p&gt;But today, I’ll show you how to implement all the changes manually in an existing deployment which consists of an Azure automation account, a list, a flow and your local source files.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;To do these steps, you should have followed and deployed everything as described in&lt;/strong&gt; &lt;a class=&#34;link&#34; href=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf&#34; &gt;&lt;strong&gt;this&lt;/strong&gt;&lt;/a&gt; &lt;strong&gt;article and implemented all the updates described in&lt;/strong&gt; &lt;a class=&#34;link&#34; href=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a&#34; &gt;&lt;strong&gt;this&lt;/strong&gt;&lt;/a&gt; &lt;strong&gt;article.&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;add-newcolumns&#34;&gt;Add New Columns
&lt;/h4&gt;&lt;p&gt;Add the following columns to the SharePoint list. All columns must be of type &lt;strong&gt;text&lt;/strong&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Comment&lt;/li&gt;
&lt;li&gt;Previous User&lt;/li&gt;
&lt;li&gt;Operator&lt;/li&gt;
&lt;li&gt;Phone Number&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;add-the-phonenumbers-python-package-to-the-automation-account&#34;&gt;Add the phonenumbers Python Package to the Automation Account
&lt;/h4&gt;&lt;p&gt;Go to &lt;a class=&#34;link&#34; href=&#34;https://pypi.org/project/phonenumbers/#files&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;this&lt;/a&gt; website and download the built distribution (*.whl) file to your PC. Then go to your automation account in Azure Portal and upload the file under &lt;strong&gt;Python packages&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-3-e083a320004d/1g7hFFDAp9c6HwdMFUIimw.png&#34;
	width=&#34;1298&#34;
	height=&#34;655&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-3-e083a320004d/1g7hFFDAp9c6HwdMFUIimw_hu5170572031865171409.png 480w, https://heusser.pro/p/teams-phone-number-management-list-part-3-e083a320004d/1g7hFFDAp9c6HwdMFUIimw_hu16503036324072639746.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;198&#34;
		data-flex-basis=&#34;475px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;add-automation-variables-to-automation-account&#34;&gt;Add Automation Variables to Automation Account
&lt;/h4&gt;&lt;p&gt;Add the following variables to your automation account. Since you’ll need to enter a value, just type a dot (“.”). Leave the integer value at 0.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;TeamsPhoneNumberOverview_AllCsOnlineNumbers (String)&lt;/li&gt;
&lt;li&gt;TeamsPhoneNumberOverview_PrettyNumbers (String)&lt;/li&gt;
&lt;li&gt;TeamsPhoneNumberOverview_TotalNumberCount (Integer)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-3-e083a320004d/1A6uNqGeSwBjpEuMGTuhw.png&#34;
	width=&#34;1524&#34;
	height=&#34;842&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-3-e083a320004d/1A6uNqGeSwBjpEuMGTuhw_hu16061923425019211980.png 480w, https://heusser.pro/p/teams-phone-number-management-list-part-3-e083a320004d/1A6uNqGeSwBjpEuMGTuhw_hu11841092978117113002.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;180&#34;
		data-flex-basis=&#34;434px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;add-operator-info-to-your-direct-routingnumbers&#34;&gt;Add Operator info to your Direct Routing Numbers
&lt;/h4&gt;&lt;p&gt;If you have direct routing numbers, you’ll need to update your source list. The old structure only had one column called &lt;strong&gt;PhoneNumber&lt;/strong&gt;. Now there’s &lt;strong&gt;PhoneNumber&lt;/strong&gt; and &lt;strong&gt;Operator&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;PhoneNumber;Operator&lt;br&gt;
4144520xxxx;Test Provider 1&lt;br&gt;
4144512xxxx;Test Provider 2&lt;br&gt;
4144512xxxx;Test Provider 3&lt;/p&gt;
&lt;p&gt;Place your updated CSV in &lt;code&gt;.\Resources\DirectRoutingNumbers-V2.csv&lt;/code&gt; and then run &lt;a class=&#34;link&#34; href=&#34;https://github.com/mozziemozz/TeamsPhoneAutomation/blob/main/Setup/UpdateDirectRoutingNumbers-V2.ps1&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;this&lt;/a&gt; script to update your automation variable in Azure.&lt;/p&gt;
&lt;p&gt;Alternatively, you can also run the below code and paste the content into your &lt;code&gt;TeamsPhoneNumberOverview_DirectRoutingNumbers&lt;/code&gt; automation variable.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;&amp;rsquo;&amp;rdquo; + (Import-Csv -Path .\Resources\DirectRoutingNumbers-V2.csv -Delimiter &amp;ldquo;;&amp;rdquo; | ConvertTo-Json | Out-String) + &amp;ldquo;&amp;rsquo;&amp;rdquo; | Set-Clipboard&lt;/p&gt;
&lt;h4 id=&#34;create-a-pythonrunbook&#34;&gt;Create a Python Runbook
&lt;/h4&gt;&lt;p&gt;Go to your runbooks in your automation account and click &lt;strong&gt;Create a runbook&lt;/strong&gt;. Name it &lt;code&gt;Format-TeamsPhoneNumbers&lt;/code&gt; and choose &lt;strong&gt;Python&lt;/strong&gt; as runbook type and &lt;strong&gt;3.10 (preview)&lt;/strong&gt; as runtime version.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-3-e083a320004d/1rgIq7gWJ29Wa9rBctif0A.png&#34;
	width=&#34;1226&#34;
	height=&#34;590&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-3-e083a320004d/1rgIq7gWJ29Wa9rBctif0A_hu13716036300233028768.png 480w, https://heusser.pro/p/teams-phone-number-management-list-part-3-e083a320004d/1rgIq7gWJ29Wa9rBctif0A_hu15762237017344053044.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;207&#34;
		data-flex-basis=&#34;498px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Grab &lt;a class=&#34;link&#34; href=&#34;https://github.com/mozziemozz/TeamsPhoneAutomation/blob/main/Functions/Format-TeamsPhoneNumbers.py&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;this&lt;/a&gt; code and paste it into the Azure portal. Save and publish the runbook.&lt;/p&gt;
&lt;h4 id=&#34;setup-a-managed-identity-and-permissions&#34;&gt;Setup a Managed Identity and Permissions
&lt;/h4&gt;&lt;p&gt;Every time the main runbook runs, it will check if the total number count is still the same by comparing the current count to the count of the previous job which is stored in the &lt;strong&gt;TeamsPhoneNumberOverview_TotalNumberCount&lt;/strong&gt; variable. If the count of numbers is different compared to the previous job, the main runbook will start the python runbook. The python runbook will use the phonenumbers library to format all your phone numbers to their localized format.&lt;/p&gt;
&lt;p&gt;However, we must first allow the runbook to start another runbook job using a managed identity. In the automation account, go to &lt;strong&gt;Identity&lt;/strong&gt; and flip the toggle switch for &lt;strong&gt;System assigned&lt;/strong&gt; (managed identity) to &lt;strong&gt;On&lt;/strong&gt;. Then click &lt;strong&gt;Save&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-3-e083a320004d/1EDBRytpBpi8HYFN2kwiLdA.png&#34;
	width=&#34;2113&#34;
	height=&#34;500&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-3-e083a320004d/1EDBRytpBpi8HYFN2kwiLdA_hu16221363438505350303.png 480w, https://heusser.pro/p/teams-phone-number-management-list-part-3-e083a320004d/1EDBRytpBpi8HYFN2kwiLdA_hu3137546346537971194.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;422&#34;
		data-flex-basis=&#34;1014px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Click &lt;strong&gt;Azure role assignments&lt;/strong&gt; and then &lt;strong&gt;Add role assignment (Preview)&lt;/strong&gt;. Set the scope to &lt;strong&gt;Resource group&lt;/strong&gt;, select your subscription and resource group and choose &lt;strong&gt;Automation Operator&lt;/strong&gt; as role.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-3-e083a320004d/1gnhE04XQSUDcagh8wASow.png&#34;
	width=&#34;1256&#34;
	height=&#34;504&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-3-e083a320004d/1gnhE04XQSUDcagh8wASow_hu6741445350736654184.png 480w, https://heusser.pro/p/teams-phone-number-management-list-part-3-e083a320004d/1gnhE04XQSUDcagh8wASow_hu1765666535982384263.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;249&#34;
		data-flex-basis=&#34;598px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Click &lt;strong&gt;Save&lt;/strong&gt;.&lt;/p&gt;
&lt;h4 id=&#34;update-the-mainrunbook&#34;&gt;Update the Main Runbook
&lt;/h4&gt;&lt;p&gt;Replace the code in the &lt;strong&gt;TeamsPhoneOverview&lt;/strong&gt; runbook with &lt;a class=&#34;link&#34; href=&#34;https://github.com/mozziemozz/TeamsPhoneAutomation/blob/main/Scripts/TeamsPhoneNumberOverview%20-V2.ps1&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;this&lt;/a&gt; code. &lt;strong&gt;Make sure to change the&lt;/strong&gt; &lt;code&gt;**$localTestMode**&lt;/code&gt; &lt;strong&gt;variable to&lt;/strong&gt; &lt;code&gt;**$false**&lt;/code&gt; &lt;strong&gt;before you save and publish the runbook. Also update the names of your automation account and resource group on lines 95–97.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-3-e083a320004d/1Szx2vDwh4929HXR4DPp4MA.png&#34;
	width=&#34;522&#34;
	height=&#34;79&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-3-e083a320004d/1Szx2vDwh4929HXR4DPp4MA_hu5700670184897145383.png 480w, https://heusser.pro/p/teams-phone-number-management-list-part-3-e083a320004d/1Szx2vDwh4929HXR4DPp4MA_hu847545619561749350.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;660&#34;
		data-flex-basis=&#34;1585px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;If you don’t want to write back user’s &lt;strong&gt;LineURIs&lt;/strong&gt; to Entra ID &lt;strong&gt;BusinessPhones&lt;/strong&gt;, change &lt;code&gt;syncTeamsPhoneNumbersToEntraIdBusinessPhones&lt;/code&gt; to &lt;code&gt;$false&lt;/code&gt; on line 6.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-3-e083a320004d/1MFWbPjRVqUjXwHAw5HdDZg.png&#34;
	width=&#34;415&#34;
	height=&#34;20&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-3-e083a320004d/1MFWbPjRVqUjXwHAw5HdDZg_hu9929013984791076197.png 480w, https://heusser.pro/p/teams-phone-number-management-list-part-3-e083a320004d/1MFWbPjRVqUjXwHAw5HdDZg_hu5516652375618376658.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;2075&#34;
		data-flex-basis=&#34;4980px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;update-theflow&#34;&gt;Update the Flow
&lt;/h4&gt;&lt;p&gt;Finally, go to your flow and make the last small changes. In here, add the values for the new columns that we created. If you need a refresher, this is the part where the flow deletes numbers which were unassigned because there’s no way to remove the user profile. We then recreate the list entry with all the information &lt;strong&gt;except&lt;/strong&gt; the &lt;strong&gt;User Profile Claims&lt;/strong&gt;. Because the user profile stays, we can use the &lt;strong&gt;User Profile Email&lt;/strong&gt; and write it to the &lt;strong&gt;Previous User&lt;/strong&gt; column. Comments in the comment field will also be added again, once a deleted entry has been recreated.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-3-e083a320004d/1BvLOlUfRBHAr1IFNxm7tYg.png&#34;
	width=&#34;929&#34;
	height=&#34;1374&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-3-e083a320004d/1BvLOlUfRBHAr1IFNxm7tYg_hu4886462214661649037.png 480w, https://heusser.pro/p/teams-phone-number-management-list-part-3-e083a320004d/1BvLOlUfRBHAr1IFNxm7tYg_hu6873944675599055317.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;67&#34;
		data-flex-basis=&#34;162px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;update-the-flow-trigger-condition&#34;&gt;Update the Flow Trigger Condition
&lt;/h4&gt;&lt;p&gt;The current trigger condition checks if a user’s email address is equal to the user principal name. As much as I want this to always be the case, the reality is sometimes different. Some readers have reported that their Flow gets stuck in an infinite trigger loop because of that.&lt;/p&gt;
&lt;p&gt;I’ve slightly tweaked the trigger condition, so it doesn’t compare the email address to the UPN anymore. Instead, the UPN is extracted from the user profile using a split operation and then compared to the UPN from the list column. Here’s the &lt;a class=&#34;link&#34; href=&#34;https://github.com/mozziemozz/TeamsPhoneAutomation/blob/main/Resources/FlowTriggerConditionRobustUpn.txt&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;updated trigger condition&lt;/a&gt;. Make sure to update it on your flow as well as it will be more robust than the old one.&lt;/p&gt;
&lt;p&gt;@or(&lt;br&gt;
and(&lt;br&gt;
not(equals(triggerOutputs()?[&amp;lsquo;body/User_x0020_Principal_x0020_Name&amp;rsquo;], &amp;lsquo;Unassigned&amp;rsquo;)),&lt;br&gt;
not(contains(triggerBody(), &amp;lsquo;UserProfile&amp;rsquo;))&lt;br&gt;
),&lt;br&gt;
not(equals(toLower(triggerOutputs()?[&amp;lsquo;body/User_x0020_Principal_x0020_Name&amp;rsquo;]), split(toLower(triggerOutputs()?[&amp;lsquo;body/UserProfile&amp;rsquo;][&amp;lsquo;Claims&amp;rsquo;]),&amp;rsquo;|&amp;rsquo;)[2])),&lt;br&gt;
and(&lt;br&gt;
contains(triggerBody(), &amp;lsquo;UserProfile&amp;rsquo;),&lt;br&gt;
not(equals(triggerOutputs()?[&amp;lsquo;body/User_x0020_Principal_x0020_Name&amp;rsquo;], &amp;lsquo;Unassigned&amp;rsquo;)),&lt;br&gt;
not(contains(triggerBody(), &amp;lsquo;TeamsAdminCenter&amp;rsquo;))&lt;br&gt;
)&lt;br&gt;
)&lt;/p&gt;
&lt;p&gt;That’s all. If you’ve followed all the steps, you should now be able to make use of all the new features I created. Like I said, I’ll try to find some time and create a new deployment script which deploys the version 2 from scratch. I hope you enjoy the list as much as I do.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Teams Phone Number Management List Part 2</title>
        <link>https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/</link>
        <pubDate>Sat, 08 Apr 2023 16:02:49 +0000</pubDate>
        
        <guid>https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/</guid>
        <description>&lt;p&gt;This article builds on the following article.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf&#34; &gt;Teams Phone Number Management on a Budget | by martin heusser | Mar, 2023 | Medium&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Please make sure you read that one first.&lt;/p&gt;
&lt;p&gt;After I built the list initially, I quickly realized that there’s still room for improvement. Especially a feature to assign and unassign phone numbers through the list would be incredibly handy. This would allow us to delegate this task to users without Teams Admin Center access.&lt;/p&gt;
&lt;p&gt;The &lt;a class=&#34;link&#34; href=&#34;https://github.com/mozziemozz/TeamsPhoneAutomation&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;repository&lt;/a&gt; has been updated and already includes the code required for number assignment. If you’ve already deployed it, just delete the resource group in Azure and re-deploy. Of course, you can also replace the existing files with the new scripts and variables by hand if you know what you’re doing. But since there’s a deployment script available, I recommend deleting and re-deploying.&lt;/p&gt;
&lt;p&gt;Let’s check out the new features first and go over the manual changes required later.&lt;/p&gt;
&lt;h3 id=&#34;new-features&#34;&gt;New Features
&lt;/h3&gt;&lt;h4 id=&#34;country&#34;&gt;Country
&lt;/h4&gt;&lt;p&gt;All Calling Plan and Operator Connect phone numbers already include a country attribute. Therefore, I decided to use the property which is already known to Teams. The &lt;strong&gt;Country&lt;/strong&gt; column now includes the two-digit ISO code instead of the country’s full name.&lt;/p&gt;
&lt;p&gt;For consistency, the &lt;a class=&#34;link&#34; href=&#34;https://github.com/mozziemozz/TeamsPhoneAutomation/blob/main/Resources/CountryLookupTable.json&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;CountryLookupTable.json&lt;/a&gt; has been updated to include the ISO codes as well. Please see the &lt;strong&gt;Changes in V2&lt;/strong&gt; section of this article if the Country does not always match your direct routing numbers.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/1fXx1TOgZFuZVhjx1eDjUQ.png&#34;
	width=&#34;2262&#34;
	height=&#34;504&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/1fXx1TOgZFuZVhjx1eDjUQ_hu18095561668715858387.png 480w, https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/1fXx1TOgZFuZVhjx1eDjUQ_hu17476794519995983039.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;448&#34;
		data-flex-basis=&#34;1077px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;city&#34;&gt;City
&lt;/h4&gt;&lt;p&gt;The purpose of this list is to make the management of phone numbers easier. The more information you have, the better you can filter. That’s why I added a &lt;strong&gt;City&lt;/strong&gt; column as well.&lt;/p&gt;
&lt;h4 id=&#34;number-reservation&#34;&gt;Number Reservation
&lt;/h4&gt;&lt;p&gt;The &lt;strong&gt;Status&lt;/strong&gt; column is now a drop-down list. Setting a number to &lt;strong&gt;Reserved&lt;/strong&gt; won’t do anything yet, except letting other people which use the list know that this number should not be assigned to any user or resource account.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/1hCvnQlLcivK4l6aqVptQ.png&#34;
	width=&#34;1804&#34;
	height=&#34;266&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/1hCvnQlLcivK4l6aqVptQ_hu3950006781488042600.png 480w, https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/1hCvnQlLcivK4l6aqVptQ_hu1535021345505014611.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;678&#34;
		data-flex-basis=&#34;1627px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Because this is a SharePoint list, we can add a comment on that entry.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/19B3gsc94JUVpwVXhbEiLw.png&#34;
	width=&#34;1186&#34;
	height=&#34;498&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/19B3gsc94JUVpwVXhbEiLw_hu9745984112080395916.png 480w, https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/19B3gsc94JUVpwVXhbEiLw_hu8037434597609408185.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;238&#34;
		data-flex-basis=&#34;571px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;The runbook will not make any changes or updates to that entry until the number is assigned or the Status is changed by hand again.&lt;/p&gt;
&lt;h4 id=&#34;assign-anumber&#34;&gt;Assign a Number
&lt;/h4&gt;&lt;p&gt;To assign a number, simply set a number to &lt;strong&gt;Reserved&lt;/strong&gt; and choose a &lt;strong&gt;User Profile&lt;/strong&gt; from the people picker.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/1QNTzy43yr2pBe9Ow3xAWA.png&#34;
	width=&#34;1067&#34;
	height=&#34;246&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/1QNTzy43yr2pBe9Ow3xAWA_hu10828696007464345786.png 480w, https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/1QNTzy43yr2pBe9Ow3xAWA_hu3084779385110146671.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;433&#34;
		data-flex-basis=&#34;1040px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;The list will then look like this. There’s a &lt;strong&gt;User Profile&lt;/strong&gt; linked but the &lt;strong&gt;User Principal Name&lt;/strong&gt; is still unassigned.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/1xrSnRsutiS2xUJ6y4U6Lw.png&#34;
	width=&#34;1581&#34;
	height=&#34;266&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/1xrSnRsutiS2xUJ6y4U6Lw_hu4778689981290496313.png 480w, https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/1xrSnRsutiS2xUJ6y4U6Lw_hu4877644192233988325.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;594&#34;
		data-flex-basis=&#34;1426px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;The next time the runbook runs, it will try to assign the number. If the assignment fails for any reason, the Staus will change to &lt;strong&gt;Assignment Error&lt;/strong&gt; but the linked User Profile will be retained.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/1z8KikMnOal4Oa2WxTYQ73A.png&#34;
	width=&#34;1586&#34;
	height=&#34;260&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/1z8KikMnOal4Oa2WxTYQ73A_hu7055967322767454951.png 480w, https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/1z8KikMnOal4Oa2WxTYQ73A_hu6280920259523228929.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;610&#34;
		data-flex-basis=&#34;1464px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Currently, the list only reflects a generic error. The runbook output, however, does include more information.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/11OI1hJz1RuwkoEm43rU0Q.png&#34;
	width=&#34;809&#34;
	height=&#34;107&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/11OI1hJz1RuwkoEm43rU0Q_hu5176709390360392135.png 480w, https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/11OI1hJz1RuwkoEm43rU0Q_hu6855803597452764775.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;756&#34;
		data-flex-basis=&#34;1814px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;The script will even assign a voice routing policy for direct routing numbers if you specify one in the CountryLookupTable.json file. I will show you how to do that at the end of this article.&lt;/p&gt;
&lt;p&gt;If you really want to be on top of your game, you can also create a rule to notify you of failed assignments.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/151zUCwelWtbrDgbnzkfNQ.png&#34;
	width=&#34;2300&#34;
	height=&#34;1259&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/151zUCwelWtbrDgbnzkfNQ_hu17297813823481506870.png 480w, https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/151zUCwelWtbrDgbnzkfNQ_hu16530650228554725155.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;182&#34;
		data-flex-basis=&#34;438px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;unassign-anumber&#34;&gt;Unassign a Number
&lt;/h4&gt;&lt;p&gt;To unassign a number, simply change the Status to &lt;strong&gt;Remove Pending&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/1o5Nh9gEBN07IBhByFt8Few.png&#34;
	width=&#34;1582&#34;
	height=&#34;267&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/1o5Nh9gEBN07IBhByFt8Few_hu9286108581087119320.png 480w, https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/1o5Nh9gEBN07IBhByFt8Few_hu2035649539514763881.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;592&#34;
		data-flex-basis=&#34;1422px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;The number will then be removed from the user, the next time the runbook is running.&lt;/p&gt;
&lt;h4 id=&#34;performance-improvements&#34;&gt;Performance Improvements
&lt;/h4&gt;&lt;p&gt;I’ve also made some changes which will improve the performance of the script dramatically. I discovered a couple of redundant Graph requests which have now been reduced to the minimum required.&lt;/p&gt;
&lt;h3 id=&#34;changes-inv2&#34;&gt;Changes in V2
&lt;/h3&gt;&lt;h4 id=&#34;changes-to-thelist&#34;&gt;Changes to the List
&lt;/h4&gt;&lt;p&gt;Edit the &lt;strong&gt;Status&lt;/strong&gt; column of your list.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/1P2a8Jd5iHaAPfAvS6IglA.png&#34;
	width=&#34;1424&#34;
	height=&#34;518&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/1P2a8Jd5iHaAPfAvS6IglA_hu12125202056538052887.png 480w, https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/1P2a8Jd5iHaAPfAvS6IglA_hu14442988621511594313.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;274&#34;
		data-flex-basis=&#34;659px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Change the &lt;strong&gt;Type&lt;/strong&gt; from &lt;strong&gt;Single line of Text&lt;/strong&gt; to &lt;strong&gt;Choice&lt;/strong&gt; and add the following choices.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/1scOs84KlwMBYFhiCNnG3Q.png&#34;
	width=&#34;484&#34;
	height=&#34;836&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/1scOs84KlwMBYFhiCNnG3Q_hu14030371504769031098.png 480w, https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/1scOs84KlwMBYFhiCNnG3Q_hu8023510185257674125.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;57&#34;
		data-flex-basis=&#34;138px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Save the changes to the &lt;strong&gt;Status&lt;/strong&gt; column.&lt;/p&gt;
&lt;p&gt;Now add a new &lt;strong&gt;Text&lt;/strong&gt; column.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/1cjsXM6TTXhTYVAZGMag.png&#34;
	width=&#34;837&#34;
	height=&#34;636&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/1cjsXM6TTXhTYVAZGMag_hu4454873448234977473.png 480w, https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/1cjsXM6TTXhTYVAZGMag_hu14559344243294259727.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;131&#34;
		data-flex-basis=&#34;315px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Name it &lt;strong&gt;City&lt;/strong&gt; and choose Type &lt;strong&gt;Single line of text.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/1QXZyFo02BJglprnd8cS4og.png&#34;
	width=&#34;479&#34;
	height=&#34;689&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/1QXZyFo02BJglprnd8cS4og_hu4514075467822879582.png 480w, https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/1QXZyFo02BJglprnd8cS4og_hu13138467544254700414.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;69&#34;
		data-flex-basis=&#34;166px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;changes-to-theflow&#34;&gt;Changes to the Flow
&lt;/h3&gt;&lt;h4 id=&#34;update-trigger-condition&#34;&gt;Update Trigger Condition
&lt;/h4&gt;&lt;p&gt;In your flow’s trigger condition, delete the existing condition and paste the following expression.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update 08.08.2023&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Thanks to a community member of my Teams Phone Admin &lt;a class=&#34;link&#34; href=&#34;https://heusser.pro/discord.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Discord Server&lt;/a&gt; I was made aware that the trigger condition can fail if the UPN and the email address case did not match. Below is the corrected trigger condition which includes a &lt;code&gt;toLower()&lt;/code&gt; expression as well.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;/Update&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;@or(&lt;br&gt;
and(&lt;br&gt;
not(equals(triggerOutputs()?[&amp;lsquo;body/User_x0020_Principal_x0020_Name&amp;rsquo;], &amp;lsquo;Unassigned&amp;rsquo;)),&lt;br&gt;
not(contains(triggerBody(), &amp;lsquo;UserProfile&amp;rsquo;))&lt;br&gt;
),&lt;br&gt;
not(equals(toLower(triggerOutputs()?[&amp;lsquo;body/User_x0020_Principal_x0020_Name&amp;rsquo;]), toLower(triggerOutputs()?[&amp;lsquo;body/UserProfile&amp;rsquo;][&amp;lsquo;Email&amp;rsquo;]))),&lt;br&gt;
and(&lt;br&gt;
contains(triggerBody(), &amp;lsquo;UserProfile&amp;rsquo;),&lt;br&gt;
not(equals(triggerOutputs()?[&amp;lsquo;body/User_x0020_Principal_x0020_Name&amp;rsquo;], &amp;lsquo;Unassigned&amp;rsquo;)),&lt;br&gt;
not(contains(triggerBody(), &amp;lsquo;TeamsAdminCenter&amp;rsquo;))&lt;br&gt;
)&lt;br&gt;
)&lt;/p&gt;
&lt;p&gt;The expression is now also included in the &lt;a class=&#34;link&#34; href=&#34;https://github.com/mozziemozz/TeamsPhoneAutomation/blob/main/Resources/FlowTriggerCondition.txt&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;repository&lt;/a&gt; for better readability. The line breaks will be automatically removed once you paste it in Power Automate.&lt;/p&gt;
&lt;p&gt;This will also trigger the flow, when a &lt;strong&gt;User Profile&lt;/strong&gt; was added manually through the list (not by the flow) which is what happens when a list user wants to assign a number to a new Teams User.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/15XzTMBRpRFoAN8QWg0wg.png&#34;
	width=&#34;1658&#34;
	height=&#34;257&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/15XzTMBRpRFoAN8QWg0wg_hu17581429506138853447.png 480w, https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/15XzTMBRpRFoAN8QWg0wg_hu13213783103957942431.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;645&#34;
		data-flex-basis=&#34;1548px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;add-another-condition&#34;&gt;Add Another Condition
&lt;/h4&gt;&lt;p&gt;I don’t know why it didn’t occur to me initially but instead of using the runbook to recreate items which have been deleted by the flow, we can just use the flow to do that as well. The reason why we need to delete and re-create is because setting the User Profile to &lt;strong&gt;null&lt;/strong&gt; did not work in Power Automate.&lt;/p&gt;
&lt;p&gt;In the first &lt;strong&gt;If yes&lt;/strong&gt; action, we have to add another condition which checks if the &lt;strong&gt;Status Value&lt;/strong&gt; is equal to &lt;strong&gt;Unassigned.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/11borC4Preqwfg27E0VYQA.png&#34;
	width=&#34;926&#34;
	height=&#34;296&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/11borC4Preqwfg27E0VYQA_hu7805835888938731663.png 480w, https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/11borC4Preqwfg27E0VYQA_hu12746839978264146194.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;312&#34;
		data-flex-basis=&#34;750px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;The existing &lt;strong&gt;Delete&lt;/strong&gt; &lt;strong&gt;item&lt;/strong&gt; action has to be copied to the clipboard, deleted, and then pasted inside the &lt;strong&gt;If yes&lt;/strong&gt; action of the second condition again.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/1b0l089aKSKjnKzGhs2WLw.png&#34;
	width=&#34;1241&#34;
	height=&#34;125&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/1b0l089aKSKjnKzGhs2WLw_hu1036140290450343780.png 480w, https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/1b0l089aKSKjnKzGhs2WLw_hu1163246677624753479.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;992&#34;
		data-flex-basis=&#34;2382px&#34;
	
&gt;
&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/151IVw0NFOPlwJIyS5Z6A.png&#34;
	width=&#34;918&#34;
	height=&#34;326&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/151IVw0NFOPlwJIyS5Z6A_hu10257178476965244421.png 480w, https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/151IVw0NFOPlwJIyS5Z6A_hu9771569368903101710.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;281&#34;
		data-flex-basis=&#34;675px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;add-create-itemaction&#34;&gt;Add Create Item Action
&lt;/h4&gt;&lt;p&gt;In the second &lt;strong&gt;If yes&lt;/strong&gt; action, add a &lt;strong&gt;Create item&lt;/strong&gt; action after &lt;strong&gt;Delete&lt;/strong&gt; item with the following dynamic values.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/1KEG3uPMLbf8mXKkAHXCBw.png&#34;
	width=&#34;964&#34;
	height=&#34;1421&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/1KEG3uPMLbf8mXKkAHXCBw_hu1020364719477370199.png 480w, https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/1KEG3uPMLbf8mXKkAHXCBw_hu14687809433212571189.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;67&#34;
		data-flex-basis=&#34;162px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Here’s a new screenshot of the complete flow with collapsed boxes.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/1xF9V8IvU5ZFciYjH1fsqYg.png&#34;
	width=&#34;3158&#34;
	height=&#34;1242&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/1xF9V8IvU5ZFciYjH1fsqYg_hu5567447648529120566.png 480w, https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/1xF9V8IvU5ZFciYjH1fsqYg_hu14733048590385861530.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;254&#34;
		data-flex-basis=&#34;610px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;changes-to-the-countrylookuptablejson&#34;&gt;Changes to the CountryLookupTable.json
&lt;/h3&gt;&lt;h4 id=&#34;add-more-preciseprefixes&#34;&gt;Add More Precise Prefixes
&lt;/h4&gt;&lt;p&gt;There are some countries which use the same phone prefix. If multiple matches are found, the function always uses the last match which might be wrong in many cases. To solve this, just edit the Json file yourself.&lt;/p&gt;
&lt;p&gt;For example, if you have Australian &lt;strong&gt;+61&lt;/strong&gt; numbers, but don’t have any numbers from Christmas Island or Cocos Islands (which also start with +61), just delete these entries from the Json.&lt;/p&gt;
&lt;p&gt;In case you have e.g. numbers from Canada and USA, which both start with &lt;strong&gt;+1,&lt;/strong&gt; you can also extend the prefix to include all digits which are common in all your number ranges from left to right.&lt;/p&gt;
&lt;p&gt;Original Entry&lt;/p&gt;
&lt;p&gt;{&lt;br&gt;
&amp;ldquo;Prefix&amp;rdquo;: &amp;ldquo;+1&amp;rdquo;,&lt;br&gt;
&amp;ldquo;CountryName&amp;rdquo;: &amp;ldquo;United States&amp;rdquo;,&lt;br&gt;
&amp;ldquo;Country&amp;rdquo;: &amp;ldquo;US&amp;rdquo;&lt;br&gt;
}&lt;/p&gt;
&lt;p&gt;Possible Entry Change&lt;/p&gt;
&lt;p&gt;{&lt;br&gt;
&amp;ldquo;Prefix&amp;rdquo;: &amp;ldquo;+1206&amp;rdquo;,&lt;br&gt;
&amp;ldquo;CountryName&amp;rdquo;: &amp;ldquo;United States&amp;rdquo;,&lt;br&gt;
&amp;ldquo;Country&amp;rdquo;: &amp;ldquo;US&amp;rdquo;&lt;br&gt;
}&lt;/p&gt;
&lt;p&gt;This example assumes that you have Canadian direct routing numbers starting with &lt;strong&gt;+1&lt;/strong&gt; and have US direct routing numbers which all start with &lt;strong&gt;+1206&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;If you have more prefixes from the same country in your number ranges, just add more entries with different prefixes but with the same country.&lt;/p&gt;
&lt;p&gt;{&lt;br&gt;
&amp;ldquo;Prefix&amp;rdquo;: &amp;ldquo;+1206&amp;rdquo;,&lt;br&gt;
&amp;ldquo;CountryName&amp;rdquo;: &amp;ldquo;United States&amp;rdquo;,&lt;br&gt;
&amp;ldquo;Country&amp;rdquo;: &amp;ldquo;US&amp;rdquo;&lt;br&gt;
},&lt;br&gt;
{&lt;br&gt;
&amp;ldquo;Prefix&amp;rdquo;: &amp;ldquo;+1323&amp;rdquo;,&lt;br&gt;
&amp;ldquo;CountryName&amp;rdquo;: &amp;ldquo;United States&amp;rdquo;,&lt;br&gt;
&amp;ldquo;Country&amp;rdquo;: &amp;ldquo;US&amp;rdquo;&lt;br&gt;
}&lt;/p&gt;
&lt;h4 id=&#34;add-voice-routing-policynames&#34;&gt;Add Voice Routing Policy Names
&lt;/h4&gt;&lt;p&gt;If you want to use the list for assignment of direct routing numbers, you’ll have to add the name of your voice routing policy for each country to the &lt;strong&gt;CountryLookupTable.json&lt;/strong&gt; file.&lt;/p&gt;
&lt;p&gt;{&lt;br&gt;
&amp;ldquo;Prefix&amp;rdquo;: &amp;ldquo;+41&amp;rdquo;,&lt;br&gt;
&amp;ldquo;CountryName&amp;rdquo;: &amp;ldquo;Switzerland&amp;rdquo;,&lt;br&gt;
&amp;ldquo;Country&amp;rdquo;: &amp;ldquo;CH&amp;rdquo;,&lt;br&gt;
&amp;ldquo;VoiceRoutingPolicy&amp;rdquo;: &amp;ldquo;Switzerland&amp;rdquo;&lt;br&gt;
}&lt;/p&gt;
&lt;p&gt;Currently, this solution only supports one voice routing policy per country entry in the CountryLookupTable.json file.&lt;/p&gt;
&lt;p&gt;If you have different voice routing policies for various locations within the same country, you’ll have to try to find a way to match them via their prefixes and add multiple entries in the Json.&lt;/p&gt;
&lt;p&gt;{&lt;br&gt;
&amp;ldquo;Prefix&amp;rdquo;: &amp;ldquo;+4144&amp;rdquo;,&lt;br&gt;
&amp;ldquo;CountryName&amp;rdquo;: &amp;ldquo;Switzerland&amp;rdquo;,&lt;br&gt;
&amp;ldquo;Country&amp;rdquo;: &amp;ldquo;CH&amp;rdquo;,&lt;br&gt;
&amp;ldquo;VoiceRoutingPolicy&amp;rdquo;: &amp;ldquo;Switzerland-Zurich&amp;rdquo;&lt;br&gt;
},&lt;br&gt;
{&lt;br&gt;
&amp;ldquo;Prefix&amp;rdquo;: &amp;ldquo;+4131&amp;rdquo;,&lt;br&gt;
&amp;ldquo;CountryName&amp;rdquo;: &amp;ldquo;Switzerland&amp;rdquo;,&lt;br&gt;
&amp;ldquo;Country&amp;rdquo;: &amp;ldquo;CH&amp;rdquo;,&lt;br&gt;
&amp;ldquo;VoiceRoutingPolicy&amp;rdquo;: &amp;ldquo;Switzerland-Bern&amp;rdquo;&lt;br&gt;
}&lt;/p&gt;
&lt;h4 id=&#34;changes-to-teamsphonenumberoverviewps1&#34;&gt;Changes to TeamsPhoneNumberOverview.ps1
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;Update 11.04.2023&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Sorry, I totally forgot to mention that you’ll also need to specify the name of the SharePoint User Information List in your language.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;# Set your language or add it to the switch statement&lt;br&gt;
# To find the name of your user information list, go to:&lt;br&gt;
# https://&lt;your domain&gt;.sharepoint.com/sites/&lt;your site name&gt;/_catalogs/users/simple.aspx&lt;br&gt;
$spoLanguage = &amp;ldquo;German&amp;rdquo;&lt;/p&gt;
&lt;p&gt;switch ($spoLanguage) {&lt;br&gt;
German {&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    $localizedUserInformationList = &amp;quot;Benutzerinformationsliste&amp;quot;  

}  
English {  

    $localizedUserInformationList = &amp;quot;User Information List&amp;quot;  

}  
Default {  

    $localizedUserInformationList = &amp;quot;User Information List&amp;quot;  

}  
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;I hope that you like the &lt;strong&gt;V2&lt;/strong&gt; upgrade of my budget number management list.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/0i9hHsRnLxMO42ePg.jpg&#34;
	width=&#34;1024&#34;
	height=&#34;1024&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/0i9hHsRnLxMO42ePg_hu15752199443567770170.jpg 480w, https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a/0i9hHsRnLxMO42ePg_hu7172263305403151568.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;100&#34;
		data-flex-basis=&#34;240px&#34;
	
&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Teams Phone Number Management on a Budget</title>
        <link>https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/</link>
        <pubDate>Thu, 23 Mar 2023 13:05:11 +0000</pubDate>
        
        <guid>https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/</guid>
        <description>&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/0TNGGsjES22NTIbT.jpg&#34;
	width=&#34;1024&#34;
	height=&#34;1024&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/0TNGGsjES22NTIbT_hu912541835031888826.jpg 480w, https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/0TNGGsjES22NTIbT_hu11546119818278601661.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;100&#34;
		data-flex-basis=&#34;240px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update 08.04.2023&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I’ve updated this solution to V2 which includes the capability to assign, unassign and reserve phone numbers along with other improvements.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Please read &lt;a class=&#34;link&#34; href=&#34;https://heusser.pro/p/teams-phone-number-management-list-part-2-b5385e348a3a&#34; &gt;this article&lt;/a&gt; when you have finished reading this one.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;/Update&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Every Teams Voice Admin that has deployed Direct Routing knows the struggle. There’s no way to manage Direct Routing numbers in Teams Admin Center. This makes it hard for us to get a clear overview of which numbers are still unassigned/free or even to see all the numbers we have.&lt;/p&gt;
&lt;p&gt;Obviously, there’s a solution for anything. We can use PowerShell to export numbers and create our own lists in Excel or whatever. The challenge with that is to keep the list up to date, error free and make it centrally available for all people who need to work with it.&lt;/p&gt;
&lt;p&gt;There are also lots of vendors which offer Teams phone number management platforms. Here are some of them:&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://callroute.com/features/number-management/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Number Management for Microsoft Teams (callroute.com)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.codesoftware.net/clobba-rm/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Clobba Range Manager — DID Number Management — Code Software&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.pure-ip.com/number-connect&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Number Connect (pure-ip.com)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://teamsboss.com/app/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;TeamsBoss&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;They all have powerful features — which come with a price. But what if we don’t need a full-fledged management solution and just want a simple overview which is dynamically updated?&lt;/p&gt;
&lt;p&gt;That’s exactly what I’ve been building in my spare time over the last few weeks.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1bJzySshLFfuKEkIhfsSCQ.png&#34;
	width=&#34;2789&#34;
	height=&#34;1101&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1bJzySshLFfuKEkIhfsSCQ_hu5742481542322750691.png 480w, https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1bJzySshLFfuKEkIhfsSCQ_hu8961435426017054614.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;253&#34;
		data-flex-basis=&#34;607px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;The final product is a SharePoint list which gets automatically updated by an Azure Automation Runbook every hour.&lt;/p&gt;
&lt;p&gt;This time around, I tried to automate everything I could. This means less work for you if you want to deploy it yourself. But before we get into the technical details of it, let’s look at the list.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If you don’t care about the details and want to deploy straight away, you can grab the code from &lt;a class=&#34;link&#34; href=&#34;http://mozziemozz/TeamsPhoneAutomation:%20Automation%20Scripts%20for%20Microsoft%20Teams%20Phone%20%28github.com%29&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;the-list&#34;&gt;The List
&lt;/h3&gt;&lt;h4 id=&#34;the-columns&#34;&gt;The Columns
&lt;/h4&gt;&lt;p&gt;The list can be viewed in SharePoint Online, Microsoft Lists or directly in Teams through Lists. It consists of the following columns.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Title&lt;/strong&gt; = Phone Number&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Phone Extension&lt;/strong&gt; = Extension if there is one configured&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Status&lt;/strong&gt; = Assigned/Unassigned&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Number Type&lt;/strong&gt; = Direct Routing / Calling Plan / Operator Connect&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;User Name&lt;/strong&gt; = Display Name of assigned account&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;User Principal Name&lt;/strong&gt; = UPN of assigned account&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Account Type&lt;/strong&gt; = User Account / Resource Account / Conference Bridge&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Country&lt;/strong&gt; = The country a number belongs to&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;UserId&lt;/strong&gt; = Object Id from Azure AD&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;User Profile&lt;/strong&gt; = Profile Card&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Teams Admin Center&lt;/strong&gt; = Link to manage the user in TAC&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This should cover most of the relevant information somebody might want to know about their phone numbers.&lt;/p&gt;
&lt;h4 id=&#34;filtering&#34;&gt;Filtering
&lt;/h4&gt;&lt;p&gt;Having all that information available allows us to easily filter numbers which meet certain criteria. In this example, I filtered the list for all unassigned numbers from the UK.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/14bBmRV7urUrZc22NiWUVDA.png&#34;
	width=&#34;2100&#34;
	height=&#34;272&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/14bBmRV7urUrZc22NiWUVDA_hu16598893907812566858.png 480w, https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/14bBmRV7urUrZc22NiWUVDA_hu3430178977867213363.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;772&#34;
		data-flex-basis=&#34;1852px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Because this number is unassigned and it could be assigned to a &lt;strong&gt;Resource Account&lt;/strong&gt; or a &lt;strong&gt;Conference Bridge&lt;/strong&gt;, both types are included in the list.&lt;/p&gt;
&lt;p&gt;If we compare that to an assigned service number, we can see that the &lt;strong&gt;Account Type&lt;/strong&gt; is shown as &lt;strong&gt;Resource Account&lt;/strong&gt; because the number is assigned to one.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1wZdcr9ASB2hnmRdFT5w.png&#34;
	width=&#34;2086&#34;
	height=&#34;269&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1wZdcr9ASB2hnmRdFT5w_hu6713032443149435000.png 480w, https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1wZdcr9ASB2hnmRdFT5w_hu11318618150716205332.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;775&#34;
		data-flex-basis=&#34;1861px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;The most common thing which people probably want to see at glance is which &lt;strong&gt;direct routing&lt;/strong&gt; numbers are unassigned from a specific country. This can also be achieved very easily.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1IUJX8fpDC3xi4wpcd5kfg.png&#34;
	width=&#34;2280&#34;
	height=&#34;520&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1IUJX8fpDC3xi4wpcd5kfg_hu5721791204430657627.png 480w, https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1IUJX8fpDC3xi4wpcd5kfg_hu16992599334884932003.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;438&#34;
		data-flex-basis=&#34;1052px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;I learned a lot during the development of this project, and I now want to share that with you. Let’s take a look at how the SharePoint list was built and how it automatically updates itself with the help of &lt;strong&gt;Azure Automation&lt;/strong&gt;.&lt;/p&gt;
&lt;h3 id=&#34;deployment&#34;&gt;Deployment
&lt;/h3&gt;&lt;p&gt;There are very few manual tasks required to get this set up. I built a deployment script which will create all the required resources in Azure for you.&lt;/p&gt;
&lt;h4 id=&#34;clone-the-githubrepo&#34;&gt;Clone The GitHub Repo
&lt;/h4&gt;&lt;p&gt;Start by cloning or downloading the GitHub Repo.&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/mozziemozz/TeamsPhoneAutomation&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;mozziemozz/TeamsPhoneAutomation: Automation Scripts for Microsoft Teams Phone (github.com)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you’ve never worked with GitHub before, I highly recommend trying it instead of just downloading the repository as a zip file. All you need to do is &lt;a class=&#34;link&#34; href=&#34;https://github.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;sign up&lt;/a&gt; for an account, install the &lt;a class=&#34;link&#34; href=&#34;https://desktop.github.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;desktop client&lt;/a&gt; and clone the repo.&lt;/p&gt;
&lt;p&gt;Once you have signed into GitHub Desktop, just head over to the &lt;a class=&#34;link&#34; href=&#34;https://github.com/mozziemozz/TeamsPhoneAutomation&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;repository URL&lt;/a&gt; and open it in GitHub Desktop.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1Id3QSS2WJGsTfGqGPJ55Q.png&#34;
	width=&#34;1390&#34;
	height=&#34;588&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1Id3QSS2WJGsTfGqGPJ55Q_hu15314634163774768637.png 480w, https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1Id3QSS2WJGsTfGqGPJ55Q_hu11385199648139296782.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;236&#34;
		data-flex-basis=&#34;567px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Then choose your local folder and click on clone. Make sure to select a folder which isn’t synchronized to any kind of cloud Storage like OneDrive. The constant syncing of files would impair your performance dramatically.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1tqEoryFHlOYEPKCBQaED6Q.png&#34;
	width=&#34;736&#34;
	height=&#34;446&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1tqEoryFHlOYEPKCBQaED6Q_hu7452115762349764384.png 480w, https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1tqEoryFHlOYEPKCBQaED6Q_hu63212629804396380.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;165&#34;
		data-flex-basis=&#34;396px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;The repo contains the following files and folders.&lt;/p&gt;
&lt;p&gt;C:\TEMP\GITHUB\TEAMSPHONEAUTOMATION&lt;br&gt;
│   .gitignore&lt;br&gt;
│   Deploy.ps1&lt;br&gt;
│   README.md&lt;br&gt;
│&lt;br&gt;
├───Functions&lt;br&gt;
│       Connect-MgGraphHTTP.ps1&lt;br&gt;
│       Connect-MsTeamsServicePrincipal.ps1&lt;br&gt;
│       Get-CountryFromPrefix.ps1&lt;br&gt;
│       Get-CsOnlineNumbers.ps1&lt;br&gt;
│&lt;br&gt;
├───Resources&lt;br&gt;
│       CountryLookupTable.json&lt;br&gt;
│       CreateList.json&lt;br&gt;
│       DirectRoutingNumbers.csv&lt;br&gt;
│       Environment.json&lt;br&gt;
│&lt;br&gt;
├───Scripts&lt;br&gt;
│       TeamsPhoneNumberOverview.ps1&lt;br&gt;
│&lt;br&gt;
└───Setup&lt;br&gt;
Setup.ps1&lt;br&gt;
UpdateDirectRoutingNumbers.ps1&lt;/p&gt;
&lt;h4 id=&#34;environmentjson&#34;&gt;Environment.json
&lt;/h4&gt;&lt;p&gt;Before we do anything, we need to define a few things and names. In &lt;code&gt;.\Resources&lt;/code&gt; open the &lt;code&gt;Environment.json&lt;/code&gt; file and fill in your own information.&lt;/p&gt;
&lt;p&gt;{&lt;br&gt;
&amp;ldquo;TenantId&amp;rdquo;: &amp;ldquo;4bffbf87-53a0-4fce-b58b-xxxxxxxxxxxx&amp;rdquo;,&lt;br&gt;
&amp;ldquo;GroupId&amp;rdquo;: &amp;ldquo;aff7d27f-878d-422c-83bd-xxxxxxxxxxxx&amp;rdquo;,&lt;br&gt;
&amp;ldquo;MSListName&amp;rdquo;: &amp;ldquo;Teams Phone Number Overview Demo&amp;rdquo;,&lt;br&gt;
&amp;ldquo;ResourceGroupName&amp;rdquo;: &amp;ldquo;mzz-rmg-001&amp;rdquo;,&lt;br&gt;
&amp;ldquo;AutomationAccountName&amp;rdquo;: &amp;ldquo;mzz-automation-account-001&amp;rdquo;,&lt;br&gt;
&amp;ldquo;AzLocation&amp;rdquo;: &amp;ldquo;West Europe&amp;rdquo;&lt;br&gt;
}&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TenantId&lt;/strong&gt; is your Tenant Id.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;GroupId&lt;/strong&gt; is the Object Id of the Microsoft Teams Team which hosts the SharePoint site where the list should be created.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;MSListName&lt;/strong&gt; will be the name of your List in SharePoint.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ResourceGroupName&lt;/strong&gt; will be the name of the resource group which is created in Azure.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;AutomationAccountName&lt;/strong&gt; will be the name of the automation account which is created within the new resource group.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;AzLocation&lt;/strong&gt; is the Azure region where you want to deploy the resources.&lt;/p&gt;
&lt;p&gt;You can find a list of all available regions and their names &lt;a class=&#34;link&#34; href=&#34;https://azure.microsoft.com/en-us/explore/global-infrastructure/geographies/#geographies&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Make sure you save the file once you’ve filled in all the information.&lt;/p&gt;
&lt;h4 id=&#34;directroutingnumberscsv&#34;&gt;DirectRoutingNumbers.csv
&lt;/h4&gt;&lt;p&gt;Next, we need a list which contains all your direct routing numbers. This file can only contain one column called &lt;strong&gt;PhoneNumber&lt;/strong&gt;. All the numbers must be in &lt;strong&gt;E.164&lt;/strong&gt; format but without the leading &lt;code&gt;+&lt;/code&gt; . The plus sign will be added by the script later. It just makes things easier in Excel if we don’t need to bother about the plus.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1nnwTg3pq3UCddPisob7HqA.png&#34;
	width=&#34;1461&#34;
	height=&#34;969&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1nnwTg3pq3UCddPisob7HqA_hu7420336003315348163.png 480w, https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1nnwTg3pq3UCddPisob7HqA_hu15924371305969066333.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;150&#34;
		data-flex-basis=&#34;361px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;That’s it for the preparation.&lt;/p&gt;
&lt;h4 id=&#34;deployps1&#34;&gt;Deploy.ps1
&lt;/h4&gt;&lt;p&gt;Disclaimer: The script has been tested on a vanilla Windows 11 virtual machine where &lt;strong&gt;Windows Terminal&lt;/strong&gt; is configured as default console host and sessions start in the parent process directory. No PowerShell modules were installed before the script was first executed on this system.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;You will need an account with Global Administrator rights to successfully run this script. You also need local admin rights and need to make sure that running scripts is allowed on your machine.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In an elevated terminal, run the following code and close the terminal session once you have done so.&lt;/p&gt;
&lt;p&gt;Set-ExecutionPolicy Bypass&lt;/p&gt;
&lt;p&gt;To start the deployment, you need to run the &lt;code&gt;Deploy.ps1&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1WKugBxPGMHPFT71q8WUN1g.png&#34;
	width=&#34;618&#34;
	height=&#34;582&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1WKugBxPGMHPFT71q8WUN1g_hu9748863606125509951.png 480w, https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1WKugBxPGMHPFT71q8WUN1g_hu13008471837373925715.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;106&#34;
		data-flex-basis=&#34;254px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;This will just call the &lt;code&gt;.\Setup\Setup.ps1&lt;/code&gt; script which is the real deal.&lt;/p&gt;
&lt;h4 id=&#34;setupps1&#34;&gt;Setup.ps1
&lt;/h4&gt;&lt;p&gt;After all the module and components checks have been completed or the missing components have been installed, you will be prompted to sign into the &lt;a class=&#34;link&#34; href=&#34;https://pnp.github.io/cli-microsoft365/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;M365 CLI&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1ZuLzxPnboF940mSkOnUFqA.png&#34;
	width=&#34;2430&#34;
	height=&#34;1392&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1ZuLzxPnboF940mSkOnUFqA_hu1738372814427355878.png 480w, https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1ZuLzxPnboF940mSkOnUFqA_hu12566719588411974285.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;174&#34;
		data-flex-basis=&#34;418px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Let me explain what’s going on in the script. Our end goal is to have a SharePoint list. Since we need a script to automatically update the list anyway, we might as well just create the list through PowerShell and Microsoft Graph instead of creating it manually.&lt;/p&gt;
&lt;p&gt;To provision all this stuff, we need a couple of &lt;strong&gt;Az.*&lt;/strong&gt; PowerShell modules. We also need &lt;strong&gt;Node.JS&lt;/strong&gt; so we can install the &lt;strong&gt;CLI for Microsoft 365&lt;/strong&gt; through &lt;strong&gt;NPM&lt;/strong&gt; (Node Package Manager). If you miss any of the components on your machine, they will automatically be installed, if you can provide local admin rights.&lt;/p&gt;
&lt;h4 id=&#34;azure-ad-app-registration--service-principal&#34;&gt;Azure AD App Registration &amp;amp; Service Principal
&lt;/h4&gt;&lt;p&gt;The M365 CLI will create a new Azure AD App Registration and a Service Principal. It will also assign the Microsoft Graph permission scopes we need to create and modify SharePoint lists and manage Microsoft Teams to the Service Principal.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1PKYwJDYOIAvgJi8us8uUMQ.png&#34;
	width=&#34;1928&#34;
	height=&#34;1395&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1PKYwJDYOIAvgJi8us8uUMQ_hu628719541228874123.png 480w, https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1PKYwJDYOIAvgJi8us8uUMQ_hu4252450136310480715.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;138&#34;
		data-flex-basis=&#34;331px&#34;
	
&gt;
&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1EvALgsWAXkRfjYM5WjZMGQ.png&#34;
	width=&#34;2616&#34;
	height=&#34;1297&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1EvALgsWAXkRfjYM5WjZMGQ_hu12551621545973388717.png 480w, https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1EvALgsWAXkRfjYM5WjZMGQ_hu11938362031274274548.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;201&#34;
		data-flex-basis=&#34;484px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Both the App Registration and the Service Principal will use the name of the Automation Account. This way it’s easy to know where the assigned permissions are used within Azure.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1BFgrZUU3EnaOZDB1SutpQ.png&#34;
	width=&#34;1303&#34;
	height=&#34;115&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1BFgrZUU3EnaOZDB1SutpQ_hu12104806406663318733.png 480w, https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1BFgrZUU3EnaOZDB1SutpQ_hu2560773076815812756.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;1133&#34;
		data-flex-basis=&#34;2719px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;The script also creates a new client secret for the App Registration.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1a2XyZpLjkpZ0HOfLCL32PA.png&#34;
	width=&#34;1950&#34;
	height=&#34;778&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1a2XyZpLjkpZ0HOfLCL32PA_hu16804943997998076463.png 480w, https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1a2XyZpLjkpZ0HOfLCL32PA_hu1784546163970375950.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;250&#34;
		data-flex-basis=&#34;601px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Remember, a client secret can only be viewed once, after it has been created in the portal. Because we used the CLI to create it, we can’t view it in the portal anymore. The secret is received by the script and saved in an encrypted state though. You’ll also be prompted if you want to view it in case you want to copy and store it in a safe place.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1zitK266ZKs6EST13zGeKCA.png&#34;
	width=&#34;2207&#34;
	height=&#34;120&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1zitK266ZKs6EST13zGeKCA_hu17009502861554730949.png 480w, https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1zitK266ZKs6EST13zGeKCA_hu14383668118895981549.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;1839&#34;
		data-flex-basis=&#34;4414px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;You don’t have to do this if you don’t want to. You can always decrypt it again, as long as you&amp;rsquo;re using the same machine and user account which encrypted it. The secret is saved to &lt;code&gt;.\.local\AppSecret.txt&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1tWTZ8tk39JcYjIvwgY5xeA.png&#34;
	width=&#34;1891&#34;
	height=&#34;825&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1tWTZ8tk39JcYjIvwgY5xeA_hu14503050665586540485.png 480w, https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1tWTZ8tk39JcYjIvwgY5xeA_hu6908719458392625942.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;229&#34;
		data-flex-basis=&#34;550px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;If you want to manually decrypt it later, you can use the following code.&lt;/p&gt;
&lt;p&gt;$AppSecret = [Runtime.InteropServices.Marshal]::PtrToStringAuto([Runtime.InteropServices.Marshal]::SecureStringToBSTR((Get-Content -Path .\.local\AppSecret.txt | ConvertTo-SecureString))) | Out-String&lt;/p&gt;
&lt;p&gt;Again, you don’t have to if you don’t want to. The script will be able to decrypt the secret and upload it to the Azure Automation Account once it’s needed.&lt;/p&gt;
&lt;p&gt;Once the permissions have been assigned to the Service Principal, the script uses the same Service Principal to connect to Microsoft Graph and assign the &lt;strong&gt;Skype for Business Administrator&lt;/strong&gt; role to itself.&lt;/p&gt;
&lt;p&gt;This is possible because the M365 CLI previously assigned the scope &lt;strong&gt;RoleManagement.ReadWrite.Directory&lt;/strong&gt; to the Service Principal.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1dprD8JGRDPs2yAJnvlPlwQ.png&#34;
	width=&#34;1927&#34;
	height=&#34;594&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1dprD8JGRDPs2yAJnvlPlwQ_hu2521952375755313016.png 480w, https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1dprD8JGRDPs2yAJnvlPlwQ_hu2023675420590957891.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;324&#34;
		data-flex-basis=&#34;778px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;The role is needed for the SP to be able to manage Microsoft Teams via PowerShell. I learned this from Christian Frohn’s excellent &lt;a class=&#34;link&#34; href=&#34;https://www.christianfrohn.dk/2022/11/13/connect-to-microsoft-teams-powershell-using-azure-app-reg-service-principal/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;blog article&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In case you’re wondering why no &lt;strong&gt;Microsoft.Graph&lt;/strong&gt; modules are required; this is because I chose to work with PowerShell native &lt;code&gt;Invoke-RestMethod&lt;/code&gt; commands instead of the &lt;code&gt;*Mg*&lt;/code&gt; Cmdlets.&lt;/p&gt;
&lt;h4 id=&#34;provisioning-the-azure-resources&#34;&gt;Provisioning the Azure Resources
&lt;/h4&gt;&lt;p&gt;The previous steps complete rather fast. The next steps are going to take a bit longer. First you need to sign in with an Account which has the appropriate permissions to create Azure resources within your subscription.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1pOaJ1YELOvcHWdcLOuFeGQ.png&#34;
	width=&#34;855&#34;
	height=&#34;1173&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1pOaJ1YELOvcHWdcLOuFeGQ_hu12423936407407251308.png 480w, https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1pOaJ1YELOvcHWdcLOuFeGQ_hu2576090682287172705.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;72&#34;
		data-flex-basis=&#34;174px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;I guess it would have been possible to also assign some RBAC roles to the Service Principal which would allow us to use it to sign into Azure as well. Since the script is run locally on demand, I see no problem with using a normal user account for this part. It actually gives us time to review the created App Registration and Service Principal before the script starts to deploy any resources to Azure. Furthermore, we don’t need to worry about being aware of yet another Service Principal which has permissions to deploy or remove Azure Resources.&lt;/p&gt;
&lt;p&gt;The script will create a Resource Group with the name and location defined in &lt;strong&gt;Environment.json.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1ZZGYVP7g2uj2hi3O08RlzA.png&#34;
	width=&#34;1536&#34;
	height=&#34;469&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1ZZGYVP7g2uj2hi3O08RlzA_hu12328998633343885440.png 480w, https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1ZZGYVP7g2uj2hi3O08RlzA_hu9245545878436462193.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;327&#34;
		data-flex-basis=&#34;786px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;It will also create a new Automation Account within the Resource Group, also in the same region.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1RvDl30FW8xOAHs3EUA3Q.png&#34;
	width=&#34;1508&#34;
	height=&#34;889&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1RvDl30FW8xOAHs3EUA3Q_hu5916587929442359445.png 480w, https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1RvDl30FW8xOAHs3EUA3Q_hu8654995187748697666.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;169&#34;
		data-flex-basis=&#34;407px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;automation-account&#34;&gt;Automation Account
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;Modules&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;MicrosoftTeams&lt;/strong&gt; Module is not added to Automation Accounts by default. Thus, the script needs to add it. This usually takes a couple of Minutes.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1RnQgpNQ3dOLfk0aDigurUQ.png&#34;
	width=&#34;1032&#34;
	height=&#34;427&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1RnQgpNQ3dOLfk0aDigurUQ_hu5455091922142964141.png 480w, https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1RnQgpNQ3dOLfk0aDigurUQ_hu3881820365725881220.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;241&#34;
		data-flex-basis=&#34;580px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Once the module has finished importing, the script will continue.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1msSR1JykOc4mieC9hExE2g.png&#34;
	width=&#34;1922&#34;
	height=&#34;409&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1msSR1JykOc4mieC9hExE2g_hu5981936367768885265.png 480w, https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1msSR1JykOc4mieC9hExE2g_hu11184621637238366839.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;469&#34;
		data-flex-basis=&#34;1127px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Variables&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The main script which will create/update our SharePoint List needs access to all the data we initially defined in &lt;strong&gt;Environment.josn&lt;/strong&gt;. This information is stored in &lt;strong&gt;Automation Variables&lt;/strong&gt; which can be accessed through Azure Runbooks.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1DBUuoXrqsTiu4XcayfA.png&#34;
	width=&#34;2456&#34;
	height=&#34;692&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1DBUuoXrqsTiu4XcayfA_hu17329671445478299771.png 480w, https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1DBUuoXrqsTiu4XcayfA_hu14628800878936498176.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;354&#34;
		data-flex-basis=&#34;851px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;The client secret is stored as an encrypted variable and cannot be viewed or edited. Its content can only be accessed by using the internal Cmdlet &lt;code&gt;Get-AutomationVariable&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;We can also see that we have a variable called &lt;strong&gt;TeamsPhoneNumberOverview_DirectRoutingNumbers.&lt;/strong&gt; This variable stores all Direct Routing numbers in &lt;strong&gt;Json&lt;/strong&gt; format. Because I ran into some issues with storing the Json content as a string, I needed to get creative and enclose it in single quotes: &lt;code&gt;&#39;{&amp;quot;Json&amp;quot;: &amp;quot;Example&amp;quot;}&#39;&lt;/code&gt; . These get removed when the variable is imported through the Runbook so that the Json can be converted to a PowerShell object.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TeamsPhoneNumberOverview_CountryLookupTable&lt;/strong&gt; contains a list with all countries and prefixes to determine the country of Direct Routing Numbers. To be consistent, this is also applied to Calling Plan and Operator Connect numbers, even though this information would be available through &lt;code&gt;Get-CsPhoneNumberAssignment&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;If you would like to learn more about these internal Cmdlets for Automation Variables or Azure Runbooks in general, I recommend this &lt;a class=&#34;link&#34; href=&#34;https://heusser.pro/p/fix-utf-8-encoding-when-calling-azure-child-runbooks-inline-78644e6af242&#34; &gt;article&lt;/a&gt; of mine.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Runbooks&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;We also have a couple of Runbooks which were deployed by the &lt;strong&gt;Setup.ps1&lt;/strong&gt; script. The main script logic sits in &lt;strong&gt;TeamsPhoneNumberOverview&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1cqbLWUjMSR1NhjCXqoCIg.png&#34;
	width=&#34;1901&#34;
	height=&#34;609&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1cqbLWUjMSR1NhjCXqoCIg_hu17662722193105010062.png 480w, https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1cqbLWUjMSR1NhjCXqoCIg_hu83086809004846643.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;312&#34;
		data-flex-basis=&#34;749px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;To make the solution more modular some functions, like &lt;strong&gt;Connect-MgGraphHTTP&lt;/strong&gt; or &lt;strong&gt;Connect-MsTeamsServicePrincipal&lt;/strong&gt; are stored in separate Runbooks. This makes it easier to reuse them and means less work if we want to extend the Automation Account with other scripts.&lt;/p&gt;
&lt;p&gt;For example, if you have another Runbook in the same Automation Account which needs to connect to MicrosoftTeams PowerShell as well, you can just use the following code.&lt;/p&gt;
&lt;p&gt;. .\Connect-MsTeamsServicePrincipal.ps1&lt;/p&gt;
&lt;p&gt;$TenantId = Get-AutomationVariable -Name &amp;ldquo;TeamsPhoneNumberOverview_TenantId&amp;rdquo;&lt;br&gt;
$AppId = Get-AutomationVariable -Name &amp;ldquo;TeamsPhoneNumberOverview_AppId&amp;rdquo;&lt;br&gt;
$AppSecret = Get-AutomationVariable -Name &amp;ldquo;TeamsPhoneNumberOverview_AppSecret&amp;rdquo;&lt;/p&gt;
&lt;p&gt;. Connect-MsTeamsServicePrincipal -TenantId $TenantId -AppId $AppId -AppSecret $AppSecret&lt;/p&gt;
&lt;p&gt;And if you ever need to adjust something in the login function, you only need to change it in one script (Connect-MsTeamsServicePrincipal) and not in all your Runbooks.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Script Logic&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The code for the main script logic can be found here.&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/mozziemozz/TeamsPhoneAutomation/blob/main/Scripts/TeamsPhoneNumberOverview.ps1&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;TeamsPhoneAutomation/TeamsPhoneNumberOverview.ps1 at main · mozziemozz/TeamsPhoneAutomation (github.com)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I asked ChatGPT to explain what the script does. The result is astonishing.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This PowerShell script is designed to gather information about Microsoft Teams users who have phone numbers assigned to them, and store this information in a SharePoint list.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;The script starts by importing four external functions, which are used later in the script. It then sets some variables by retrieving values from Azure Automation variables. These variables include the name of the SharePoint list where the data will be stored, as well as the credentials needed to connect to the Microsoft Teams and Graph APIs.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Next, the script imports Direct Routing numbers and adds a leading plus sign to all of them. It also retrieves a list of existing SharePoint lists for a specific group ID, and checks if the desired SharePoint list already exists. If it does, the script retrieves its ID. If not, a new SharePoint list is created and its ID is retrieved.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;The script then retrieves information about all Teams users who have a phone number assigned to them. For each user, the script determines if they are a user or resource account, and then extracts details about their phone number, such as the phone number itself, any extension, and the country associated with the number. The script also checks if the phone number is a Direct Routing number or a CsOnline number. Finally, it creates an object containing all of this information for each user, and adds this object to an array.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Once all of the user information has been gathered, the script writes it to the SharePoint list. Each object in the array is written to a new row in the list.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The only thing I would have added is to mention that the script only adds new entries to the list, only updates changed entries with the new values and removes entries from the list which no longer exist.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Schedules&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The setup script has also created a recurring schedule which runs every hour. The schedule is automatically linked to the &lt;strong&gt;TeamsPhoneNumberOverview&lt;/strong&gt; Runbook by the script. This will result in the SharePoint list being updated once an hour.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1Iemob3BqBPX6OWWHvggsQ.png&#34;
	width=&#34;2217&#34;
	height=&#34;1137&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1Iemob3BqBPX6OWWHvggsQ_hu16274124544714025900.png 480w, https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1Iemob3BqBPX6OWWHvggsQ_hu16877098418643910402.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;194&#34;
		data-flex-basis=&#34;467px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;That’s it. These are all the resources and components we need to create and update the SharePoint List.&lt;/p&gt;
&lt;h4 id=&#34;running-therunbook&#34;&gt;Running the Runbook
&lt;/h4&gt;&lt;p&gt;The Runbook schedule is configured in UTC. The first start time needs to be at least 5 minutes after the schedule’s creation time. To be sure, I set the schedule to run at the next full hour + 2 hours. In case this does not work for you in your local time zone, please let me know.&lt;/p&gt;
&lt;p&gt;This means that the SharePoint List won’t be created straight away. If you want to manually run the Runbook before the first scheduled start, just click on &lt;strong&gt;Start.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1qROsEUEs8dXdkq8CwSOaxQ.png&#34;
	width=&#34;1597&#34;
	height=&#34;193&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1qROsEUEs8dXdkq8CwSOaxQ_hu17269391770022077107.png 480w, https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1qROsEUEs8dXdkq8CwSOaxQ_hu5526605351195629657.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;827&#34;
		data-flex-basis=&#34;1985px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;The job will just take a couple of minutes to complete.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1mp22izPK5jCc85FUtfZAkQ.png&#34;
	width=&#34;1120&#34;
	height=&#34;188&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1mp22izPK5jCc85FUtfZAkQ_hu12442231711498455485.png 480w, https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1mp22izPK5jCc85FUtfZAkQ_hu12341956214678005585.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;595&#34;
		data-flex-basis=&#34;1429px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;You should then see the newly created List in SharePoint or Microsoft Lists.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1ER7l4q30cUIBaDndrjJfIQ.png&#34;
	width=&#34;2846&#34;
	height=&#34;1476&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1ER7l4q30cUIBaDndrjJfIQ_hu485707528944246067.png 480w, https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1ER7l4q30cUIBaDndrjJfIQ_hu10579042369273683168.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;192&#34;
		data-flex-basis=&#34;462px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;finishing-touches&#34;&gt;Finishing Touches
&lt;/h3&gt;&lt;p&gt;Unfortunately, the Graph API has some limitations in terms of what types of fields can be added or updated in a list. I wanted to perfect my solution by also having a User Profile column and a link to Teams Admin Center for all assigned user numbers. These types can only be added manually.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; For this and the next part, it’s extremely important to follow my instructions very carefully. If the column names don’t match up with the Flow it will not work.&lt;/p&gt;
&lt;h4 id=&#34;add-two-additional-columns&#34;&gt;Add Two Additional Columns
&lt;/h4&gt;&lt;p&gt;Click on &lt;strong&gt;+ Add column&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1KBxfdw50SMnsnhVzMCx5A.png&#34;
	width=&#34;831&#34;
	height=&#34;634&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1KBxfdw50SMnsnhVzMCx5A_hu9857927334283026096.png 480w, https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1KBxfdw50SMnsnhVzMCx5A_hu30338743958843881.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;131&#34;
		data-flex-basis=&#34;314px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Name the column &lt;strong&gt;User Profile&lt;/strong&gt; and toggle &lt;strong&gt;Show profile photos&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1nYyOkp3UFJxGdomb1w4bDg.png&#34;
	width=&#34;477&#34;
	height=&#34;678&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1nYyOkp3UFJxGdomb1w4bDg_hu16241982893996335433.png 480w, https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1nYyOkp3UFJxGdomb1w4bDg_hu12717941061440294803.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;70&#34;
		data-flex-basis=&#34;168px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Repeat the steps and choose &lt;strong&gt;Hyperlink&lt;/strong&gt; this time.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1zQUl6GTYbNQymUbAQ9IU1g.png&#34;
	width=&#34;835&#34;
	height=&#34;634&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1zQUl6GTYbNQymUbAQ9IU1g_hu17801596450819210556.png 480w, https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1zQUl6GTYbNQymUbAQ9IU1g_hu1759064315651568602.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;131&#34;
		data-flex-basis=&#34;316px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Name this column &lt;strong&gt;Teams Admin Center.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Now let’s create the final part of our Number Overview Solution: A Power Automate Flow.&lt;/p&gt;
&lt;h4 id=&#34;create-theflow&#34;&gt;&lt;strong&gt;Create The Flow&lt;/strong&gt;
&lt;/h4&gt;&lt;p&gt;Head over to &lt;a class=&#34;link&#34; href=&#34;https://make.powerautomate.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Microsoft Power Automate&lt;/a&gt; and create a new &lt;strong&gt;Automated Cloud Flow&lt;/strong&gt;. Name your flow and select &lt;strong&gt;When an item is created or modified&lt;/strong&gt; (SharePoint) as the trigger.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1eMzuzJ4sgXqtppTIWtTLbw.png&#34;
	width=&#34;1334&#34;
	height=&#34;841&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1eMzuzJ4sgXqtppTIWtTLbw_hu15434916197464126541.png 480w, https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1eMzuzJ4sgXqtppTIWtTLbw_hu699291084787241551.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;158&#34;
		data-flex-basis=&#34;380px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Select the Site/Team where your list has been created from the drop-down menu in &lt;strong&gt;Site Address.&lt;/strong&gt; Then choose your list from the drop-down.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1ruBvckSCFoyJbi3abfZbCQ.png&#34;
	width=&#34;929&#34;
	height=&#34;320&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1ruBvckSCFoyJbi3abfZbCQ_hu18311569388371213068.png 480w, https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1ruBvckSCFoyJbi3abfZbCQ_hu14790218434502856176.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;290&#34;
		data-flex-basis=&#34;696px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Next, click on the three dots and select &lt;strong&gt;Settings.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1Kq7ExjGCW7nsIjO5gPMw.png&#34;
	width=&#34;1347&#34;
	height=&#34;742&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1Kq7ExjGCW7nsIjO5gPMw_hu10425715871785456751.png 480w, https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1Kq7ExjGCW7nsIjO5gPMw_hu9164779854127543778.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;181&#34;
		data-flex-basis=&#34;435px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Add a &lt;strong&gt;Trigger Condition&lt;/strong&gt; and add the following code exactly as it is.&lt;/p&gt;
&lt;p&gt;@or(and(not(equals(triggerOutputs()?[&amp;lsquo;body/User_x0020_Principal_x0020_Name&amp;rsquo;], &amp;lsquo;Unassigned&amp;rsquo;)),not(contains(triggerBody(), &amp;lsquo;UserProfile&amp;rsquo;))),not(equals(triggerOutputs()?[&amp;lsquo;body/User_x0020_Principal_x0020_Name&amp;rsquo;],triggerOutputs()?[&amp;lsquo;body/UserProfile&amp;rsquo;][&amp;lsquo;Email&amp;rsquo;])))&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1mC9t4BUoxiJfqTSIonWsA.png&#34;
	width=&#34;920&#34;
	height=&#34;1358&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1mC9t4BUoxiJfqTSIonWsA_hu16706078266552867420.png 480w, https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1mC9t4BUoxiJfqTSIonWsA_hu13111066993350739067.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;67&#34;
		data-flex-basis=&#34;162px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;This is the most crucial step. Without a trigger condition, we would create an infinite trigger loop since we use &lt;strong&gt;When an item is created or modified&lt;/strong&gt; as trigger and our final action will be &lt;strong&gt;Update item&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Add a &lt;strong&gt;Condition&lt;/strong&gt; where it checks if the &lt;strong&gt;User Principal Name&lt;/strong&gt; is equal to &lt;strong&gt;Unassigned.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1ynIuEDsOPU7mh4mGx7VQw.png&#34;
	width=&#34;945&#34;
	height=&#34;331&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1ynIuEDsOPU7mh4mGx7VQw_hu10348789931865596871.png 480w, https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1ynIuEDsOPU7mh4mGx7VQw_hu14682866226436690458.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;285&#34;
		data-flex-basis=&#34;685px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;If the condition is &lt;strong&gt;True&lt;/strong&gt; or in other words, if the value of the &lt;strong&gt;User Principal Name&lt;/strong&gt; field is unassigned, we want to delete the list item.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1t4gRY6Gv6nOZqhgCQ9IF7w.png&#34;
	width=&#34;970&#34;
	height=&#34;609&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1t4gRY6Gv6nOZqhgCQ9IF7w_hu1035222855104975519.png 480w, https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1t4gRY6Gv6nOZqhgCQ9IF7w_hu1039739518167060785.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;159&#34;
		data-flex-basis=&#34;382px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Keep in mind that the flow is only triggered if our trigger condition is met. It took me quite some time and a lot of binging to figure out a working trigger condition for this scenario. (Yes, I really found the answer on Bing without any googling!).&lt;/p&gt;
&lt;p&gt;The condition consists of an &lt;strong&gt;and&lt;/strong&gt; operator and an &lt;strong&gt;or&lt;/strong&gt; operator. In English, it checks for the following:&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;User Principal Name&lt;/strong&gt; is not &lt;strong&gt;Unassigned&lt;/strong&gt; and the &lt;strong&gt;User Profile&lt;/strong&gt; is empty.&lt;/p&gt;
&lt;p&gt;This means that the flow will trigger if the number is assigned to a user, but the &lt;strong&gt;User Profile&lt;/strong&gt; is not populated yet.&lt;/p&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;User Principal Name&lt;/strong&gt; is not the same as the &lt;strong&gt;User Profile.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The flow also triggers if the &lt;strong&gt;User Profile&lt;/strong&gt; is already populated but it doesn’t match the &lt;strong&gt;User Principal Name&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;I didn’t find a way to delete the &lt;strong&gt;User Profile&lt;/strong&gt; if any given number changes from &lt;strong&gt;Assigned&lt;/strong&gt; to &lt;strong&gt;Unassigned.&lt;/strong&gt; Unfortunately, setting the filed to &lt;code&gt;null&lt;/code&gt; via the flow did not work. Because of that we just delete the list item using &lt;strong&gt;Delete item&lt;/strong&gt;. The number will be added back to the list with its up to date information as soon as the Runbook runs again.&lt;/p&gt;
&lt;p&gt;In the &lt;strong&gt;If no&lt;/strong&gt; action of the condition, we need to add another condition. This time, we want to check if the &lt;strong&gt;Account Type&lt;/strong&gt; is equal to &lt;strong&gt;User Account&lt;/strong&gt;. We only want to include a link to Teams Admin Center if it’s a user account.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1KSugJSu7Fc1kD6QiBAKPg.png&#34;
	width=&#34;1966&#34;
	height=&#34;413&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1KSugJSu7Fc1kD6QiBAKPg_hu9649712969844201337.png 480w, https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1KSugJSu7Fc1kD6QiBAKPg_hu12475211371583300658.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;476&#34;
		data-flex-basis=&#34;1142px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;In this condition, we only configure actions if it’s &lt;strong&gt;True&lt;/strong&gt;. First, we update the list item. Select your &lt;strong&gt;Site Address&lt;/strong&gt; and &lt;strong&gt;List Name&lt;/strong&gt; again. Then fill in the &lt;strong&gt;ID&lt;/strong&gt; and &lt;strong&gt;Title&lt;/strong&gt; from dynamic content. And finally, in &lt;strong&gt;User Profile Claims&lt;/strong&gt; select &lt;strong&gt;Enter custom value&lt;/strong&gt; and choose &lt;strong&gt;User Principal Name&lt;/strong&gt; from dynamic content. Leave all the other fields blank.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1THXkqvbzDa3lKzVmDmqHww.png&#34;
	width=&#34;967&#34;
	height=&#34;1245&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1THXkqvbzDa3lKzVmDmqHww_hu9203795056667489525.png 480w, https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1THXkqvbzDa3lKzVmDmqHww_hu12554268123929812798.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;77&#34;
		data-flex-basis=&#34;186px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Add another action and choose &lt;strong&gt;Send an HTTP request to SharePoint&lt;/strong&gt;. The &lt;strong&gt;Update item&lt;/strong&gt; action only supports hyperlinks without a description so it would show the entire URL instead of a friendly name in the list. Although it’s more complicated, we can add a hyperlink with a friendly name using &lt;strong&gt;Send an HTTP request to SharePoint&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Fill in your &lt;strong&gt;Site Address&lt;/strong&gt; again and set the &lt;strong&gt;Method&lt;/strong&gt; to &lt;strong&gt;POST.&lt;/strong&gt; The &lt;strong&gt;Uri&lt;/strong&gt; must look like this:&lt;/p&gt;
&lt;p&gt;_api/web/lists/GetByTitle(&amp;lsquo;Teams Phone Number Overview Demo 10&amp;rsquo;)/items(@{triggerOutputs()?[&amp;lsquo;body/ID&amp;rsquo;]})&lt;/p&gt;
&lt;p&gt;Make sure to adjust the list name in case your list is named differently. Spaces inside the single quotes are supported in this field.&lt;/p&gt;
&lt;p&gt;Click the little icon next to the &lt;strong&gt;Headers&lt;/strong&gt; field to engage &lt;strong&gt;Switch Headers to text mode&lt;/strong&gt; and paste the following Json:&lt;/p&gt;
&lt;p&gt;{&lt;br&gt;
&amp;ldquo;Content-Type&amp;rdquo;: &amp;ldquo;application/json;odata=verbose&amp;rdquo;,&lt;br&gt;
&amp;ldquo;X-HTTP-Method&amp;rdquo;: &amp;ldquo;MERGE&amp;rdquo;,&lt;br&gt;
&amp;ldquo;IF-MATCH&amp;rdquo;: &amp;ldquo;*&amp;rdquo;&lt;br&gt;
}&lt;/p&gt;
&lt;p&gt;Then paste the following Json content in the &lt;strong&gt;Body&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;{&lt;br&gt;
&amp;ldquo;__metadata&amp;rdquo;: {&lt;br&gt;
&amp;ldquo;type&amp;rdquo;: &amp;ldquo;SP.Data.Teams_x0020_Phone_x0020_Number_x0020_Demo_x0020_10ListItem&amp;rdquo;&lt;br&gt;
},&lt;br&gt;
&amp;ldquo;TeamsAdminCenter&amp;rdquo;: {&lt;br&gt;
&amp;ldquo;Description&amp;rdquo;: &amp;ldquo;Teams Admin Center&amp;rdquo;,&lt;br&gt;
&amp;ldquo;Url&amp;rdquo;: &amp;ldquo;&lt;a class=&#34;link&#34; href=&#34;https://admin.teams.microsoft.com/users/@%7btriggerOutputs%28%29&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://admin.teams.microsoft.com/users/@{triggerOutputs()&lt;/a&gt;?[&amp;lsquo;body/UserId&amp;rsquo;]}/account&amp;rdquo;&lt;br&gt;
}&lt;br&gt;
}&lt;/p&gt;
&lt;p&gt;Again, make sure to adjust the list name to your own. There is no space or any other character between the end of the list name and &lt;code&gt;ListItem&lt;/code&gt; . All spaces in the list name must be replaced by &lt;code&gt;_x0020_&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1cfiipG861HDIM3jYlRBIVA.png&#34;
	width=&#34;964&#34;
	height=&#34;1381&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1cfiipG861HDIM3jYlRBIVA_hu6080956423227257411.png 480w, https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1cfiipG861HDIM3jYlRBIVA_hu13849552352158918998.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;69&#34;
		data-flex-basis=&#34;167px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;If you look at the trigger condition again, you might have noticed that the field names like &lt;strong&gt;User Principal Name&lt;/strong&gt; are all written like this: &lt;strong&gt;User_x0020_Principal_x0020_Name.&lt;/strong&gt; I noticed that all columns which contain spaces and have been created via the Graph API are named this way. &lt;strong&gt;Teams Admin Center&lt;/strong&gt; on the other hand has been created manually via SharePoint Online. This column&amp;rsquo;s reference name is now &lt;strong&gt;TeamsAdminCenter&lt;/strong&gt; as you can see in the screenshot above.&lt;/p&gt;
&lt;p&gt;That’s it, we finished building our flow. For reference, here’s the complete layout of the flow without expanded actions.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/131pEBoBjwrnmLnXAWpI1fw.png&#34;
	width=&#34;3004&#34;
	height=&#34;1558&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/131pEBoBjwrnmLnXAWpI1fw_hu17737376313005440532.png 480w, https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/131pEBoBjwrnmLnXAWpI1fw_hu15761913774091135598.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;192&#34;
		data-flex-basis=&#34;462px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;force-sync-thelist&#34;&gt;Force Sync the List
&lt;/h3&gt;&lt;p&gt;The only problem now is that it won’t be triggered unless the &lt;strong&gt;User Principal Name&lt;/strong&gt; field changes on any of the list entries. The easiest way to get these fields populated is to just delete all list entries of assigned user numbers and re-run the Runbook.&lt;/p&gt;
&lt;p&gt;Filter the list by &lt;strong&gt;Assigned&lt;/strong&gt; numbers and Account Type: &lt;strong&gt;User Account&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1oy8uFABozWsg4AIlK3vuaA.png&#34;
	width=&#34;2748&#34;
	height=&#34;410&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1oy8uFABozWsg4AIlK3vuaA_hu4197159049839845805.png 480w, https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1oy8uFABozWsg4AIlK3vuaA_hu5638060768312407917.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;670&#34;
		data-flex-basis=&#34;1608px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Then delete all the entries and wait for the action to complete.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1MlCWdIO1Y8DSyWObydkRFw.png&#34;
	width=&#34;955&#34;
	height=&#34;530&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1MlCWdIO1Y8DSyWObydkRFw_hu12830020151933510823.png 480w, https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1MlCWdIO1Y8DSyWObydkRFw_hu4211334589026933002.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;180&#34;
		data-flex-basis=&#34;432px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Now start the Runbook again or wait for the next scheduled job. Once the job has completed, wait another few minutes for the flow to be triggered.&lt;/p&gt;
&lt;p&gt;In the flow’s run history, you should then be able to see a couple of successful flow runs. One for each assigned user number which was previously deleted from the list.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1f5SBjLNb00UmmWwtZCQ.png&#34;
	width=&#34;1604&#34;
	height=&#34;360&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1f5SBjLNb00UmmWwtZCQ_hu6824442472865550613.png 480w, https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1f5SBjLNb00UmmWwtZCQ_hu4407698767222602344.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;445&#34;
		data-flex-basis=&#34;1069px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;In the details of the flow run, we can see that both the item was updated, and that the HTTP request was made to SharePoint.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1Gf3bQf6h3rT6dZtQNarGw.png&#34;
	width=&#34;2995&#34;
	height=&#34;1322&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1Gf3bQf6h3rT6dZtQNarGw_hu12771665654703405195.png 480w, https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1Gf3bQf6h3rT6dZtQNarGw_hu17401642866898571548.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;226&#34;
		data-flex-basis=&#34;543px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;In our SharePoint List, we can now see that both the &lt;strong&gt;User Profile&lt;/strong&gt; and the link to &lt;strong&gt;Teams Admin Center&lt;/strong&gt; have been populated.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1cBT73cmZmnoEZNRofNOWaQ.png&#34;
	width=&#34;2750&#34;
	height=&#34;393&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1cBT73cmZmnoEZNRofNOWaQ_hu2828431880505886151.png 480w, https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1cBT73cmZmnoEZNRofNOWaQ_hu4019540407566092040.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;699&#34;
		data-flex-basis=&#34;1679px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;updating-the-direct-routing-numbers-inazure&#34;&gt;Updating the Direct Routing Numbers in Azure
&lt;/h4&gt;&lt;p&gt;Chances are that you’re going to have more/new Direct Routing numbers at some point. For that scenario, I created another script in &lt;code&gt;.\Setup\UpdateDirectRoutingNumbers.ps1&lt;/code&gt; . This script will compare the contents of the local &lt;strong&gt;DirectRoutingNumbers.csv&lt;/strong&gt; with what’s stored in the Azure Automation Variable. If the content is not the same, the script will &lt;strong&gt;overwrite&lt;/strong&gt; the content of the Automation Variable with your new local source list. This means that you will always need to include all your Direct Routing numbers in the local CSV file, not just new numbers. If you remove numbers from the local source, they will also be removed from the Automation Variable. Hopefully, you won’t have to do this too often.&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/mozziemozz/TeamsPhoneAutomation/blob/main/Setup/UpdateDirectRoutingNumbers.ps1&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;TeamsPhoneAutomation/UpdateDirectRoutingNumbers.ps1 at main · mozziemozz/TeamsPhoneAutomation (github.com)&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;conclusion&#34;&gt;Conclusion
&lt;/h3&gt;&lt;p&gt;While this may be a read-only solution and it doesn’t have any management capabilities such as assigning or unassigning phone numbers, I still believe that there’s tremendous value in this. I think that this could be an interesting approach for smaller companies or non-profit organizations which might not have the cash to purchase an expensive number management solution. The costs for running a Runbook job every now and then should be fairly low. According to &lt;a class=&#34;link&#34; href=&#34;https://azure.microsoft.com/en-us/pricing/details/automation/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;this website&lt;/a&gt; 500 minutes of Job run time is free every month.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/109Skrvola5ZGSYdJONlA.png&#34;
	width=&#34;1952&#34;
	height=&#34;656&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/109Skrvola5ZGSYdJONlA_hu4601254848234421896.png 480w, https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/109Skrvola5ZGSYdJONlA_hu9995053639747255089.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;297&#34;
		data-flex-basis=&#34;714px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Of course, this depends on the amount of numbers you have. The more numbers you have, the longer it will take for a job to complete. If we assume that each job requires 5 minutes to run, that would be about $ 6.5 per month if the job runs every hour every day of a month.&lt;/p&gt;
&lt;p&gt;With this, we can finally have a complete, dynamically updated list of all our phone numbers and their state regarding their type. On top of that, we can make it accessible easily for all users or admins who need to work with this kind of information. For example, we could also add the list as a Tab in a Microsoft Teams Channel.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1pmmbdHeT9HfnoslqhEkrQ.png&#34;
	width=&#34;3454&#34;
	height=&#34;1117&#34;
	srcset=&#34;https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1pmmbdHeT9HfnoslqhEkrQ_hu13303951713798137202.png 480w, https://heusser.pro/p/teams-phone-number-management-on-a-budget-e25d53f65caf/1pmmbdHeT9HfnoslqhEkrQ_hu9841713117716791495.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;309&#34;
		data-flex-basis=&#34;742px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;final-notes&#34;&gt;Final Notes
&lt;/h4&gt;&lt;p&gt;I invested a lot of time to perfect this project and I’m incredibly happy to be finally able to share it with the community and my readers on Medium. I tested both the deployment to Azure and the Runbook logic quite a few times so I’m fairly confident that this should work in other Tenants as well. Since I don’t have any Operator Connect numbers available, I couldn’t test that yet. If you are an Operator Connect customer and want to try this solution, feel free to let me know if it worked for you.&lt;/p&gt;
&lt;p&gt;I mainly tested populating and updating the list with about forty numbers of mixed types. I did make some quick tests (and adjustments) with a list of about 1000 Direct Routing numbers and that has worked well for me so far. If you manage a lot of phone numbers and want to try the solution yourself, I’m also happy if you can provide feedback on how it performs with even more numbers.&lt;/p&gt;
&lt;p&gt;As always, I hope you like what I’ve been up to!&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
